<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Anaconda镜像下载地址</title>
    <url>/Anaconda%E9%95%9C%E5%83%8F%E4%B8%8B%E8%BD%BD%E5%9C%B0%E5%9D%80.html</url>
    <content><![CDATA[<p>清华大学镜像：<a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/</a><br><img src="https://img-blog.csdnimg.cn/20200217154416803.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<a id="more"></a>
<p>这里建议大家下载这里画圈的版本，是python3.6的Windows版本。</p>
<p>我试了anaconda官网的下载，基本速度在10k左右；用清华镜像下载的话速度在6M上下，速度很快。</p>
<p>安装的话就是正常安装，安装过程中全部选择默认就可以了，我也试过不用默认的安装方式，并未发现什么不同。所以不用担心。</p>
<p>下次会发一篇关于新手如何了解anaconda的文章。</p>
]]></content>
      <categories>
        <category>python</category>
        <category>入门</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>anaconda</tag>
      </tags>
  </entry>
  <entry>
    <title>Command “python setup.py egg_info” failed——完美解决</title>
    <url>/Command%20%E2%80%9Cpython%20setup.py%20egg_info%E2%80%9D%20failed%E2%80%94%E2%80%94%E5%AE%8C%E7%BE%8E%E8%A7%A3%E5%86%B3.html</url>
    <content><![CDATA[<p>用 ubuntu 安装 <code>django-mdeditor==0.1.13</code> 时报错：</p>
<blockquote>
<p>Command “python setup.py egg_info” failed with error code 1 in /tmp/pip-build-2XpM94/django-mdeditor/</p>
</blockquote>
<p>有人说是<code>setuptools</code>的版本太低，于是我镜像源下更新了一下： <code>pip install -i https://pypi.tuna.tsinghua.edu.cn/simple --upgrade setuptools</code></p>
<p><img src="https://img-blog.csdnimg.cn/20200518185849980.png" alt="在这里插入图片描述"></p>
<a id="more"></a>
<p>完全没用</p>
<p><img src="https://img-blog.csdnimg.cn/20200518185647662.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>解决方法：</strong><code>pip3 install django-mdeditor==0.1.13</code></p>
<p><img src="https://img-blog.csdnimg.cn/20200518185754776.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>问题解决，之前安装 Django 也是这种报错，<code>pip</code> 换成 <code>pip3</code> 就完全解决了</p>
]]></content>
      <categories>
        <category>python</category>
        <category>error&amp;库</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>error&amp;库</tag>
        <tag>ubuntu</tag>
      </tags>
  </entry>
  <entry>
    <title>ERROR Cannot uninstall &#39;xxx&#39;. It is a distutils installed project and thus we cannot accurately</title>
    <url>/ERROR%EF%BC%9ACannot%20uninstall%20&#39;xxx&#39;.%20It%20is%20a%20distutils%20installed%20project%20and%20thus%20we%20cannot%20accurately.html</url>
    <content><![CDATA[<p>今天安装 <code>serial</code> 时报错：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ERROR: Cannot uninstall <span class="string">'PyYAML'</span>. It <span class="keyword">is</span> a distutils installed project <span class="keyword">and</span> thus we</span><br><span class="line">       cannot accurately determine which files belong to it which would lead to </span><br><span class="line">       only a partial uninstall .</span><br><span class="line">错误：无法卸载“ PyYAML”。 这是一个distutils安装的项目，因此我们</span><br><span class="line">        无法准确确定哪些文件属于该文件，这将导致</span><br><span class="line">        仅部分卸载</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>我的环境：win10、py3.6</p>
<p>解决办法：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">报错 Cannot uninstall <span class="string">'abcd'</span>，那就 pip install --ignore-installed abcd</span><br></pre></td></tr></table></figure>

<p>因为我报错 <code>Cannot uninstall &#39;PyYAML&#39;</code>，所以</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip install --ignore-installed pyyaml</span><br><span class="line"><span class="comment">#Successfully installed pyyaml-5.3.1</span></span><br><span class="line"><span class="string">'安装完成后,再下载自己想要下载的包'</span></span><br><span class="line">pip install serial</span><br><span class="line"><span class="comment">#Successfully installed iso8601-0.1.12 serial-0.0.97</span></span><br></pre></td></tr></table></figure>
<p>就成功解决了。</p>
]]></content>
      <categories>
        <category>python</category>
        <category>error&amp;库</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>error&amp;库</tag>
      </tags>
  </entry>
  <entry>
    <title>MATLAB 的global函数（全局变量）—从python和MAT实例中详细解释</title>
    <url>/MATLAB%20%E7%9A%84global%E5%87%BD%E6%95%B0%EF%BC%88%E5%85%A8%E5%B1%80%E5%8F%98%E9%87%8F%EF%BC%89%E2%80%94%E4%BB%8Epython%E5%92%8CMAT%E5%AE%9E%E4%BE%8B%E4%B8%AD%E8%AF%A6%E7%BB%86%E8%A7%A3%E9%87%8A.html</url>
    <content><![CDATA[<p>今天本来发布了用摄像头 gui 拍照的程序，然后有人私信我问其中的global函数的使用方法。</p>
<p>我想了一下，就以摄像头拍照为例子去解释一下这个函数的用法吧。</p>
<p>但是首先用python中的一个小例子来说明一下：</p>
<a id="more"></a>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;YOU = <span class="string">'老大'</span></span><br><span class="line">&gt;&gt;&gt;<span class="function"><span class="keyword">def</span> <span class="title">fun</span><span class="params">()</span>:</span></span><br><span class="line">		YOU = <span class="string">'老二'</span></span><br><span class="line">		<span class="keyword">print</span>（YOU）</span><br><span class="line"></span><br><span class="line">&gt;&gt;&gt;fun()</span><br><span class="line">&gt;&gt;&gt;print(YOU)</span><br></pre></td></tr></table></figure>
<p>大家应该知道结果是</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">老二</span><br><span class="line">老大</span><br></pre></td></tr></table></figure>
<p>但如果使用global：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"> I = <span class="string">'老大'</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> I</span><br><span class="line">    I=<span class="string">'老二'</span>    </span><br><span class="line">    print(I)</span><br><span class="line">    </span><br><span class="line">fun()</span><br><span class="line">print(I)</span><br></pre></td></tr></table></figure>
<p>在这里简单想下就是使用global定义之后，函数内的变量也就可以被改变了</p>
<p>就像变量与参数之间的关系，但是使用global之后，参数就变成真实的变量了，可以在define的函数中改变之前定义的值，很有意思。</p>
<p>结果可想而知：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">老二</span><br><span class="line">老二</span><br><span class="line">%%%%%谁**是老二啊？？？！！！要当就当老大啊！！！</span><br></pre></td></tr></table></figure>
<p>所以代码应该改成这样：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"> I = <span class="string">'你是老二吧，哈哈'</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> I</span><br><span class="line">    I=<span class="string">'我才是老大，哈哈哈哈'</span>    </span><br><span class="line">    print(I)</span><br><span class="line">    </span><br><span class="line">fun()</span><br><span class="line">print(I)</span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">我才是老大，哈哈哈哈</span><br><span class="line">我才是老大，哈哈哈哈</span><br></pre></td></tr></table></figure>

<p>OK 现在返回的就是你心底最先说的话吧，，哈哈，不开玩笑了……</p>
<p>下面看看在matlab实例项目中的应用吧：</p>
<p><img src="https://img-blog.csdnimg.cn/20200219193459740.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>话不多说，直接上代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function">function <span class="title">pushbutton1_Callback</span><span class="params">(hObject, eventdata, handles)</span></span></span><br><span class="line"><span class="function">% hObject    handle to <span class="title">pushbutton1</span> <span class="params">(see GCBO)</span></span></span><br><span class="line"><span class="function">% eventdata  reserved - to be defined in a future version of MATLAB</span></span><br><span class="line"><span class="function">% handles    structure with handles and user <span class="title">data</span> <span class="params">(see GUIDATA)</span></span></span><br><span class="line"><span class="function">		vid </span>= videoinput(<span class="string">'winvideo'</span>,<span class="number">1</span>);%调用摄像头</span><br><span class="line">		axes = (handles.axes1);%指定figure</span><br><span class="line">		preview(vid);%显示视频</span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pushbutton2_Callback</span>(<span class="params">hObject, eventdata, handles</span>)</span></span><br><span class="line">% hObject    handle to pushbutton2 (see GCBO)</span><br><span class="line">% eventdata  reserved - to be defined <span class="keyword">in</span> a future version <span class="keyword">of</span> MATLAB</span><br><span class="line">% handles    structure <span class="keyword">with</span> handles and user data (see GUIDATA)</span><br><span class="line">		frame = getsnapshot(vid);%获取每一帧</span><br><span class="line">		I = ycbcr2rgb(frame);%RGB图像</span><br><span class="line">		imwrite(I,<span class="string">'csdn.png'</span>);</span><br></pre></td></tr></table></figure>
<p>如果我代码是这样的话，命令行一定会报错：未定义变量‘vid’</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">未定义函数或变量 <span class="string">'vid'</span>。</span><br></pre></td></tr></table></figure>

<p>大家看到pushbutton_1中定义vid在pushbutton_2中调用不了</p>
<p>理由很简单，vid是push_1中的局部变量</p>
<p>所以解决这个问题最好就是在push_1和push_2中把vid定义为全局变量</p>
<p>而实现这个操作的就是global函数。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="function">function <span class="title">pushbutton1_Callback</span><span class="params">(hObject, eventdata, handles)</span></span></span><br><span class="line"><span class="function">% hObject    handle to <span class="title">pushbutton1</span> <span class="params">(see GCBO)</span></span></span><br><span class="line"><span class="function">% eventdata  reserved - to be defined in a future version of MATLAB</span></span><br><span class="line"><span class="function">% handles    structure with handles and user <span class="title">data</span> <span class="params">(see GUIDATA)</span></span></span><br><span class="line"><span class="function">		<span class="title">global</span><span class="params">(vid)</span></span></span><br><span class="line"><span class="function">		vid </span>= videoinput(<span class="string">'winvideo'</span>,<span class="number">1</span>);%调用摄像头</span><br><span class="line">		axes = (handles.axes1);%指定figure</span><br><span class="line">		preview(vid);%显示视频</span><br></pre></td></tr></table></figure>

<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">pushbutton2_Callback</span>(<span class="params">hObject, eventdata, handles</span>)</span></span><br><span class="line">% hObject    handle to pushbutton2 (see GCBO)</span><br><span class="line">% eventdata  reserved - to be defined <span class="keyword">in</span> a future version <span class="keyword">of</span> MATLAB</span><br><span class="line">% handles    structure <span class="keyword">with</span> handles and user data (see GUIDATA)</span><br><span class="line">		global(vid)</span><br><span class="line">		frame = getsnapshot(vid);%获取每一帧</span><br><span class="line">		I = ycbcr2rgb(frame);%RGB图像</span><br><span class="line">		imwrite(I,<span class="string">'csdn.png'</span>);</span><br></pre></td></tr></table></figure>
<p>而加上全局变量后就可以正常运行。</p>
<p>好了，这样的global函数就说完了。</p>
<p>题外话：</p>
<p>最近新型冠状病毒疫情有所好转，我老爸在家把盗墓笔记全部电影电视剧看完了</p>
<p>现在拉着我们家人一起看斗罗大陆的动画片….(不过还真的挺好看的哈哈哈)</p>
<p>不说了，赶快陪爸妈看斗罗大陆动画片了…</p>
<p>希望疫情赶快结束吧！！！</p>
]]></content>
      <categories>
        <category>MATLAB</category>
      </categories>
      <tags>
        <tag>MATLAB</tag>
      </tags>
  </entry>
  <entry>
    <title>MATLAB安装USB Webcams工具箱出现‘error’</title>
    <url>/MATLAB%E5%AE%89%E8%A3%85USB%20Webcams%E5%B7%A5%E5%85%B7%E7%AE%B1%E5%87%BA%E7%8E%B0%E2%80%98error%E2%80%99.html</url>
    <content><![CDATA[<p>下载matlab的Support Package for USB Webcams</p>
<p><img src="https://img-blog.csdnimg.cn/20200208215954945.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<a id="more"></a>
<p>点击安装后出现错误，无法安装<br> receive the error “There was a problem downloading the Support Package”<br> 出现这种情况一般是因为电脑和工具箱的服务器连接错误，可能是防火墙阻止连接，可以暂时禁止防护软件再重新安装。<br> 在这里说一下：有些情况重新试几次就行，但是如果一直不行就可能是proxy、firewall的原因。<br>我经过一番折腾已经下载完成了：<br><img src="https://img-blog.csdnimg.cn/20200208224301292.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>对于proxy问题，大家可以找下相关文章。<br>对于firewall<br>如果正在运行firewall，需要绕过阻碍连接mathworks服务器。<br>mathworks安装程序需要联系以下端口和地址上的mathworks服务器：<br>登录：mathworks.com<br>服务.mathworks.com<br>TCP端口80和443<br>Firewall需要绕过两个端口上两个地址的阻碍连接，<br>这些服务器不使用静态IP地址，为动态IP地址。所以需要使用域名搜索。   </p>
<p>如果有问题可以再联系我，也可以找相关文章，此篇文章会在以后遇到具体问题时再做详细更改。           </p>
]]></content>
      <categories>
        <category>MATLAB</category>
      </categories>
      <tags>
        <tag>MATLAB</tag>
      </tags>
  </entry>
  <entry>
    <title>MATLAB自适应直方图均衡—adapthisteq</title>
    <url>/MATLAB%E8%87%AA%E9%80%82%E5%BA%94%E7%9B%B4%E6%96%B9%E5%9B%BE%E5%9D%87%E8%A1%A1%E2%80%94adapthisteq.html</url>
    <content><![CDATA[<p>今天写调用摄像头处理图像函数，用到了adapthisteq函数，顺便对adapthisteq函数做了一些总结。</p>
<p>adapthisteq：适应直方图均衡化对比度限制器。通过转换强度图像中的值来改变图像的对比度。</p>
<p>histeq：自适应直方图均衡。</p>
<a id="more"></a>
<p>与histeq函数不同的是，adapthisteq处理的是图片的小块区域的数据，而不是整个图像对比度增强，使输出区域的直方图大约匹配指定的直方图。相邻的小块用双线性插值把它们混合在一起，以消除人工诱导的边界。对比，尤其是在同质区域，可以限制，以避免放大图像中可能存在的噪声。</p>
<p>G = adapthisteq(I, param1, val1, param2, val2, …)</p>
<p><strong>‘NumTiles’</strong>：由正整数组成的二元向量[ m, n ]。[ m, n ]为指定小块区域的行列数，M 和 n 都必须至少为2。图像块的总数等于 m * n。 默认值为 [ 8,  8 ]。 </p>
<p><strong>‘ClipLimit’</strong>  ：是从0到1的实数标量，用于限制对比度增强。数值越大，对比度越高。默认值为: 0.01。</p>
<p><strong>‘NBins’</strong>：正整数标量。为构建直方图时使用的直方图设置容器数增强对比度的转换。更高的值结果导致有在更大的动态范围，代价是较慢的处理速度。 默认值: 256。</p>
<p> <strong>‘Range’</strong>：’original’ 或 ‘full’. 控制输出图像数据的范围。 如果‘ Range’设置为‘ original’ ，则范围限制为[ min (i (：))  max (i (：))]。 否则，默认情况下，或者当‘ Range’设置为‘ full’时，将使用输出图像类的全部范围(e.g.    uint8  是 [0 255])。默认值：full。</p>
<p><strong>‘Distribution’</strong>：’uniform’, ‘rayleigh’, ‘exponential’。通过指定分布类型，为图像块设置所需的直方图形状。 默认值：uniform。</p>
<p><strong>‘Alpha’</strong>：是一个分布参数，当“ Dist”为“ rayleigh”或“ exponential”时可以使用这个参数。 默认值：0.4。</p>
<p>下面是随手写的一份代码，可以直观的看到adapthisteq的使用方法和使用效果。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">I &#x3D; rgb2gray(imread(&#39;tupian.png&#39;));</span><br><span class="line">figure;</span><br><span class="line">imshow(I);</span><br><span class="line"></span><br><span class="line">I1 &#x3D; adapthisteq(I);</span><br><span class="line">figure;</span><br><span class="line">imshow(I1);</span><br><span class="line"></span><br><span class="line">I2 &#x3D; adapthisteq(I,&#39;NumTiles&#39;,[50 50]);</span><br><span class="line">figure;</span><br><span class="line">imshow(I2);</span><br><span class="line"></span><br><span class="line">I3 &#x3D; adapthisteq(I,&#39;NumTiles&#39;,[50 50],&#39;ClipLimit&#39;,0.5);</span><br><span class="line">figure;</span><br><span class="line">imshow(I3);</span><br><span class="line"></span><br><span class="line">I4 &#x3D; adapthisteq(I,&#39;NumTiles&#39;,[50 50],&#39;ClipLimit&#39;,...</span><br><span class="line">0.5,&#39;NBins&#39;,400);</span><br><span class="line">figure;</span><br><span class="line">imshow(I4);</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/2020020917231924.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20200209172340536.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200209172424575.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020020917250378.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200209172520303.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这里注意第一行代码，</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">I &#x3D; rgb2gray(imread(&#39;tupian.png&#39;));</span><br><span class="line">I &#x3D; imread(&#39;tupian.png&#39;);</span><br></pre></td></tr></table></figure>

<p>很多人会忘记做灰度处理导致adapthisteq使用错误。</p>
<p>写文章时间较紧，如有错误，还请指正。</p>
]]></content>
      <categories>
        <category>MATLAB</category>
      </categories>
      <tags>
        <tag>MATLAB</tag>
        <tag>语法笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>MATLAB账户未关联到许可证—无法打开help文档—解决方法</title>
    <url>/MATLAB%E8%B4%A6%E6%88%B7%E6%9C%AA%E5%85%B3%E8%81%94%E5%88%B0%E8%AE%B8%E5%8F%AF%E8%AF%81%E2%80%94%E6%97%A0%E6%B3%95%E6%89%93%E5%BC%80help%E6%96%87%E6%A1%A3%E2%80%94%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95.html</url>
    <content><![CDATA[<p>今天在使用help命令时，需要参阅一些函数的help文档，却发现我的matlab无法关联到许可证<br><img src="https://img-blog.csdnimg.cn/20200211154400903.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<a id="more"></a>
<p>对于一些朋友，只需要在命令行输入‘license’便可得到许可证编号。但我的matlab是破解版的，所以没有许可证。</p>
<p>再参阅的国外论坛后，找到了解决方法。<br>下面就教大家如何解决：<br><img src="https://img-blog.csdnimg.cn/20200211154735579.png" alt="在这里插入图片描述"><br>点击‘预设项’—‘帮助’<br><img src="https://img-blog.csdnimg.cn/20200211155006810.png" alt="在这里插入图片描述"></p>
<p>选择‘安装在本地’—‘在小窗口中’<br><img src="https://img-blog.csdnimg.cn/20200211155132806.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>即可解决问题，方法简单，只供破解版用户参阅。<br>有问题可联系我。</p>
]]></content>
      <categories>
        <category>MATLAB</category>
      </categories>
      <tags>
        <tag>MATLAB</tag>
      </tags>
  </entry>
  <entry>
    <title>Matlab如何打开c++文件</title>
    <url>/Matlab%E5%A6%82%E4%BD%95%E6%89%93%E5%BC%80c++%E6%96%87%E4%BB%B6.html</url>
    <content><![CDATA[<p>最近在尝试视觉分析的项目</p>
<p>总是会遇到一些cpp文件需要在matlab中运行，在这里记录一下操作</p>
<p><strong>1、命令行输入</strong> ：<code>mex -setup</code></p>
<p><img src="https://img-blog.csdnimg.cn/20200314231840100.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<a id="more"></a>
<p><strong>2、我这里需要再选择语言的种类</strong></p>
<p>点击 <code>mex -setup C++</code></p>
<p><img src="https://img-blog.csdnimg.cn/20200314232025601.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>3、运行 C 文件</strong></p>
<p>输入 mex +文件名和后缀</p>
<p>比如我这里需要运行名为 maxsubarray2D.cpp 的文件，</p>
<p>所以我输入：<code>mex maxsubarray2D.cpp</code><br><img src="https://img-blog.csdnimg.cn/20200314232301967.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200314232508289.png" alt="在这里插入图片描述"><br>显示编译完成后就可以进行接下来的操作了。</p>
]]></content>
      <categories>
        <category>MATLAB</category>
      </categories>
      <tags>
        <tag>MATLAB</tag>
      </tags>
  </entry>
  <entry>
    <title>ModuleNotFoundError：No module named “ckeditor”</title>
    <url>/ModuleNotFoundError%EF%BC%9ANo%20module%20named%20%E2%80%9Cckeditor%E2%80%9D.html</url>
    <content><![CDATA[<p><img src="https://img-blog.csdnimg.cn/20200518195810898.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<a id="more"></a>
<p>我使用 <code>pip3 install ckeditor Collecting ckeditor</code> 安装也报错</p>
<p>解决方法：<code>pip3 install django-ckeditor
Collecting django-ckeditor</code></p>
<p><img src="https://img-blog.csdnimg.cn/20200518195956173.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>python</category>
        <category>error&amp;库</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>error&amp;库</tag>
      </tags>
  </entry>
  <entry>
    <title>No module named &#39;pkg_resources&#39;解决方法</title>
    <url>/No%20module%20named%20&#39;pkg_resources&#39;%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95.html</url>
    <content><![CDATA[<blockquote>
<p>No module named ‘pkg_resources’</p>
</blockquote>
<p>我在安装 pip 时出现这种问题</p>
<p><strong>解决方法:</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">curl https://bootstrap.pypa.io/ez_setup.py | python</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200311193145656.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>等待 Downloading setuptools 完成后即可.</p>
]]></content>
      <categories>
        <category>python</category>
        <category>error&amp;库</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>error&amp;库</tag>
      </tags>
  </entry>
  <entry>
    <title>No command &#39;conda creat&#39;——解决方法</title>
    <url>/No%20command%20&#39;conda%20creat&#39;%E2%80%94%E2%80%94%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95.html</url>
    <content><![CDATA[<p>在 anacond 中创建一个新的环境python3.6：</p>
<blockquote>
<p>输入:<br><code>conda create -n yolo python=3.6</code></p>
<p>报错：<br><code>CommandNotFoundError: No command &#39;conda creat&#39;.
Did you mean &#39;conda create&#39;?</code></p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200315230215285.png" alt="在这里插入图片描述"></p>
<a id="more"></a>
<h2 id="原因："><a href="#原因：" class="headerlink" title="原因："></a>原因：</h2><blockquote>
<p>可能是 conda 版本太高，降级即可：</p>
</blockquote>
<h2 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h2><p><strong>anacond 中输入：</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">conda install -n base conda==<span class="number">4.6</span><span class="number">.7</span></span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/20200315230352988.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>出现 <code>Proceed ([y]/n)?</code></strong></p>
<p><strong>输入：y</strong></p>
<p><img src="https://img-blog.csdnimg.cn/20200315230444682.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>等待直到下载成功</strong></p>
<p><img src="https://img-blog.csdnimg.cn/20200315230542856.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>python</category>
        <category>error&amp;库</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>error&amp;库</tag>
      </tags>
  </entry>
  <entry>
    <title>Office2016与Visio2016不兼容——已解决</title>
    <url>/Office2016%E4%B8%8EVisio2016%E4%B8%8D%E5%85%BC%E5%AE%B9%E2%80%94%E2%80%94%E5%B7%B2%E8%A7%A3%E5%86%B3.html</url>
    <content><![CDATA[<p>很久之前为了写专利下载的Visio2016，平时也只用wps，没用过office。</p>
<p>最近安装 office 时提示：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">很抱歉，无法安装office，因为您的计算机上已经安装了office程序：</span><br><span class="line"></span><br><span class="line">Microsoft Office <span class="number">32</span>-bit Components <span class="number">2016</span></span><br><span class="line">Microsoft Visio Professional <span class="number">2016</span></span><br><span class="line"></span><br><span class="line"><span class="number">32</span>位和<span class="number">64</span>位版本的Office程序不兼容，因此您一次只能安装一种类型。</span><br><span class="line">请尝试安装<span class="number">64</span>位版本的Office，或卸载其他<span class="number">64</span>位Office程序，然后再尝试此安装。</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>因为不想卸载 visio2016，所以就把 office 安装在了虚拟机里，可是使用起来异常麻烦</p>
<p>只能不停尝试如何才能实现兼容</p>
<p><strong>在国外的论坛上终于找到了解决方法：</strong></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">office的安装是即点即用，visio的安装是 windows installer</span><br><span class="line"></span><br><span class="line">不管我们电脑里安装了visio还是office</span><br><span class="line"></span><br><span class="line">安装另一个软件时都会报错</span><br><span class="line"></span><br><span class="line">所以我们使用两个软件同时安装的方法就可以完美解决问题</span><br></pre></td></tr></table></figure>


<p><strong>（1）删除现有的 office 或 visio</strong> </p>
<p>进入控制面板把现有的软件删除，删除过后电脑关机，以免有卸载残留。<br><img src="https://img-blog.csdnimg.cn/20200405142708366.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>（2）同时安装visio和office</strong></p>
<p><strong>注意这里的一个坑</strong>  <strong>：</strong> 虽然是同时安装，但是我们也要也有安装的先后啊！！！！先安装visio再安装office才行。</p>
<p>先打开 visio2016 的安装 exe 文件，设置好安装路径后，点击“开始安装”。</p>
<p>然后立刻打开office的 exe 文件，立刻开始安装office </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">顺序千万不能弄反，我昨晚就先安装office再安装visio时，就报错说:</span><br><span class="line">office的即点即用正在使用，无法安装visio</span><br></pre></td></tr></table></figure>

<p>下面附上一张昨晚的安装截图：<br><img src="https://img-blog.csdnimg.cn/20200405143207623.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>现在我的visio2016和office2016 已经可以正常使用了</p>
<p>终于不用写个作业还要跑到虚拟机里弄了….</p>
]]></content>
      <categories>
        <category>win10</category>
      </categories>
      <tags>
        <tag>win10</tag>
      </tags>
  </entry>
  <entry>
    <title>Python 官方的中文文档</title>
    <url>/Python%20%E5%AE%98%E6%96%B9%E7%9A%84%E4%B8%AD%E6%96%87%E6%96%87%E6%A1%A3.html</url>
    <content><![CDATA[<p>今天打开Python documentation 查阅函数使用方法，像往常一样，我打开了百度翻译</p>
<p>突发奇想，要不上网找找有没有哪位大佬翻译好的中文文档，发现python官网上竟然发布了python的中文文档….(python初学者表示之前真的不知道)</p>
<p>Python官方文档链接：<a href="https://docs.python.org/zh-cn/3/" target="_blank" rel="noopener">https://docs.python.org/zh-cn/3/</a></p>
<a id="more"></a>

<p><img src="https://img-blog.csdnimg.cn/20200307155243677.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>其中包含了从2.7到3.8各个版本的文档</p>
<p><img src="https://img-blog.csdnimg.cn/20200307155833344.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>这里是标准库的各个模块</p>
<p><img src="https://img-blog.csdnimg.cn/20200307155939236.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>以 difflib 为例</p>
<p><img src="https://img-blog.csdnimg.cn/20200307160024922.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<hr>
<p>哈哈哈哈哈，以后再也不用担心看不懂英文了</p>
<p>可以硬气的关闭“百度翻译”了</p>
]]></content>
      <categories>
        <category>python</category>
        <category>入门</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>Python99道经典练习题答案</title>
    <url>/Python99%E9%81%93%E7%BB%8F%E5%85%B8%E7%BB%83%E4%B9%A0%E9%A2%98%E7%AD%94%E6%A1%88.html</url>
    <content><![CDATA[<p>转载与百度文库：<br><a href="https://wenku.baidu.com/view/bc745bdaf6ec4afe04a1b0717fd5360cbb1a8d16.html" target="_blank" rel="noopener">https://wenku.baidu.com/view/bc745bdaf6ec4afe04a1b0717fd5360cbb1a8d16.html</a></p>
]]></content>
      <categories>
        <category>python</category>
        <category>入门</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>入门练习题</tag>
      </tags>
  </entry>
  <entry>
    <title>Python中 pip 的安装——windows系统</title>
    <url>/Python%E4%B8%AD%20pip%20%E7%9A%84%E5%AE%89%E8%A3%85%E2%80%94%E2%80%94windows%E7%B3%BB%E7%BB%9F.html</url>
    <content><![CDATA[<p>我的 Windows 环境下的 python 是没有 pip 文件的，所以想要实现 pip 命令就要手动安装pip 文件</p>
<p>这篇和接下来的文章我会演示　windows 系统下的 “IDLE” 安装 pip 可能遇到的所有问题</p>
<p><strong>pip 20.0.2官方下载地址</strong>：<a href="https://pypi.org/project/pip/#description" target="_blank" rel="noopener">https://pypi.org/project/pip/#description</a></p>
<p><img src="https://img-blog.csdnimg.cn/2020031117175539.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<a id="more"></a>
<p>点击 Download files下载 pip-20.0.2 tar.gz</p>
<p><img src="https://img-blog.csdnimg.cn/20200311171901315.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>解压后找到 setup.py 所在文件夹的路径</p>
<p><img src="https://img-blog.csdnimg.cn/20200311172223338.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>按”win+ R”输入 cmd</p>
<p><img src="https://img-blog.csdnimg.cn/20200311172503467.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>输入 ：cd +setup.py 所在文件夹的路径</p>
<p>我的路径为：</p>
<blockquote>
<p>C:\Users\27511\Desktop\pip-20.0.2\pip-20.0.2</p>
</blockquote>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">cd C:\Users\<span class="number">27511</span>\Desktop\pip<span class="number">-20.0</span><span class="number">.2</span>\pip<span class="number">-20.0</span><span class="number">.2</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200311172830673.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>————————————————————————————————————<br>按理说再输入 python setup.py install 就能完成安装</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python setup.py install</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200311173048620.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>但是我这里报错了：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ModuleNotFoundError: No module named <span class="string">'setuptools'</span></span><br></pre></td></tr></table></figure>
<p>这是很常遇见的错误提示，不用担心，这是因为Windows环境下Python默认是没有安装 setuptools 这个模块的，这也是一个第三方模块。</p>
<p><strong>两种方法：</strong></p>
<p><strong>1、setuptools 46.0.0官方下载链接：</strong><a href="https://pypi.org/project/setuptools/" target="_blank" rel="noopener">https://pypi.org/project/setuptools/</a></p>
<p>解压后复制 setuptools 文件放在 python 的安装路径下 Lib 文件夹里就行了。</p>
<p><img src="https://img-blog.csdnimg.cn/20200311175701782.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20200311175919678.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>安装了setuptools之后，再运行“python setup.py install”就可以了。</p>
<p><strong>2、脚本链接：</strong><a href="https://bootstrap.pypa.io/ez_setup.py" target="_blank" rel="noopener">https://bootstrap.pypa.io/ez_setup.py</a></p>
<p>直接复制代码在IDLE中运行，会自动运行 exe ，识别python版本，自动下载setuptools 并安装。</p>
<p><img src="https://img-blog.csdnimg.cn/20200311174553858.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>之后再重新python setup.py install运行就可以了</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">python setup.py install</span><br></pre></td></tr></table></figure>
<hr>
<hr>
<hr>
<hr>
<hr>
<hr>
<p>介绍下可能出现的问题：<br>|问题|解决方法  |<br>|–|–|<br>| 1、运行脚本后只下载了setuptools压缩包，没有自动安装 |  那就解压，复制 setuptools 文件放在 python 的安装路径下 Lib 文件夹里就行（上面有具体介绍）<br>|2、运行 python setup.py install 后又出现其他 No module named ‘ ***’|再下载这种库的压缩包，复制相关文件放在 python 的安装路径下 Lib 文件夹里就行|</p>
<p>如果有人接下来遇到各种各样的 No module named ‘ ***’</p>
<p>那么可以参照我接下来的文章，或留言也可以</p>
<p>因为我上文演示的 python 未安装任何多余的库</p>
<p>接下来会继续解决所有的 No module named ‘ ***’  问题</p>
<p>直到这个 IDLE 可以使用 pip 命令为止</p>
]]></content>
      <categories>
        <category>python</category>
        <category>error&amp;库</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>error&amp;库</tag>
      </tags>
  </entry>
  <entry>
    <title>Python学习笔记_1：print中end的用法 print（‘’，end=&#39;&#39;）</title>
    <url>/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_1%EF%BC%9Aprint%E4%B8%ADend%E7%9A%84%E7%94%A8%E6%B3%95%20print%EF%BC%88%E2%80%98%E2%80%99%EF%BC%8Cend=&#39;&#39;%EF%BC%89.html</url>
    <content><![CDATA[<p>学了那么久的python，都没有过系统的总结一下知识点，所以我决定在这里出一次python知识点集合——Python学习笔记。<br><img src="https://img-blog.csdnimg.cn/20200302170928468.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<a id="more"></a>
<p>哈哈哈哈，就当是自己随时可以查阅的笔记本了</p>
<p>下面开始介绍第一知识点：</p>
<p>print 中 end 的用法：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">%先让输出两个 str</span><br><span class="line">%则两个 str 一定经过一次 <span class="keyword">print</span> 的换行操作</span><br><span class="line">&gt;&gt;&gt;print(<span class="string">'ABC'</span>)</span><br><span class="line">&gt;&gt;&gt;print(<span class="string">'DEF'</span>)</span><br><span class="line">ABC</span><br><span class="line">DEF</span><br></pre></td></tr></table></figure>
<p>如果我加上 “end”</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;print(<span class="string">'ABC'</span>,end =<span class="string">''</span>) %这里的end中没有东西</span><br><span class="line">&gt;&gt;&gt;print(<span class="string">'DEF'</span>)</span><br><span class="line">%则结果为</span><br><span class="line">ABCDEF</span><br><span class="line">%因为end的作用就是告诉<span class="keyword">print</span>，将<span class="keyword">print</span>自带</span><br><span class="line">的换行用end中指定的str代替</span><br></pre></td></tr></table></figure>
<p>如果我将end中填入‘ ’空格</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;print(<span class="string">'ABC'</span>,end =<span class="string">' '</span>)</span><br><span class="line">&gt;&gt;&gt;print(<span class="string">'DEF'</span>)</span><br><span class="line">ABC DEF</span><br></pre></td></tr></table></figure>
<p>如果我指定end中为其他数</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;&gt;print(<span class="string">'ABC'</span>,end =<span class="string">'123'</span>)</span><br><span class="line">&gt;&gt;&gt;print(<span class="string">'DEF'</span>)</span><br><span class="line">ABC123DEF</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>python</category>
        <category>语法笔记</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>语法笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Python学习笔记_2：判断str类型的函数</title>
    <url>/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_2%EF%BC%9A%E5%88%A4%E6%96%ADstr%E7%B1%BB%E5%9E%8B%E7%9A%84%E5%87%BD%E6%95%B0.html</url>
    <content><![CDATA[<p>相信大家都喜欢表情包吧</p>
<p>话说学习Python一定要坚持，持之以恒，万事开头难嘛</p>
<p><img src="https://img-blog.csdnimg.cn/2020030218253379.png" alt="在这里插入图片描述"></p>
<p>哈哈，稍微皮一下</p>
<a id="more"></a>
<p>经过整理</p>
<p>今天给大家介绍一下 python 中可以判断 str 类型的函数：</p>
<p>1、isdigit： 判断 str 是否为数字 </p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>I = <span class="string">'123'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(I.isdigit())</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">if</span> I.isdigit():</span><br><span class="line">&gt;&gt;&gt;		print(<span class="string">'yes'</span>)</span><br><span class="line">%输出结果为</span><br><span class="line"><span class="literal">True</span></span><br><span class="line">yes</span><br></pre></td></tr></table></figure>

<p>2、isalpha：判断 str 是否为字母</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>I = <span class="string">'Abc'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(I.isalpha())</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">if</span> I.isalpha()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>	print(<span class="string">'yes'</span>)</span><br><span class="line">%输出结果为</span><br><span class="line"><span class="literal">True</span></span><br><span class="line">yes</span><br></pre></td></tr></table></figure>

<p>3、isalnum：判断 str 是否为字母或数字</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>I = <span class="string">'A2c'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(I.isalnum())</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">if</span> I.isalnum()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>	print(<span class="string">'yes'</span>)</span><br><span class="line">%输出结果为</span><br><span class="line"><span class="literal">True</span></span><br><span class="line">yes</span><br></pre></td></tr></table></figure>
<p>4、islower：判断 str 是否为小写</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>I = <span class="string">'abc'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(I.islower())</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">if</span> I.islower()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>	print(<span class="string">'yes'</span>)</span><br><span class="line">%输出结果为</span><br><span class="line"><span class="literal">True</span></span><br><span class="line">yes</span><br></pre></td></tr></table></figure>

<p>5、isupper：判断 str 是否为大写</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>I = <span class="string">'ABC'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">if</span> I.isupper()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>	print(<span class="string">'yes'</span>)</span><br><span class="line">%输出结果为</span><br><span class="line"><span class="literal">True</span></span><br><span class="line">yes</span><br></pre></td></tr></table></figure>

<p>6、istitle：判断 str 是否仅有首字母大写</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>I = <span class="string">'Abc Def'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">if</span> I.istitle()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>	print(<span class="string">'yes'</span>)</span><br><span class="line">%输出结果为</span><br><span class="line"><span class="literal">True</span></span><br><span class="line">yes</span><br></pre></td></tr></table></figure>

<p>7、isspace：判断 str 是否为空格符</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>I = <span class="string">' '</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">if</span> I.isspace()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>	print(<span class="string">'yes'</span>)</span><br><span class="line">%输出结果为</span><br><span class="line"><span class="literal">True</span></span><br><span class="line">yes</span><br></pre></td></tr></table></figure>
<hr>
<hr>
<hr>
<p>看完梨泰院的第10集，心情复杂…唉<br><img src="https://img-blog.csdnimg.cn/20200302221055518.png" alt="在这里插入图片描述"></p>
<p>喝杯咖啡再回来继续更博文<br><img src="https://img-blog.csdnimg.cn/20200302220305485.png" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>python</category>
        <category>语法笔记</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>语法笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Python学习笔记_3：python 列表的使用方法—详细</title>
    <url>/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_3%EF%BC%9Apython%20%E5%88%97%E8%A1%A8%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95%E2%80%94%E8%AF%A6%E7%BB%86.html</url>
    <content><![CDATA[<p>今天已经开始了第三个 python 的笔记了</p>
<p>我想开始介绍一下列表的一些使用方法</p>
<p>“列表”是什么？？</p>
<p><img src="https://img-blog.csdnimg.cn/20200304181714958.png" alt="在这里插入图片描述"></p>
<p>其实就是C语言的数组,不知道为什么在python中有的人说列表有的人说数组</p>
<a id="more"></a>
<p>这个数组中可以存放存放所有我们学过的数据类型，甚至是汉字、标点符号。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>I = [<span class="number">123</span>,<span class="string">'A'</span>,<span class="string">'魔法师'</span>,<span class="string">'!'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(I)</span><br><span class="line">输出为</span><br><span class="line">[<span class="number">123</span>, <span class="string">'A'</span>, <span class="string">'魔法师'</span>, <span class="string">'!'</span>]</span><br></pre></td></tr></table></figure>
<p>这里的 <strong>I</strong> 就是一个列表，需要注意一点，列表中的数据不用加引号，但字母与汉字、标点符号是要加引号的。</p>
<p>而且列表中也可以添加列表：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>M = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>I = [<span class="number">123</span>,<span class="string">'A'</span>,<span class="string">'魔法师'</span>,<span class="string">'!'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(I)</span><br><span class="line">输出为</span><br><span class="line">[<span class="number">123</span>, <span class="string">'A'</span>, <span class="string">'魔法师'</span>, <span class="string">'!'</span>, [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]]</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200304182739884.png" alt="!\[在这里插入图片描述\](https://img-blog.csdnimg.cn/20200304182618958.png"><br>何止是有点意思，下面介绍列表的具体使用方法，更有意思嘞</p>
<p><strong>1、向列表中增添元素</strong>——————–</p>
<p>列表中增添元素可以用到三个函数：<strong>append、extend、insert</strong></p>
<p><strong>insert 是将元素插入任意位置</strong></p>
<p><strong>而append 和 extend 都是在列表末尾增添元素</strong></p>
<p><strong>但也有部分区别</strong></p>
<p><strong>先介绍一下append 和 extend</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>I = [<span class="number">123</span>,<span class="string">'A'</span>,<span class="string">'魔法师'</span>,<span class="string">'!'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>I.append(<span class="number">456</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(I)</span><br><span class="line">输出为</span><br><span class="line">[<span class="number">123</span>, <span class="string">'A'</span>, <span class="string">'魔法师'</span>, <span class="string">'!'</span>, <span class="number">456</span>]</span><br><span class="line">----------------------------------</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>I = [<span class="number">123</span>,<span class="string">'A'</span>,<span class="string">'魔法师'</span>,<span class="string">'!'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>I.extend(<span class="number">456</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(I)</span><br><span class="line">输出为</span><br><span class="line">[<span class="number">123</span>, <span class="string">'A'</span>, <span class="string">'魔法师'</span>, <span class="string">'!'</span>, <span class="number">456</span>]</span><br></pre></td></tr></table></figure>
<p>——————————————————————————————<br>而区别就在于如果添加的不是元素，而是一个新的列表的时候</p>
<p><strong>append 直接添加一个内置列表；</strong></p>
<p><strong>而 extend 是将列表中的元素分别添加进列表里：</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>I = [<span class="number">123</span>,<span class="string">'A'</span>,<span class="string">'魔法师'</span>,<span class="string">'!'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>I.append([<span class="string">'456'</span>,<span class="string">'ABC'</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(I)</span><br><span class="line">输出为</span><br><span class="line">[<span class="number">123</span>, <span class="string">'A'</span>, <span class="string">'魔法师'</span>, <span class="string">'!'</span>, [<span class="string">'456'</span>, <span class="string">'ABC'</span>]]</span><br><span class="line">--------------------------------------------</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>I = [<span class="number">123</span>,<span class="string">'A'</span>,<span class="string">'魔法师'</span>,<span class="string">'!'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>I.extend([<span class="string">'456'</span>,<span class="string">'ABC'</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(I)</span><br><span class="line">输出为</span><br><span class="line">[<span class="number">123</span>, <span class="string">'A'</span>, <span class="string">'魔法师'</span>, <span class="string">'!'</span>, <span class="string">'456'</span>, <span class="string">'ABC'</span>]</span><br></pre></td></tr></table></figure>
<p><strong><strong>下面介绍 insert 的用法：</strong></strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>I = [<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'D'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>I.insert(<span class="number">2</span>,<span class="string">'C'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(I)</span><br><span class="line">输出为</span><br><span class="line">[<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, <span class="string">'D'</span>]</span><br><span class="line">--------------------------------------</span><br><span class="line">% insert 添加新的列表时和 append 差不多</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>I = [<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'D'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>I.insert(<span class="number">2</span>,[<span class="string">'C'</span>,<span class="string">'3'</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(I)</span><br><span class="line">输出为</span><br><span class="line">[<span class="string">'A'</span>, <span class="string">'B'</span>, [<span class="string">'C'</span>, <span class="string">'3'</span>], <span class="string">'D'</span>]</span><br></pre></td></tr></table></figure>
<p>用　X．insert　就可以解决一切添加列表元素的问题了</p>
<p><strong>2、修改列表中的某个元素</strong>———————-</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>I = [<span class="string">'A'</span>,<span class="string">'B'</span>,[[<span class="string">'G'</span>,<span class="string">'D'</span>],<span class="string">'E'</span>],<span class="string">'F'</span>] %将G改为C </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>I[<span class="number">2</span>][<span class="number">0</span>][<span class="number">0</span>] = <span class="string">'C'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(I)</span><br><span class="line">结果变成了</span><br><span class="line">[<span class="string">'A'</span>, <span class="string">'B'</span>, [[<span class="string">'c'</span>, <span class="string">'D'</span>], <span class="string">'E'</span>], <span class="string">'F'</span>] </span><br><span class="line">%我们想要的样子</span><br></pre></td></tr></table></figure>

<p><strong>3、对列表进行排序</strong>———————<br>sort 函数将列表的数字或字母进行顺序排列</p>
<p>但列表中同时含有字母或数字时就会报错</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>I = [<span class="string">'A'</span>,<span class="string">'C'</span>,<span class="string">'D'</span>,<span class="string">'F'</span>,<span class="string">'E'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>I.sort()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(I)</span><br><span class="line">输出为</span><br><span class="line">[<span class="string">'A'</span>, <span class="string">'C'</span>, <span class="string">'D'</span>, <span class="string">'E'</span>, <span class="string">'F'</span>]</span><br></pre></td></tr></table></figure>
<p>还有一个好玩的函数 reverse ,可以将列表顺序颠倒</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>I = [<span class="string">'A'</span>,<span class="string">'C'</span>,<span class="string">'D'</span>,<span class="string">'F'</span>,<span class="string">'E'</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">2</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>I.reverse()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(I)</span><br><span class="line">输出为</span><br><span class="line">[<span class="number">2</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="string">'E'</span>, <span class="string">'F'</span>, <span class="string">'D'</span>, <span class="string">'C'</span>, <span class="string">'A'</span>]</span><br></pre></td></tr></table></figure>

<hr>
<p>到这里关于列表的常用使用函数基本都介绍了</p>
<p>最近学校天天上网课,心好累,好难啊啊啊啊啊</p>
<p><img src="https://img-blog.csdnimg.cn/20200304211049839.png" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>python</category>
        <category>语法笔记</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>语法笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Python学习笔记_4列表和元组的区别</title>
    <url>/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_4%EF%BC%9A%E5%88%97%E8%A1%A8%E5%92%8C%E5%85%83%E7%BB%84%E7%9A%84%E5%8C%BA%E5%88%AB.html</url>
    <content><![CDATA[<p>上节我主要详细的介绍了一下列表的用法</p>
<p>突然想起来需要说一下列表和元组的区别,所以这篇文章就简洁点,以文字为主</p>
<p><strong>列表:存放的是暂时的元素,可以更改,增添</strong></p>
<p><strong>元组:存放的是不可更改的元素,不可删除,不可添加,不可修改</strong></p>
<a id="more"></a>
<p>list ( [ string ] )：将 str 转化为列表</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>exmp = <span class="string">'abcd efgh'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>list(exmp)</span><br><span class="line">输出为</span><br><span class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">' '</span>, <span class="string">'e'</span>, <span class="string">'f'</span>, <span class="string">'g'</span>, <span class="string">'h'</span>]</span><br></pre></td></tr></table></figure>

<p>tuple ( [ string ] )：将 str 转化为元组</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>exmp = <span class="string">'abcd efgh'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>tuple(exmp)</span><br><span class="line">输出为</span><br><span class="line">(<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d'</span>, <span class="string">' '</span>, <span class="string">'e'</span>, <span class="string">'f'</span>, <span class="string">'g'</span>, <span class="string">'h'</span>)</span><br></pre></td></tr></table></figure>

<p>当我们的项目中需要一些永远不用更改的数据,那就用元组</p>
<p>如果我们需要后期维护并修改时就用列表</p>
<p>但是在一定条件下我们需要改变元组中的数据或者增添一些新元素难道就没办法了嘛?<br><img src="https://img-blog.csdnimg.cn/20200304212858622.png" alt="在这里插入图片描述"></p>
<p>当然不是,我们可以新建一个元组来代替原来的元组啊….是不是方法很沙雕</p>
<p>不过在这里要说一个关于在元组之中添加元素的方法</p>
<p>比如要在下列元组的’B’’E’中添加’C’’D’</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>I = (<span class="string">'A'</span>,<span class="string">'B'</span>,<span class="string">'E'</span>,<span class="string">'F'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>I = I[<span class="number">0</span>:<span class="number">2</span>]+(<span class="string">'C'</span>,<span class="string">'D'</span>)+I[<span class="number">2</span>:]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(I)</span><br><span class="line">输出为</span><br><span class="line">(<span class="string">'A'</span>, <span class="string">'B'</span>, <span class="string">'C'</span>, <span class="string">'D'</span>, <span class="string">'E'</span>, <span class="string">'F'</span>)</span><br></pre></td></tr></table></figure>
<p>这样如果在遇到紧急需要处理的问题时能省事的解决</p>
<p>但如果真的要对元组改动太大</p>
<p>那只能新建一个元组了,所以我们一般不太会使用元组。</p>
]]></content>
      <categories>
        <category>python</category>
        <category>语法笔记</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>语法笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Python学习笔记_5：字符串格式化符号及进制转换</title>
    <url>/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_5%EF%BC%9A%E5%AD%97%E7%AC%A6%E4%B8%B2%E6%A0%BC%E5%BC%8F%E5%8C%96%E7%AC%A6%E5%8F%B7%E5%8F%8A%E8%BF%9B%E5%88%B6%E8%BD%AC%E6%8D%A2.html</url>
    <content><![CDATA[<p>介绍下经常用得到的格式化字符</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">%c	：格式化字符及其ASCII码</span><br><span class="line">%s	：格式化字符串</span><br><span class="line">%d	：格式化整数</span><br><span class="line">%f	：可指定小数点精度</span><br><span class="line">%e	：用科学计数法表示小数</span><br><span class="line">%g	：根据值的的具体情况使用%f或%e</span><br><span class="line">%o	：八进制</span><br><span class="line">%x	：十六进制</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<hr>
<p>简单的进制转换：<br>1、十六进制转换</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>I = input(<span class="string">'请输入一个数'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>I = int(I)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">'%x'</span> %I)</span><br></pre></td></tr></table></figure>
<p>2、八进制转换</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">I = input(<span class="string">'请输入一个数'</span>)</span><br><span class="line">I = int(I)</span><br><span class="line">print(<span class="string">'%o'</span> %I)</span><br></pre></td></tr></table></figure>
<p>3、二进制转换</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">%%% python 中的二进制可以直接用 bin() 函数处理</span><br><span class="line">I = input(<span class="string">'请输入一个数'</span>)</span><br><span class="line">I = int(I)</span><br><span class="line">print(bin(I))</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>python</category>
        <category>语法笔记</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>语法笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Python学习笔记_6：global 与 nanlacal 的区别</title>
    <url>/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_6%EF%BC%9Aglobal%20%E4%B8%8E%20nanlacal%20%E7%9A%84%E5%8C%BA%E5%88%AB.html</url>
    <content><![CDATA[<p>之前我在 matlab 的笔记里介绍过一次 global 的用法</p>
<p>这次在 python 中介绍下 global 和 nanlacal 的区别</p>
<p><strong>global 函数：</strong></p>
<p>在函数中修改全局变量</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>I = <span class="string">'ABC'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">fun</span><span class="params">()</span>:</span></span><br><span class="line">		<span class="keyword">global</span> I</span><br><span class="line">		I = <span class="string">'123'</span></span><br><span class="line">		print(I)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>fun()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(I)</span><br><span class="line">%输出为</span><br><span class="line"><span class="number">123</span></span><br><span class="line"><span class="number">123</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>运行 fun() 函数时，global 函数将全局变量 I = ‘ABC’ 修改为 I = ‘123’，并覆盖原先的全局变量 I 的值。</p>
<p><strong>nonlocal 函数：</strong></p>
<p>在函数中的内部函数中，修改其外部函数中定义的局部变量</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">先看一份例子，稍后我们使用<span class="keyword">nonlocal</span>来修改</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>I = <span class="string">'东北大鹌鹑'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">fun</span><span class="params">()</span>:</span></span><br><span class="line">    	I = <span class="string">'PDD'</span></span><br><span class="line">    	<span class="function"><span class="keyword">def</span> <span class="title">function</span><span class="params">()</span>:</span></span><br><span class="line">        	I = <span class="string">'周淑怡'</span></span><br><span class="line">        	print(I)</span><br><span class="line">    	function()</span><br><span class="line">    	print(I)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>fun()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(I)</span><br><span class="line">%输出是%</span><br><span class="line">周淑怡</span><br><span class="line">PDD</span><br><span class="line">东北大鹌鹑</span><br></pre></td></tr></table></figure>
<p>而我现在把 ’PDD‘ 也换成 ’周淑怡‘ ，就要使用nonlocal函数了<br><img src="https://img-blog.csdnimg.cn/20200306152352813.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>I = <span class="string">'东北大鹌鹑'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="function"><span class="keyword">def</span> <span class="title">fun</span><span class="params">()</span>:</span></span><br><span class="line">    	I = <span class="string">'PDD'</span></span><br><span class="line">    	<span class="function"><span class="keyword">def</span> <span class="title">function</span><span class="params">()</span>:</span></span><br><span class="line">	        <span class="keyword">nonlocal</span> I</span><br><span class="line">        	I = <span class="string">'周淑怡'</span></span><br><span class="line">        	print(I)</span><br><span class="line">    	function()</span><br><span class="line">    	print(I)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>fun()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(I)</span><br><span class="line">%输出为</span><br><span class="line">周淑怡</span><br><span class="line">周淑怡</span><br><span class="line">东北大鹌鹑</span><br></pre></td></tr></table></figure>
<p>PDD：你怎么把我给整没了呢？？？<br><img src="https://img-blog.csdnimg.cn/20200306152038752.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>哈哈哈哈，皮一下<br><img src="https://img-blog.csdnimg.cn/20200306152417290.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>从上面的例子可以看到：</p>
<p>我们一般在某函数的内部函数中使用 nonlocal 函数来修改这个函数的局部变量，而不会改变整个代码的全局变量，nonlocal 用途还算比较广泛的。</p>
]]></content>
      <categories>
        <category>python</category>
        <category>语法笔记</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>语法笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Python学习笔记_7：index() 和 dict() 的用法详解</title>
    <url>/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_7%EF%BC%9Aindex()%20%E5%92%8C%20dict()%20%E7%9A%84%E7%94%A8%E6%B3%95%E8%AF%A6%E8%A7%A3.html</url>
    <content><![CDATA[<p>前面的笔记中我详细介绍了列表和元组</p>
<p><strong>当我们需要列表中某一元素的相应位置时</strong></p>
<p>就要提到 <strong>index()</strong> 这个神奇的函数了</p>
<h2 id="混讲一下-index-和-dict"><a href="#混讲一下-index-和-dict" class="headerlink" title="混讲一下 index() 和 dict()"></a>混讲一下 index() 和 dict()</h2><p><strong>1、index() 的简单用法：</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>I = [<span class="string">'东北大鹌鹑'</span>,<span class="string">'周淑怡'</span>,<span class="string">'刘某人'</span>,<span class="string">'胡歌'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(I.index(<span class="string">'胡歌'</span>))</span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>所以 index 可以直接输出该元素的位置。</p>
<p><strong>2、今天要说的 index() 的用法跟 dict() 函数有点关系，index 在有时候可以代替 dict 函数去实现字典的功能：</strong></p>
<p><strong>先简单介绍一下 dict() 函数：</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">###首先我给四人每个人一个定义###</span></span><br><span class="line">%东北大鹌鹑--&gt;小胖子</span><br><span class="line">%周淑怡------&gt;大美女</span><br><span class="line">%刘某人------&gt;反向抽烟</span><br><span class="line">%胡歌--------&gt;艺术家</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>I = dict(((<span class="string">'东北大鹌鹑'</span>,<span class="string">'小胖子'</span>),(<span class="string">'周淑怡'</span>,<span class="string">'大美女'</span>),\</span><br><span class="line">			 (<span class="string">'刘某人'</span>,<span class="string">'反向抽烟'</span>),(<span class="string">'胡歌'</span>,<span class="string">'艺术家'</span>)))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(I[<span class="string">'周淑怡'</span>])</span><br><span class="line">大美女</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(I[<span class="string">'刘某人'</span>])</span><br><span class="line">反向抽烟</span><br></pre></td></tr></table></figure>
<p>所以 dict ( obj ) 会返回 obj 的定义</p>
<p><strong>3、用 index() 来实现上述操作：</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>people = [<span class="string">'东北大鹌鹑'</span>,<span class="string">'周淑怡'</span>,<span class="string">'刘某人'</span>,<span class="string">'胡歌'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>mapping = [<span class="string">'小胖子'</span>,<span class="string">'大美女'</span>,<span class="string">'反向抽烟'</span>,<span class="string">'艺术家'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">'周淑怡是%s'</span> %(mapping[people.index(<span class="string">'周淑怡'</span>)]))</span><br><span class="line">周淑怡是大美女</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(<span class="string">'胡歌是%s'</span> %(mapping[people.index(<span class="string">'胡歌'</span>)]))</span><br><span class="line">胡歌是艺术家</span><br></pre></td></tr></table></figure>

<p><strong>总结：</strong><br>本来是想把 dict() 函数单独详细的说一下，但是写文章的时候突然想起来 index() 在这种情况下可以代替 dict() 的用法，而且 dict() 也比较简单，就在这里一起介绍了。</p>
]]></content>
      <categories>
        <category>python</category>
        <category>语法笔记</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>语法笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Python学习笔记_8：set 函数的使用方法</title>
    <url>/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_8%EF%BC%9Aset%20%E5%87%BD%E6%95%B0%E7%9A%84%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95.html</url>
    <content><![CDATA[<p>前面我们介绍了python的列表，元组，dict。</p>
<p>set就是我们所说的集合</p>
<p>今天介绍一下set 函数的基本用法:</p>
<p><strong>1、set的使用方法</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>I = set([<span class="number">3</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">1</span>,<span class="number">4</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(I)</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;</span><br><span class="line">%set会自动将数字排序</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p><strong>2、set自动合并相同元素</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>I = set([<span class="number">5</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">2</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(I)</span><br><span class="line">&#123;<span class="number">2</span>,<span class="number">3</span>,<span class="number">5</span>&#125;</span><br></pre></td></tr></table></figure>
<p><strong>3、集合中元素是无序的</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>I = set([<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>I[<span class="number">1</span>]</span><br><span class="line">%%就会报错</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;pyshell#14&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    I[<span class="number">1</span>]</span><br><span class="line">TypeError: <span class="string">'set'</span> object does <span class="keyword">not</span> support indexing</span><br></pre></td></tr></table></figure>
<p><strong>4、集合 set 增减元素</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>I.add(<span class="number">5</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>I</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>I.remove(<span class="number">5</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>I</span><br><span class="line">&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>python</category>
        <category>语法笔记</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>语法笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Python学习笔记_9：class 类定义的属性与方法——详解</title>
    <url>/Python%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0_9%EF%BC%9Aclass%20%E7%B1%BB%E5%AE%9A%E4%B9%89%E7%9A%84%E5%B1%9E%E6%80%A7%E4%B8%8E%E6%96%B9%E6%B3%95%E2%80%94%E2%80%94%E8%AF%A6%E8%A7%A3.html</url>
    <content><![CDATA[<p>对很多没有其他语言基础的初学者来说，可能学到 python 的类定义的时候会苦恼很久</p>
<p>但，无论我们遇到什么困难，也不要怕，微笑着面对他，消除恐惧的最好办法就是面对恐惧，坚持，才是胜利，加油，奥利给！！！</p>
<p><img src="https://img-blog.csdnimg.cn/20200308134728646.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<a id="more"></a>
<p>今天就给大家浅谈一下 class 中遇到的小问题吧</p>
<p><strong>1、首先类的对象是什么时候产生的？</strong></p>
<p>当类被定义完成时，类定义就变成了类的对象，可以通过 “类名.属性” 或 “类名.方法名()”  引用或使用相关的属性或方法</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="class"><span class="keyword">class</span> <span class="title">I</span>:</span></span><br><span class="line">    	<span class="function"><span class="keyword">def</span> <span class="title">text</span><span class="params">(self,x)</span>:</span></span><br><span class="line">        	print(<span class="string">'%d'</span>%(x**<span class="number">2</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>O = I()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>O.text</span><br><span class="line">&lt;bound method I.text of &lt;__main__.I object at <span class="number">0x0000018820ABCB38</span>&gt;&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>O.text(<span class="number">3</span>)</span><br><span class="line"><span class="number">9</span></span><br></pre></td></tr></table></figure>
<p><strong>2、类的属性可以将类的方法覆盖</strong><br>当给 O.text 赋值时，O.text(obj) 就会报错，因为 O.text 将 O.text()  覆盖</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="class"><span class="keyword">class</span> <span class="title">I</span>:</span></span><br><span class="line">    	<span class="function"><span class="keyword">def</span> <span class="title">text</span><span class="params">(self,x)</span>:</span></span><br><span class="line">        	print(<span class="string">'%d'</span>%(x**<span class="number">2</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>O = I()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>O.text(<span class="number">4</span>)</span><br><span class="line"><span class="number">16</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>O.text = <span class="number">5</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>O.text(<span class="number">4</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;pyshell#11&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    O.text(<span class="number">4</span>)</span><br><span class="line">TypeError: <span class="string">'int'</span> object <span class="keyword">is</span> <span class="keyword">not</span> callable</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>O.text</span><br><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure>
<p><strong>3、注意类属性和实例属性的区别</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="class"><span class="keyword">class</span> <span class="title">I</span>:</span></span><br><span class="line">		count = <span class="number">1</span></span><br><span class="line">		<span class="function"><span class="keyword">def</span> <span class="title">text</span><span class="params">(self)</span></span></span><br><span class="line">			self.a = 2</span><br><span class="line">			self.b = <span class="number">3</span></span><br><span class="line">			self.c = <span class="number">4</span></span><br><span class="line">			I.num = <span class="number">5</span></span><br></pre></td></tr></table></figure>
<p>count 和num 就是类属性（静态变量），a,b,c则是实例属性</p>
<p>4、Error——传参错误</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="class"><span class="keyword">class</span> <span class="title">I</span>:</span></span><br><span class="line">    	<span class="function"><span class="keyword">def</span> <span class="title">text</span><span class="params">()</span>:</span></span><br><span class="line">        	print(<span class="string">'abc'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>O = I()   %默认将O的值传给I(),作为I() 的参数</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>O.text()</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;pyshell#20&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">    O.text()</span><br><span class="line">TypeError: text() takes <span class="number">0</span> positional arguments but <span class="number">1</span> was given</span><br></pre></td></tr></table></figure>
<p>因为python中的 “类.obj（）” 需要实例才可以使用，上述代码中python 就会默认将O的值传给 I() ，所以再调用 O.text() 时就是报错</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">TypeError: text() takes <span class="number">0</span> positional arguments but <span class="number">1</span> was given</span><br><span class="line">%需要<span class="number">0</span>个参数，但是已经传入<span class="number">1</span>个参数</span><br></pre></td></tr></table></figure>
<p>所以应该在 def text() 加入实例对象</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="class"><span class="keyword">class</span> <span class="title">I</span>:</span></span><br><span class="line">    	<span class="function"><span class="keyword">def</span> <span class="title">text</span><span class="params">(obj)</span>:</span></span><br><span class="line">        	print(<span class="string">'abc'</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>O = I()   </span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>O.text()</span><br><span class="line">abc</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>python</category>
        <category>语法笔记</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>语法笔记</tag>
      </tags>
  </entry>
  <entry>
    <title>Python安装 chardet</title>
    <url>/Python%E5%AE%89%E8%A3%85%20chardet.html</url>
    <content><![CDATA[<p>Chardet：通用字符编码检测器</p>
<p>chardet 3.0.4官网链接<a href="https://pypi.org/project/chardet/#files" target="_blank" rel="noopener">https://pypi.org/project/chardet/#files</a></p>
<p><img src="https://img-blog.csdnimg.cn/20200309201404769.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<a id="more"></a>
<p>下载—&gt;解压文件后，找到chardet文件夹</p>
<p><img src="https://img-blog.csdnimg.cn/20200309203606459.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>复制在python的安装路径下的 Lib 文件夹内即可</p>
<p>部分同学的 Lib 文件夹下有 site-packages 文件夹，则最好将 chardet 复制在 site-packages 文件夹内</p>
<p>pycharm 和 anaconda 都可以这样安装（不会使用 pip 的同学）</p>
<p><img src="https://img-blog.csdnimg.cn/20200309204210131.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>然后 chardet 就可以正常使了</p>
<p><img src="https://img-blog.csdnimg.cn/2020030921003628.png" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>python</category>
        <category>error&amp;库</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>error&amp;库</tag>
      </tags>
  </entry>
  <entry>
    <title>Python的Scripts文件夹为空——已解决</title>
    <url>/Python%E7%9A%84Scripts%E6%96%87%E4%BB%B6%E5%A4%B9%E4%B8%BA%E7%A9%BA%E2%80%94%E2%80%94%E5%B7%B2%E8%A7%A3%E5%86%B3.html</url>
    <content><![CDATA[<p>如果有 windows 环境的 python 的话，很可能会出现 Scripts 文件夹为空，这样就无法正常在 cmd 正常使用 pip 命令。</p>
<p><strong>解决方法：</strong></p>
<p> cmd 中输入： <code>python -m ensurepip</code></p>
<p><img src="https://img-blog.csdnimg.cn/20200313174634904.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<a id="more"></a>
<p>文件夹下就出现 exe 文件</p>
<p><img src="https://img-blog.csdnimg.cn/20200313174720149.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>问题解决。</p>
]]></content>
      <categories>
        <category>python</category>
        <category>error&amp;库</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>error&amp;库</tag>
      </tags>
  </entry>
  <entry>
    <title>VLFeat工具包下载</title>
    <url>/VLFeat%E5%B7%A5%E5%85%B7%E5%8C%85%E4%B8%8B%E8%BD%BD.html</url>
    <content><![CDATA[<p><strong>vlfeat 官方下载链接：</strong><a href="https://www.vlfeat.org/" target="_blank" rel="noopener">https://www.vlfeat.org/</a></p>
<p>运用于计算机视觉算法专业图像的理解和局部特征提取和匹配。算法包括Fisher向量，VLAD，SIFT，MSER，k均值，分层k均值，聚集信息瓶颈，SLIC超像素，快速移位超像素，大规模SVM训练等。它是用C编写的，以提高效率和兼容性，并带有MATLAB的接口（易于使用）和详细的文档。</p>
<p>点击直接下载压缩包，不过下载速度可能会有点慢,可以使用迅雷下载</p>
<a id="more"></a>
<p><img src="https://img-blog.csdnimg.cn/2020031317311149.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>这里是源代码和安装教程</p>
<p><img src="https://img-blog.csdnimg.cn/20200313173258764.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>我的 vl_setup.m 文件的位置是：</strong></p>
<p>D:\MATLAB 2018a anzhuanglujing\toolbox\vlfeat-0.9.21-bin\vlfeat-0.9.21\toolbox</p>
<p>所以命令行输入：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">run(<span class="string">'D:\MATLAB 2018a anzhuanglujing\toolbox\vlfeat-0.9.21-bin\vlfeat-0.9.21\toolbox\vl_setup.m'</span>)</span><br></pre></td></tr></table></figure>
<p>即可使用 vlfeat 工具包</p>
<p><img src="https://img-blog.csdnimg.cn/20200314234457223.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>MATLAB</category>
      </categories>
      <tags>
        <tag>MATLAB</tag>
      </tags>
  </entry>
  <entry>
    <title>ValueError Dimension 0 in both shapes must be equal</title>
    <url>/ValueError%EF%BC%9ADimension%200%20in%20both%20shapes%20must%20be%20equal.html</url>
    <content><![CDATA[<p>今天重新训练yolo的时候出现了这个报错</p>
<blockquote>
<p>ValueError: Dimension 0 in both shapes must be equal, but are 1 and 21. Shapes are [1,1,1024,24] and [21,1024,1,1]. for ‘Assign_360’ (op: ‘Assign’) with input shapes: [1,1,1024,24], [21,1024,1,1].</p>
</blockquote>
<p>一般情况就是class中的数量对不上</p>
<a id="more"></a>
<p>可是我class中只有两类，肯定没有写错</p>
<p><img src="https://img-blog.csdnimg.cn/20200521170207875.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>看到上面3、4两行都是被回车符占了，于是删除</p>
<p><img src="https://img-blog.csdnimg.cn/20200521170323900.png" alt="在这里插入图片描述"></p>
<p>结果真的能用了，很奇怪，之前好像这样没问题的呀，记不清了…反正能解决问题就行</p>
]]></content>
      <categories>
        <category>python</category>
        <category>error&amp;库</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>error&amp;库</tag>
      </tags>
  </entry>
  <entry>
    <title>WIN10 未安装任何音频驱动 扬声器有个小红叉（已解决）</title>
    <url>/WIN10%20%E6%9C%AA%E5%AE%89%E8%A3%85%E4%BB%BB%E4%BD%95%E9%9F%B3%E9%A2%91%E9%A9%B1%E5%8A%A8%20%E6%89%AC%E5%A3%B0%E5%99%A8%E6%9C%89%E4%B8%AA%E5%B0%8F%E7%BA%A2%E5%8F%89%EF%BC%88%E5%B7%B2%E8%A7%A3%E5%86%B3%EF%BC%89.html</url>
    <content><![CDATA[<p>经历了无数次的下载安装各种驱动，无数次重启，几乎试了全网所有的方法都是不行，最后使用了国外论坛的方法终于成功了</p>
<p><img src="https://img-blog.csdnimg.cn/20200205210158898.png" alt="这是我电脑现在的情况，问题已经完全解决了，太激动了哈哈"></p>
<p>此方法必须要先重启电脑，重启后立刻进行此操作！！</p>
<p>我当时右击扬声器图标，选择打开声音设置</p>
<a id="more"></a>
<p><img src="https://img-blog.csdnimg.cn/20200205210716557.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>在这个声音面板一直往下翻</p>
<p><img src="https://img-blog.csdnimg.cn/20200205211020704.png" alt=""></p>
<p>打开：轻松访问音频设置</p>
<p><img src="https://img-blog.csdnimg.cn/20200205211107866.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="选择更改设备或应用音量，然后慢慢等着"></p>
<p>选择更改设备或应用音量，等一会就行然后</p>
<p>声音面板界面的输出设备就应该显示了输出设备为扬声器</p>
<p><img src="https://img-blog.csdnimg.cn/20200205211722980.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>我的未安装任何音频输出设备就这样解决了。</p>
<p>欢迎大家提问，如果能帮到的就会回复大家。</p>
]]></content>
      <categories>
        <category>win10</category>
      </categories>
      <tags>
        <tag>win10</tag>
      </tags>
  </entry>
  <entry>
    <title>Win10自带的虚拟机如何打开—Hyper-v</title>
    <url>/Win10%E8%87%AA%E5%B8%A6%E7%9A%84%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%A6%82%E4%BD%95%E6%89%93%E5%BC%80%E2%80%94Hyper-v.html</url>
    <content><![CDATA[<p>作为一个程序员电脑里面怎么能没有安装虚拟机呢…</p>
<p>我之前装的虚拟机是VMware，配置的环境是openSUSE（大多数程序员好像用Ubuntu）</p>
<p>作为电气工程的学生，我也不了解程序员界的行情…..这些事情也无从考究</p>
<p>不过最近开始使用win10自带的虚拟机Hyper-v了，不过会和VM有兼容性问题。</p>
<a id="more"></a>
<p>直接上操作：<br>    打开 “控制面板”—&gt;“程序”<br><img src="https://img-blog.csdnimg.cn/20200222215045728.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>选择“启用或关闭windows功能”<br><img src="https://img-blog.csdnimg.cn/20200222215429330.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>选中Hyper-v的所有工具—就可以点击“确定”等待了<br><img src="https://img-blog.csdnimg.cn/20200222215807339.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200222215905888.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这里让电脑立即重启<br><img src="https://img-blog.csdnimg.cn/20200222215954888.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>一般来说重启后就能找到hyper-v</p>
<p>可是我的电脑重启时竟然显示无法正常安装</p>
<p>我一开始觉得是VM的兼容性问题，我还傻乎乎的把VM卸载了（我之前用VM是为了运行R语言代码，后来就没怎么用过）</p>
<p>结果还是不行</p>
<p>后来在windows论坛上找到了解决方法</p>
<p>“win+X”进入管理员PowerShell运行模式——&gt;</p>
<p>输入</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">.\bcdedit /<span class="built_in">set</span> hypervisorlaunchtype <span class="keyword">auto</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200222223623274.png" alt="在这里插入图片描述"><br>显示操作成功完成即可</p>
<p>最后结果：<br><img src="https://img-blog.csdnimg.cn/2020022222372689.png" alt="在这里插入图片描述"><br>有需要 openSUSE 资源的朋友可以找我，压缩资源我电脑里还是有的。</p>
]]></content>
      <categories>
        <category>win10</category>
      </categories>
      <tags>
        <tag>win10</tag>
      </tags>
  </entry>
  <entry>
    <title>anaconda 配置 yolov3 环境</title>
    <url>/anaconda%20%E9%85%8D%E7%BD%AE%20yolov3%20%E7%8E%AF%E5%A2%83.html</url>
    <content><![CDATA[<h2 id="1、-使用清华镜像创建环境"><a href="#1、-使用清华镜像创建环境" class="headerlink" title="1、 使用清华镜像创建环境"></a>1、 使用清华镜像创建环境</h2><p>输入：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/</span><br><span class="line">conda config --set show_channel_urls yes</span><br><span class="line">conda create -n yolo python=<span class="number">3.6</span></span><br></pre></td></tr></table></figure>
<p>(忽略图中因为打错字母导致的报错…)</p>
<p><img src="https://img-blog.csdnimg.cn/20200316001002423.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<a id="more"></a>
<h2 id="2、进入yolo环境"><a href="#2、进入yolo环境" class="headerlink" title="2、进入yolo环境"></a>2、进入yolo环境</h2><p>输入：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">conda activate yolo</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200316001211529.png" alt="在这里插入图片描述"></p>
<h2 id="3、更换pip源下载"><a href="#3、更换pip源下载" class="headerlink" title="3、更换pip源下载"></a>3、更换pip源下载</h2><p>** 1、下载keras：**</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 不更换国内源的命令</span></span><br><span class="line"><span class="comment"># 超时失败是常有的事</span></span><br><span class="line">pip install keras==<span class="number">2.1</span><span class="number">.5</span> </span><br><span class="line"><span class="comment"># 更换国内源</span></span><br><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple keras==<span class="number">2.1</span><span class="number">.5</span></span><br><span class="line"><span class="comment"># pip install -i// + 链接 + //keras==2.1.5（keras的版本）</span></span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/20200316003557394.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>2、下载 tensorflow ：</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple tensorflow-gpu==<span class="number">1.6</span><span class="number">.0</span></span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200316004333255.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>3、下载 Pillow</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple Pillow</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/2020031600472232.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>4、安装 matplotlib</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple matplotlib</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200316004849304.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>5、下载 ffmpeg</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple ffmpeg</span><br></pre></td></tr></table></figure>

<p>或</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main</span><br><span class="line">conda config --set show_channel_urls yes</span><br><span class="line">conda install ffmpeg</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200316005227363.png" alt="在这里插入图片描述"><br><strong>6、安装 opencv</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple opencv-contrib-python</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200316005544144.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>python</category>
        <category>机器视觉</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>机器视觉</tag>
      </tags>
  </entry>
  <entry>
    <title>anaconda安装 pytorch——详解</title>
    <url>/anaconda%E5%AE%89%E8%A3%85%20pytorch%E2%80%94%E2%80%94%E8%AF%A6%E8%A7%A3.html</url>
    <content><![CDATA[<h2 id="事件前言："><a href="#事件前言：" class="headerlink" title="事件前言："></a>事件前言：</h2><p>今天凌晨2点多时清华镜像源还可以正常使用，但是刚刚我电脑却使用不了了</p>
<blockquote>
<p>使用中科大、阿里云等国内镜像的时候，一直报错：<br><code>Warning: &#39;https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/&#39; already in &#39;channels&#39; list, moving to the top</code></p>
</blockquote>
<p>无奈我只能自己下载了</p>
<p><a href="https://download.pytorch.org/whl/torch_stable.html" target="_blank" rel="noopener">pytorch下载链接</a> &lt;———点击这里进入网站</p>
<p><img src="https://img-blog.csdnimg.cn/20200316185114665.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<a id="more"></a>
<h2 id="下载方法："><a href="#下载方法：" class="headerlink" title="下载方法："></a>下载方法：</h2><p>我需要下载两个文件： <code>torch-1.4</code> 和 <code>torchvision-0.4</code></p>
<p><strong>torch 我选择</strong> <code>torch-1.4.0+cpu-cp36-cp36m-win_amd64.whl</code><br>（我的环境是 windows 下的 python3.6 ）<br><img src="https://img-blog.csdnimg.cn/20200316185343599.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>torchvision 我选择：</strong>  <code>torchvision-0.4.2+cpu-cp36-cp36m-win_amd64.whl</code><br><img src="https://img-blog.csdnimg.cn/20200316185712114.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这个 whl 后缀的文件迅雷应该不能下载，所以等待谷歌慢慢下载吧</p>
<h2 id="安装："><a href="#安装：" class="headerlink" title="安装："></a>安装：</h2><p>进入环境：</p>
<blockquote>
<p>输入安装 torch 的命令：<br>pip install C:\Users\27511\Desktop\torch-1.4.0+cpu-cp36-cp36m-win_amd64.whl</p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200316190046223.png" alt="在这里插入图片描述"></p>
<blockquote>
<p>输入安装 torchvision 的命令：<br>pip install C:\Users\27511\Desktop\torchvision-0.4.2+cpu-cp36-cp36m-win_amd64.whl</p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200316190159196.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这样就安装成功了。</p>
<p>注意：版本不能乱下载，不然可能会安装不了</p>
<p>如果有同学对本文方法不明白的可以评论联系我。</p>
]]></content>
      <categories>
        <category>python</category>
        <category>error&amp;库</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>error&amp;库</tag>
      </tags>
  </entry>
  <entry>
    <title>cpu运行gpu上的pytorch 报错AssertionErrortorch not compiled with cuda enabled——已解决</title>
    <url>/cpu%E8%BF%90%E8%A1%8Cgpu%E4%B8%8A%E7%9A%84pytorch%20%E6%8A%A5%E9%94%99%EF%BC%9AAssertionErrortorch%20not%20compiled%20with%20cuda%20enabled%E2%80%94%E2%80%94%E5%B7%B2%E8%A7%A3%E5%86%B3.html</url>
    <content><![CDATA[<p>感觉今天介绍的这种方法可以解决所有这种报错出现的问题</p>
<h2 id="事件发生："><a href="#事件发生：" class="headerlink" title="事件发生："></a>事件发生：</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">报错：AssertionError:torch <span class="keyword">not</span> compiled <span class="keyword">with</span> cuda enabled</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/20200409104210488.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<a id="more"></a>
<h2 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h2><p>后来看到这个代码</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">parser.add_argument(<span class="string">'--test_device'</span>, default=<span class="string">"cuda:0"</span>, type=str,</span><br><span class="line">                    help=<span class="string">'cuda:0 or cpu'</span>)</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200409104356554.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>把 cuda 换成 cpu</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">parser.add_argument(<span class="string">'--test_device'</span>, default=<span class="string">"cpu:0"</span>, type=str,</span><br><span class="line">                    help=<span class="string">'cuda:0 or cpu'</span>)</span><br><span class="line">                    </span><br><span class="line">%上面的 default=<span class="string">"cuda:0"</span> 改成 default=<span class="string">"cpu:0"</span>，</span><br><span class="line">下面的 help=<span class="string">'cuda:0 or cpu'</span> 因为定义了可以使用 cpu 所以就不用改了</span><br></pre></td></tr></table></figure>
<p>当然也可以改成：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">parser.add_argument(<span class="string">'--test_device'</span>, default=<span class="string">"cpu:0"</span>, type=str,</span><br><span class="line">                    help=<span class="string">'cpu:0'</span>)</span><br><span class="line">parser.add_argument(<span class="string">'--test_device'</span>, default=<span class="string">"cuda:0 or cpu"</span>, type=str,</span><br><span class="line">                    help=<span class="string">'cuda:0 or cpu'</span>)</span><br></pre></td></tr></table></figure>

<h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><p><strong>总结一下就是：出现的 cuda 全部换成 cpu 就可以运行！！！</strong></p>
<h2 id="这种方法应该适用于这种报错："><a href="#这种方法应该适用于这种报错：" class="headerlink" title="这种方法应该适用于这种报错："></a>这种方法应该适用于这种报错：</h2><p>为了尝试这种方法是不是适用于很多情况，我找了也出现这种报错的一位博主尝试，果然可以解决。</p>
]]></content>
      <categories>
        <category>python</category>
        <category>error&amp;库</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>error&amp;库</tag>
      </tags>
  </entry>
  <entry>
    <title>labelimg使用方法：如何标注图片</title>
    <url>/labelimg%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95%EF%BC%9A%E5%A6%82%E4%BD%95%E6%A0%87%E6%B3%A8%E5%9B%BE%E7%89%87.html</url>
    <content><![CDATA[<p>labelimg 是一款专门用于贴标签的软件</p>
<h2 id="如何下载-labelimg："><a href="#如何下载-labelimg：" class="headerlink" title="如何下载 labelimg："></a>如何下载 labelimg：</h2><p><strong>1、anaconda 中下载：</strong></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple labelimg</span><br></pre></td></tr></table></figure>
<p>因为我下载过了，所以显示：<code>Requirement already satisfied</code><br><img src="https://img-blog.csdnimg.cn/20200322230932469.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<a id="more"></a>
<p>直接输入：<code>labelimg</code> 就可以自动打开软件了</p>
<p><img src="https://img-blog.csdnimg.cn/20200322231120752.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20200322231210131.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>2、百度网盘</strong></p>
<p>链接：<a href="https://pan.baidu.com/s/1NdnzpFNzlkdmenjTrZ52rg" target="_blank" rel="noopener">https://pan.baidu.com/s/1NdnzpFNzlkdmenjTrZ52rg</a><br>提取码：42hd </p>
<h2 id="如何使用："><a href="#如何使用：" class="headerlink" title="如何使用："></a>如何使用：</h2><p>我创建了一个文件夹：</p>
<p><img src="https://img-blog.csdnimg.cn/20200322235526602.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>1、把想要标注的图片放入 <code>JPEGImages</code> 文件夹中</strong></p>
<p>这里我放入三张图片</p>
<p><img src="https://img-blog.csdnimg.cn/20200322235854887.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>2、在 labeling 中打开图片</strong></p>
<p>点击 <strong>Open Dir</strong> 选择刚刚保存图片的路径</p>
<p><img src="https://img-blog.csdnimg.cn/20200323000031902.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>选择路径 <code>JPEGImages</code>，点击选择文件夹</p>
<p><img src="https://img-blog.csdnimg.cn/20200323000249726.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>就会出现文件夹中的图片</p>
<p><strong>3、设置图片 xlm 文件的保存位置</strong></p>
<p>点击  <code>Change Save Dir</code> ，选择文件夹 <code>Annotations</code> 用于储存标注的信息</p>
<p><img src="https://img-blog.csdnimg.cn/20200323000700377.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>4、开始标注图片</strong></p>
<p><strong>（1）在 **view</strong> 中选中 <code>Auto Save model</code>**</p>
<p><img src="https://img-blog.csdnimg.cn/20200323000933697.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>（2）点击 <code>Create\nRectBox</code></strong> <strong>将所标注位置选中</strong><br>（我这里标注人）</p>
<p><img src="https://img-blog.csdnimg.cn/20200323002355421.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>在弹出的框中填入你对框中类别的定义，点击 OK</p>
<p><img src="https://img-blog.csdnimg.cn/20200323002520970.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>右侧就会出现填入的类别，这里有个小技巧，比如说我的所有图片我只标注一类（只标注人），那么我选中 <code>Use default label</code> 并填入 person，那么我接下来所有框住的定义自动变为 person。不用每次选都去填入定义了。</p>
<p>然后再选中 <code>Create\nRectBox</code> 将图中其他人框中</p>
<p>按键盘的 “A”或“D” 键就可以换图片进行标注</p>
<blockquote>
<p>注意：有时候会默认选中 Save，那么就不用每张图片都点击一次save进行保存了，没默认的话就需要手动点击。</p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200323003312324.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>3、查看结果</strong></p>
<p>打开文件夹 <code>Annotations</code>，就能发现刚刚那张图的信息都保存在了这里</p>
<p><img src="https://img-blog.csdnimg.cn/20200323003436439.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>labelimg 的使用就是这样，如有问题，可以评论啦</p>
]]></content>
      <categories>
        <category>python</category>
        <category>机器视觉</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>机器视觉</tag>
      </tags>
  </entry>
  <entry>
    <title>matlab创建下载进度条</title>
    <url>/matlab%E5%88%9B%E5%BB%BA%E4%B8%8B%E8%BD%BD%E8%BF%9B%E5%BA%A6%E6%9D%A1.html</url>
    <content><![CDATA[<blockquote>
<p>最近玩GUI玩的比较多，想分享一些好玩的东西，就从最简单的开始吧</p>
</blockquote>
<p>大家都知道matlab的进度条吧，这里实现了创建进度条，并且当进度条达到100%时就关闭进度条界面</p>
<a id="more"></a>

<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">state = <span class="number">0</span>;                                 </span><br><span class="line">h = waitbar(<span class="number">0</span>, <span class="string">'请等待...'</span>, <span class="string">'Name'</span>, <span class="string">'进度条'</span>, <span class="string">'CreateCancelBtn'</span>, ...</span><br><span class="line">    <span class="string">'state = 1; delete(h); clear h'</span>);       </span><br><span class="line">h1 = findall(h, <span class="string">'style'</span>, <span class="string">'pushbutton'</span>);     </span><br><span class="line">set(h1, <span class="string">'string'</span>, <span class="string">'取消'</span>, <span class="string">'fontsize'</span>, <span class="number">10</span>)   </span><br><span class="line"><span class="keyword">for</span> i = <span class="number">1</span> : <span class="number">100</span>                             </span><br><span class="line">    waitbar(i / <span class="number">100</span>, h, [<span class="string">'进度完成'</span> num2str(i) <span class="string">'%'</span>]);</span><br><span class="line">    pause(<span class="number">0.1</span>)</span><br><span class="line">    <span class="keyword">if</span> state                                </span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    end</span><br><span class="line">end</span><br><span class="line"><span class="keyword">if</span> exist(<span class="string">'h'</span>) == <span class="number">1</span>     </span><br><span class="line">    delete(h); </span><br><span class="line">end</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/2020040909231571.png" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>MATLAB</category>
      </categories>
      <tags>
        <tag>MATLAB</tag>
      </tags>
  </entry>
  <entry>
    <title>module &#39;tensorflow&#39; has no attribute &#39;get_default_graph&#39;</title>
    <url>/module%20&#39;tensorflow&#39;%20has%20no%20attribute%20&#39;get_default_graph&#39;.html</url>
    <content><![CDATA[<p>参考：<a href="https://blog.csdn.net/u014466109/article/details/88877321?depth_1-utm_source=distribute.pc_relevant.none-task&amp;utm_source=distribute.pc_relevant.none-task" target="_blank" rel="noopener">https://blog.csdn.net/u014466109/article/details/88877321?depth_1-utm_source=distribute.pc_relevant.none-task&amp;utm_source=distribute.pc_relevant.none-task</a></p>
<h2 id="事件经过："><a href="#事件经过：" class="headerlink" title="事件经过："></a>事件经过：</h2><p>现在已经是凌晨一点半，从昨天下午开始在 windows 的 anaconda 配置 yolov3 的训练环境，一直出各种问题，很烦。</p>
<p>两小时前遇到这个问题：<br><code>https://blog.csdn.net/u014466109/article/details/88877321?depth_1-utm_source=distribute.pc_relevant.none-task&amp;utm_source=distribute.pc_relevant.none-task</code></p>
<p>参照各种方法，tensorflow 和其他库删了再重新下载。</p>
<a id="more"></a>
<h2 id="报错原因："><a href="#报错原因：" class="headerlink" title="报错原因："></a>报错原因：</h2><p><strong>直到看到上述的文章</strong></p>
<p>使用keras和tensorflow做深度学习的时候，python3.6报了这个错误，这个问题源自于keras和TensorFlow的版本过高导致模块不存在或者已经更改不再兼容</p>
<h2 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h2><p>先把 TensorFlow 和 keras 都卸载再重新安装</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip uninstall tensorflow  <span class="comment"># 卸载tensorflow</span></span><br><span class="line">pip uninstall keras  <span class="comment"># 卸载keras</span></span><br></pre></td></tr></table></figure>
<p>清华镜像下载：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 下载 keras==2.0.9</span></span><br><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple keras==2.0.9</span><br><span class="line"><span class="comment"># 下载 tensorflow==1.2.0</span></span><br><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple tensorflow==1.2.0</span><br></pre></td></tr></table></figure>

<h2 id="感受："><a href="#感受：" class="headerlink" title="感受："></a>感受：</h2><p><img src="https://img-blog.csdnimg.cn/20200317012850971.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>我的 yolov3配置文件成功转换成keras适用的h5文件了</p>
<p>真的本来都想把 anaconda 卸载重新安装了</p>
<p>多谢上述博主提供的方法</p>
<p>这件事也显示了各个版本之间的 兼容 与 矛盾</p>
<p>版本的选择真的很重要</p>
<p>————————————————————————————————————<br>如果有使用 yolov3 算法中遇到各种问题的朋友可以评论你的问题，我几乎把所有能遇到的问题都遇到了，应该可以给予帮助</p>
]]></content>
      <categories>
        <category>python</category>
        <category>error&amp;库</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>error&amp;库</tag>
      </tags>
  </entry>
  <entry>
    <title>python 使用镜像安装库时提示 Warning——已解决</title>
    <url>/python%20%E4%BD%BF%E7%94%A8%E9%95%9C%E5%83%8F%E5%AE%89%E8%A3%85%E5%BA%93%E6%97%B6%E6%8F%90%E7%A4%BA%20Warning%E2%80%94%E2%80%94%E5%B7%B2%E8%A7%A3%E5%86%B3.html</url>
    <content><![CDATA[<h2 id="事件起因："><a href="#事件起因：" class="headerlink" title="事件起因："></a>事件起因：</h2><p><img src="https://img-blog.csdnimg.cn/20200318014810411.png" alt="在这里插入图片描述"></p>
<p>看这张图，使用清华镜像时提示 warning：<br><code>Warning: &#39;https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/&#39; already in &#39;channels&#39; list, moving to the top</code></p>
<a id="more"></a>
<h2 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h2><p>在 C 盘的用户目录下找到 <code>.condarc</code> 文件<br><img src="https://img-blog.csdnimg.cn/20200318015055134.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>双击用记事本打开</p>
<p>可以看到文件里有清华源的链接<br><img src="https://img-blog.csdnimg.cn/20200318015226395.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>直接删除链接：</p>
<p><img src="https://img-blog.csdnimg.cn/20200318015324793.png" alt="在这里插入图片描述"></p>
<blockquote>
<p><strong>记得把文件保存再关闭</strong></p>
<p><strong>即可正常使用</strong></p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/2020031801543635.png" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>python</category>
        <category>error&amp;库</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>error&amp;库</tag>
      </tags>
  </entry>
  <entry>
    <title>python实现人数识别目标识别</title>
    <url>/python%E5%AE%9E%E7%8E%B0%E4%BA%BA%E6%95%B0%E8%AF%86%E5%88%AB%E7%9B%AE%E6%A0%87%E8%AF%86%E5%88%AB.html</url>
    <content><![CDATA[<p>python 实现 yolo 人数识别或目标识别：<a href="https://blog.csdn.net/qq_45504119/article/details/105033492" target="_blank" rel="noopener">https://blog.csdn.net/qq_45504119/article/details/105033492</a></p>
]]></content>
      <categories>
        <category>python</category>
        <category>机器视觉</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>机器视觉</tag>
      </tags>
  </entry>
  <entry>
    <title>python绝对兼容的库配置——机器学习&amp;爬虫</title>
    <url>/python%E7%BB%9D%E5%AF%B9%E5%85%BC%E5%AE%B9%E7%9A%84%E5%BA%93%E9%85%8D%E7%BD%AE%E2%80%94%E2%80%94%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0&amp;%E7%88%AC%E8%99%AB.html</url>
    <content><![CDATA[<blockquote>
<p> <strong>Time: 2020/4/1   15:01</strong></p>
</blockquote>
<p>更新一下我的 python 库的版本，以免以后我自己搞错了…</p>
<p>相比上次机器学习的库，这次多了部分爬虫的库</p>
<a id="more"></a>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">Package                            Version</span><br><span class="line">---------------------------------- -----------</span><br><span class="line">-eras                              <span class="number">2.2</span><span class="number">.0</span></span><br><span class="line">absl-py                            <span class="number">0.9</span><span class="number">.0</span></span><br><span class="line">aiodns                             <span class="number">2.0</span><span class="number">.0</span></span><br><span class="line">aiohttp                            <span class="number">3.6</span><span class="number">.2</span></span><br><span class="line">alabaster                          <span class="number">0.7</span><span class="number">.10</span></span><br><span class="line">anaconda-client                    <span class="number">1.6</span><span class="number">.14</span></span><br><span class="line">anaconda-navigator                 <span class="number">1.8</span><span class="number">.7</span></span><br><span class="line">anaconda-project                   <span class="number">0.8</span><span class="number">.2</span></span><br><span class="line">asn1crypto                         <span class="number">0.24</span><span class="number">.0</span></span><br><span class="line">astor                              <span class="number">0.8</span><span class="number">.1</span></span><br><span class="line">astroid                            <span class="number">1.6</span><span class="number">.3</span></span><br><span class="line">astropy                            <span class="number">3.0</span><span class="number">.2</span></span><br><span class="line"><span class="keyword">async</span>-timeout                      <span class="number">3.0</span><span class="number">.1</span></span><br><span class="line">attrs                              <span class="number">18.1</span><span class="number">.0</span></span><br><span class="line">Automat                            <span class="number">20.2</span><span class="number">.0</span></span><br><span class="line">Babel                              <span class="number">2.5</span><span class="number">.3</span></span><br><span class="line">backcall                           <span class="number">0.1</span><span class="number">.0</span></span><br><span class="line">backports.shutil-get-terminal-size <span class="number">1.0</span><span class="number">.0</span></span><br><span class="line">backports.weakref                  <span class="number">1.0</span>rc1</span><br><span class="line">beautifulsoup4                     <span class="number">4.6</span><span class="number">.0</span></span><br><span class="line">bitarray                           <span class="number">0.8</span><span class="number">.1</span></span><br><span class="line">bkcharts                           <span class="number">0.2</span></span><br><span class="line">blaze                              <span class="number">0.11</span><span class="number">.3</span></span><br><span class="line">bleach                             <span class="number">1.5</span><span class="number">.0</span></span><br><span class="line">bokeh                              <span class="number">0.12</span><span class="number">.16</span></span><br><span class="line">boto                               <span class="number">2.48</span><span class="number">.0</span></span><br><span class="line">Bottleneck                         <span class="number">1.2</span><span class="number">.1</span></span><br><span class="line">brotlipy                           <span class="number">0.7</span><span class="number">.0</span></span><br><span class="line">cchardet                           <span class="number">2.1</span><span class="number">.6</span></span><br><span class="line">certifi                            <span class="number">2019.11</span><span class="number">.28</span></span><br><span class="line">cffi                               <span class="number">1.11</span><span class="number">.5</span></span><br><span class="line">chardet                            <span class="number">3.0</span><span class="number">.4</span></span><br><span class="line">click                              <span class="number">6.7</span></span><br><span class="line">cloudpickle                        <span class="number">0.5</span><span class="number">.3</span></span><br><span class="line">clyent                             <span class="number">1.2</span><span class="number">.2</span></span><br><span class="line">colorama                           <span class="number">0.3</span><span class="number">.9</span></span><br><span class="line">comtypes                           <span class="number">1.1</span><span class="number">.4</span></span><br><span class="line">conda                              <span class="number">4.8</span><span class="number">.3</span></span><br><span class="line">conda-build                        <span class="number">3.10</span><span class="number">.5</span></span><br><span class="line">conda-package-handling             <span class="number">1.6</span><span class="number">.0</span></span><br><span class="line">conda-verify                       <span class="number">2.0</span><span class="number">.0</span></span><br><span class="line">constantly                         <span class="number">15.1</span><span class="number">.0</span></span><br><span class="line">contextlib2                        <span class="number">0.5</span><span class="number">.5</span></span><br><span class="line">cryptography                       <span class="number">2.8</span></span><br><span class="line">cssselect                          <span class="number">1.1</span><span class="number">.0</span></span><br><span class="line">cycler                             <span class="number">0.10</span><span class="number">.0</span></span><br><span class="line">Cython                             <span class="number">0.28</span><span class="number">.2</span></span><br><span class="line">cytoolz                            <span class="number">0.9</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">dask                               <span class="number">0.17</span><span class="number">.5</span></span><br><span class="line">datashape                          <span class="number">0.5</span><span class="number">.4</span></span><br><span class="line">decorator                          <span class="number">4.3</span><span class="number">.0</span></span><br><span class="line">defusedxml                         <span class="number">0.6</span><span class="number">.0</span></span><br><span class="line">distributed                        <span class="number">1.21</span><span class="number">.8</span></span><br><span class="line">docutils                           <span class="number">0.14</span></span><br><span class="line">entrypoints                        <span class="number">0.2</span><span class="number">.3</span></span><br><span class="line">et-xmlfile                         <span class="number">1.0</span><span class="number">.1</span></span><br><span class="line">fastcache                          <span class="number">1.0</span><span class="number">.2</span></span><br><span class="line">ffmpeg                             <span class="number">1.4</span></span><br><span class="line">filelock                           <span class="number">3.0</span><span class="number">.4</span></span><br><span class="line">Flask                              <span class="number">1.0</span><span class="number">.2</span></span><br><span class="line">Flask-Cors                         <span class="number">3.0</span><span class="number">.4</span></span><br><span class="line">Flask-Login                        <span class="number">0.5</span><span class="number">.0</span></span><br><span class="line">gast                               <span class="number">0.2</span><span class="number">.2</span></span><br><span class="line">gevent                             <span class="number">1.3</span><span class="number">.0</span></span><br><span class="line">glob2                              <span class="number">0.6</span></span><br><span class="line">greenlet                           <span class="number">0.4</span><span class="number">.13</span></span><br><span class="line">grpcio                             <span class="number">1.27</span><span class="number">.2</span></span><br><span class="line">h5py                               <span class="number">2.8</span><span class="number">.0</span></span><br><span class="line">heapdict                           <span class="number">1.0</span><span class="number">.0</span></span><br><span class="line">html5lib                           <span class="number">0.9999999</span></span><br><span class="line">hyperlink                          <span class="number">19.0</span><span class="number">.0</span></span><br><span class="line">idna                               <span class="number">2.6</span></span><br><span class="line">idna-ssl                           <span class="number">1.1</span><span class="number">.0</span></span><br><span class="line">imageio                            <span class="number">2.3</span><span class="number">.0</span></span><br><span class="line">imagesize                          <span class="number">1.0</span><span class="number">.0</span></span><br><span class="line">incremental                        <span class="number">17.5</span><span class="number">.0</span></span><br><span class="line">ipykernel                          <span class="number">4.8</span><span class="number">.2</span></span><br><span class="line">ipython                            <span class="number">6.4</span><span class="number">.0</span></span><br><span class="line">ipython-genutils                   <span class="number">0.2</span><span class="number">.0</span></span><br><span class="line">ipywidgets                         <span class="number">7.2</span><span class="number">.1</span></span><br><span class="line">isort                              <span class="number">4.3</span><span class="number">.4</span></span><br><span class="line">itsdangerous                       <span class="number">0.24</span></span><br><span class="line">jdcal                              <span class="number">1.4</span></span><br><span class="line">jedi                               <span class="number">0.12</span><span class="number">.0</span></span><br><span class="line">Jinja2                             <span class="number">2.10</span></span><br><span class="line">json5                              <span class="number">0.9</span><span class="number">.4</span></span><br><span class="line">jsonschema                         <span class="number">2.6</span><span class="number">.0</span></span><br><span class="line">jupyter                            <span class="number">1.0</span><span class="number">.0</span></span><br><span class="line">jupyter-client                     <span class="number">5.2</span><span class="number">.3</span></span><br><span class="line">jupyter-console                    <span class="number">5.2</span><span class="number">.0</span></span><br><span class="line">jupyter-core                       <span class="number">4.4</span><span class="number">.0</span></span><br><span class="line">jupyterlab                         <span class="number">0.32</span><span class="number">.1</span></span><br><span class="line">jupyterlab-launcher                <span class="number">0.10</span><span class="number">.5</span></span><br><span class="line">Keras                              <span class="number">2.2</span><span class="number">.4</span></span><br><span class="line">Keras-Applications                 <span class="number">1.0</span><span class="number">.8</span></span><br><span class="line">Keras-Preprocessing                <span class="number">1.1</span><span class="number">.0</span></span><br><span class="line">kiwisolver                         <span class="number">1.0</span><span class="number">.1</span></span><br><span class="line">labelImg                           <span class="number">1.8</span><span class="number">.3</span></span><br><span class="line">lazy-object-proxy                  <span class="number">1.3</span><span class="number">.1</span></span><br><span class="line">llvmlite                           <span class="number">0.23</span><span class="number">.1</span></span><br><span class="line">locket                             <span class="number">0.2</span><span class="number">.0</span></span><br><span class="line">lxml                               <span class="number">4.2</span><span class="number">.1</span></span><br><span class="line">Markdown                           <span class="number">3.1</span><span class="number">.1</span></span><br><span class="line">MarkupSafe                         <span class="number">1.0</span></span><br><span class="line">matplotlib                         <span class="number">2.2</span><span class="number">.2</span></span><br><span class="line">mccabe                             <span class="number">0.6</span><span class="number">.1</span></span><br><span class="line">menuinst                           <span class="number">1.4</span><span class="number">.14</span></span><br><span class="line">mistune                            <span class="number">0.8</span><span class="number">.3</span></span><br><span class="line">mkl-fft                            <span class="number">1.0</span><span class="number">.0</span></span><br><span class="line">mkl-random                         <span class="number">1.0</span><span class="number">.1</span></span><br><span class="line">more-itertools                     <span class="number">4.1</span><span class="number">.0</span></span><br><span class="line">mpmath                             <span class="number">1.0</span><span class="number">.0</span></span><br><span class="line">msgpack-python                     <span class="number">0.5</span><span class="number">.6</span></span><br><span class="line">multidict                          <span class="number">4.7</span><span class="number">.5</span></span><br><span class="line">multipledispatch                   <span class="number">0.5</span><span class="number">.0</span></span><br><span class="line">mysql                              <span class="number">0.0</span><span class="number">.2</span></span><br><span class="line">mysqlclient                        <span class="number">1.4</span><span class="number">.6</span></span><br><span class="line">navigator-updater                  <span class="number">0.2</span><span class="number">.1</span></span><br><span class="line">nbconvert                          <span class="number">5.3</span><span class="number">.1</span></span><br><span class="line">nbformat                           <span class="number">4.4</span><span class="number">.0</span></span><br><span class="line">networkx                           <span class="number">2.1</span></span><br><span class="line">nltk                               <span class="number">3.3</span></span><br><span class="line">nose                               <span class="number">1.3</span><span class="number">.7</span></span><br><span class="line">notebook                           <span class="number">5.5</span><span class="number">.0</span></span><br><span class="line">numba                              <span class="number">0.38</span><span class="number">.0</span></span><br><span class="line">numexpr                            <span class="number">2.6</span><span class="number">.5</span></span><br><span class="line">numpy                              <span class="number">1.18</span><span class="number">.2</span></span><br><span class="line">numpydoc                           <span class="number">0.8</span><span class="number">.0</span></span><br><span class="line">odo                                <span class="number">0.5</span><span class="number">.1</span></span><br><span class="line">olefile                            <span class="number">0.45</span><span class="number">.1</span></span><br><span class="line">opencv-contrib-python              <span class="number">4.2</span><span class="number">.0</span><span class="number">.32</span></span><br><span class="line">openpyxl                           <span class="number">2.5</span><span class="number">.3</span></span><br><span class="line">packaging                          <span class="number">17.1</span></span><br><span class="line">pandas                             <span class="number">0.23</span><span class="number">.0</span></span><br><span class="line">pandocfilters                      <span class="number">1.4</span><span class="number">.2</span></span><br><span class="line">parsel                             <span class="number">1.5</span><span class="number">.2</span></span><br><span class="line">parso                              <span class="number">0.2</span><span class="number">.0</span></span><br><span class="line">partd                              <span class="number">0.3</span><span class="number">.8</span></span><br><span class="line">path.py                            <span class="number">11.0</span><span class="number">.1</span></span><br><span class="line">pathlib2                           <span class="number">2.3</span><span class="number">.2</span></span><br><span class="line">patsy                              <span class="number">0.5</span><span class="number">.0</span></span><br><span class="line">pep8                               <span class="number">1.7</span><span class="number">.1</span></span><br><span class="line">phantomjs                          <span class="number">1.1</span><span class="number">.4</span></span><br><span class="line">pickleshare                        <span class="number">0.7</span><span class="number">.4</span></span><br><span class="line">Pillow                             <span class="number">5.1</span><span class="number">.0</span></span><br><span class="line">pip                                <span class="number">20.0</span><span class="number">.2</span></span><br><span class="line">pkginfo                            <span class="number">1.4</span><span class="number">.2</span></span><br><span class="line">pluggy                             <span class="number">0.6</span><span class="number">.0</span></span><br><span class="line">ply                                <span class="number">3.11</span></span><br><span class="line">prompt-toolkit                     <span class="number">1.0</span><span class="number">.15</span></span><br><span class="line">Protego                            <span class="number">0.1</span><span class="number">.16</span></span><br><span class="line">protobuf                           <span class="number">3.11</span><span class="number">.4</span></span><br><span class="line">psutil                             <span class="number">5.4</span><span class="number">.5</span></span><br><span class="line">py                                 <span class="number">1.5</span><span class="number">.3</span></span><br><span class="line">pyasn1                             <span class="number">0.4</span><span class="number">.8</span></span><br><span class="line">pyasn1-modules                     <span class="number">0.2</span><span class="number">.8</span></span><br><span class="line">pycares                            <span class="number">3.1</span><span class="number">.1</span></span><br><span class="line">pycodestyle                        <span class="number">2.4</span><span class="number">.0</span></span><br><span class="line">pycosat                            <span class="number">0.6</span><span class="number">.3</span></span><br><span class="line">pycparser                          <span class="number">2.18</span></span><br><span class="line">pycrypto                           <span class="number">2.6</span><span class="number">.1</span></span><br><span class="line">pycurl                             <span class="number">7.43</span><span class="number">.0</span><span class="number">.5</span></span><br><span class="line">PyDispatcher                       <span class="number">2.0</span><span class="number">.5</span></span><br><span class="line">pyflakes                           <span class="number">1.6</span><span class="number">.0</span></span><br><span class="line">Pygments                           <span class="number">2.2</span><span class="number">.0</span></span><br><span class="line">PyHamcrest                         <span class="number">2.0</span><span class="number">.2</span></span><br><span class="line">pylint                             <span class="number">1.8</span><span class="number">.4</span></span><br><span class="line">PyMySQL                            <span class="number">0.9</span><span class="number">.3</span></span><br><span class="line">pyodbc                             <span class="number">4.0</span><span class="number">.23</span></span><br><span class="line">pyOpenSSL                          <span class="number">18.0</span><span class="number">.0</span></span><br><span class="line">pyparsing                          <span class="number">2.2</span><span class="number">.0</span></span><br><span class="line">PyQt5                              <span class="number">5.14</span><span class="number">.1</span></span><br><span class="line">PyQt5-sip                          <span class="number">12.7</span><span class="number">.1</span></span><br><span class="line">pyquery                            <span class="number">1.4</span><span class="number">.1</span></span><br><span class="line">PySocks                            <span class="number">1.6</span><span class="number">.8</span></span><br><span class="line">pyspider                           <span class="number">0.3</span><span class="number">.10</span></span><br><span class="line">pytest                             <span class="number">3.5</span><span class="number">.1</span></span><br><span class="line">pytest-arraydiff                   <span class="number">0.2</span></span><br><span class="line">pytest-astropy                     <span class="number">0.3</span><span class="number">.0</span></span><br><span class="line">pytest-doctestplus                 <span class="number">0.1</span><span class="number">.3</span></span><br><span class="line">pytest-openfiles                   <span class="number">0.3</span><span class="number">.0</span></span><br><span class="line">pytest-remotedata                  <span class="number">0.2</span><span class="number">.1</span></span><br><span class="line">python-dateutil                    <span class="number">2.7</span><span class="number">.3</span></span><br><span class="line">pytz                               <span class="number">2018.4</span></span><br><span class="line">PyWavelets                         <span class="number">0.5</span><span class="number">.2</span></span><br><span class="line">pywin32                            <span class="number">223</span></span><br><span class="line">pywinpty                           <span class="number">0.5</span><span class="number">.1</span></span><br><span class="line">PyYAML                             <span class="number">3.12</span></span><br><span class="line">pyzmq                              <span class="number">17.0</span><span class="number">.0</span></span><br><span class="line">QtAwesome                          <span class="number">0.4</span><span class="number">.4</span></span><br><span class="line">qtconsole                          <span class="number">4.3</span><span class="number">.1</span></span><br><span class="line">QtPy                               <span class="number">1.4</span><span class="number">.1</span></span><br><span class="line">queuelib                           <span class="number">1.5</span><span class="number">.0</span></span><br><span class="line">redis                              <span class="number">3.4</span><span class="number">.1</span></span><br><span class="line">requests                           <span class="number">2.18</span><span class="number">.4</span></span><br><span class="line">rope                               <span class="number">0.10</span><span class="number">.7</span></span><br><span class="line">ruamel-yaml                        <span class="number">0.15</span><span class="number">.35</span></span><br><span class="line">scikit-image                       <span class="number">0.13</span><span class="number">.1</span></span><br><span class="line">scikit-learn                       <span class="number">0.19</span><span class="number">.1</span></span><br><span class="line">scipy                              <span class="number">1.4</span><span class="number">.1</span></span><br><span class="line">Scrapy                             <span class="number">2.0</span><span class="number">.1</span></span><br><span class="line">seaborn                            <span class="number">0.8</span><span class="number">.1</span></span><br><span class="line">selenium                           <span class="number">3.141</span><span class="number">.0</span></span><br><span class="line">Send2Trash                         <span class="number">1.5</span><span class="number">.0</span></span><br><span class="line">service-identity                   <span class="number">18.1</span><span class="number">.0</span></span><br><span class="line">setuptools                         <span class="number">39.1</span><span class="number">.0</span></span><br><span class="line">simplegeneric                      <span class="number">0.8</span><span class="number">.1</span></span><br><span class="line">singledispatch                     <span class="number">3.4</span><span class="number">.0</span><span class="number">.3</span></span><br><span class="line">six                                <span class="number">1.11</span><span class="number">.0</span></span><br><span class="line">snowballstemmer                    <span class="number">1.2</span><span class="number">.1</span></span><br><span class="line">sortedcollections                  <span class="number">0.6</span><span class="number">.1</span></span><br><span class="line">sortedcontainers                   <span class="number">1.5</span><span class="number">.10</span></span><br><span class="line">Sphinx                             <span class="number">1.7</span><span class="number">.4</span></span><br><span class="line">sphinxcontrib-websupport           <span class="number">1.0</span><span class="number">.1</span></span><br><span class="line">spyder                             <span class="number">3.2</span><span class="number">.8</span></span><br><span class="line">SQLAlchemy                         <span class="number">1.2</span><span class="number">.7</span></span><br><span class="line">statsmodels                        <span class="number">0.9</span><span class="number">.0</span></span><br><span class="line">sympy                              <span class="number">1.1</span><span class="number">.1</span></span><br><span class="line">tables                             <span class="number">3.4</span><span class="number">.3</span></span><br><span class="line">TBB                                <span class="number">0.1</span></span><br><span class="line">tblib                              <span class="number">1.3</span><span class="number">.2</span></span><br><span class="line">tensorboard                        <span class="number">1.12</span><span class="number">.2</span></span><br><span class="line">tensorflow                         <span class="number">1.12</span><span class="number">.0</span></span><br><span class="line">tensorflow-base                    <span class="number">0.0</span><span class="number">.0</span>.post2</span><br><span class="line">termcolor                          <span class="number">1.1</span><span class="number">.0</span></span><br><span class="line">terminado                          <span class="number">0.8</span><span class="number">.1</span></span><br><span class="line">testpath                           <span class="number">0.3</span><span class="number">.1</span></span><br><span class="line">toolz                              <span class="number">0.9</span><span class="number">.0</span></span><br><span class="line">tornado                            <span class="number">4.5</span><span class="number">.3</span></span><br><span class="line">tqdm                               <span class="number">4.43</span><span class="number">.0</span></span><br><span class="line">traitlets                          <span class="number">4.3</span><span class="number">.2</span></span><br><span class="line">Twisted                            <span class="number">20.3</span><span class="number">.0</span></span><br><span class="line">typing                             <span class="number">3.6</span><span class="number">.4</span></span><br><span class="line">typing-extensions                  <span class="number">3.7</span><span class="number">.4</span><span class="number">.1</span></span><br><span class="line">u-msgpack-python                   <span class="number">2.5</span><span class="number">.2</span></span><br><span class="line">unicodecsv                         <span class="number">0.14</span><span class="number">.1</span></span><br><span class="line">urllib3                            <span class="number">1.22</span></span><br><span class="line">w3lib                              <span class="number">1.21</span><span class="number">.0</span></span><br><span class="line">wcwidth                            <span class="number">0.1</span><span class="number">.7</span></span><br><span class="line">webencodings                       <span class="number">0.5</span><span class="number">.1</span></span><br><span class="line">Werkzeug                           <span class="number">0.14</span><span class="number">.1</span></span><br><span class="line">wheel                              <span class="number">0.31</span><span class="number">.1</span></span><br><span class="line">widgetsnbextension                 <span class="number">3.2</span><span class="number">.1</span></span><br><span class="line">win-inet-pton                      <span class="number">1.0</span><span class="number">.1</span></span><br><span class="line">win-unicode-console                <span class="number">0.5</span></span><br><span class="line">wincertstore                       <span class="number">0.2</span></span><br><span class="line">wrapt                              <span class="number">1.10</span><span class="number">.11</span></span><br><span class="line">WsgiDAV                            <span class="number">3.0</span><span class="number">.2</span></span><br><span class="line">xlrd                               <span class="number">1.1</span><span class="number">.0</span></span><br><span class="line">XlsxWriter                         <span class="number">1.0</span><span class="number">.4</span></span><br><span class="line">xlwings                            <span class="number">0.11</span><span class="number">.8</span></span><br><span class="line">xlwt                               <span class="number">1.3</span><span class="number">.0</span></span><br><span class="line">yarl                               <span class="number">1.4</span><span class="number">.2</span></span><br><span class="line">zict                               <span class="number">0.1</span><span class="number">.3</span></span><br><span class="line">zope.interface                     <span class="number">5.0</span><span class="number">.2</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>python</category>
        <category>机器视觉</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>机器视觉</tag>
      </tags>
  </entry>
  <entry>
    <title>python绝对兼容的库配置——机器学习</title>
    <url>/python%E7%BB%9D%E5%AF%B9%E5%85%BC%E5%AE%B9%E7%9A%84%E5%BA%93%E9%85%8D%E7%BD%AE%E2%80%94%E2%80%94%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0.html</url>
    <content><![CDATA[<p>先给大家推荐一个：<a href="https://docs.floydhub.com/guides/environments/" target="_blank" rel="noopener">深度学习环境兼容性配置</a></p>
<p>接下来记录一下我的 python 库的版本，以免以后我自己搞错了…</p>
<a id="more"></a>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">Package                            Version</span><br><span class="line">---------------------------------- -----------</span><br><span class="line">-eras                              <span class="number">2.2</span><span class="number">.0</span></span><br><span class="line">absl-py                            <span class="number">0.9</span><span class="number">.0</span></span><br><span class="line">alabaster                          <span class="number">0.7</span><span class="number">.10</span></span><br><span class="line">anaconda-client                    <span class="number">1.6</span><span class="number">.14</span></span><br><span class="line">anaconda-navigator                 <span class="number">1.8</span><span class="number">.7</span></span><br><span class="line">anaconda-project                   <span class="number">0.8</span><span class="number">.2</span></span><br><span class="line">asn1crypto                         <span class="number">0.24</span><span class="number">.0</span></span><br><span class="line">astor                              <span class="number">0.8</span><span class="number">.1</span></span><br><span class="line">astroid                            <span class="number">1.6</span><span class="number">.3</span></span><br><span class="line">astropy                            <span class="number">3.0</span><span class="number">.2</span></span><br><span class="line">attrs                              <span class="number">18.1</span><span class="number">.0</span></span><br><span class="line">Babel                              <span class="number">2.5</span><span class="number">.3</span></span><br><span class="line">backcall                           <span class="number">0.1</span><span class="number">.0</span></span><br><span class="line">backports.shutil-<span class="built_in">get</span>-terminal-<span class="built_in">size</span> <span class="number">1.0</span><span class="number">.0</span></span><br><span class="line">backports.weakref                  <span class="number">1.0</span>rc1</span><br><span class="line">beautifulsoup4                     <span class="number">4.6</span><span class="number">.0</span></span><br><span class="line">bitarray                           <span class="number">0.8</span><span class="number">.1</span></span><br><span class="line">bkcharts                           <span class="number">0.2</span></span><br><span class="line">blaze                              <span class="number">0.11</span><span class="number">.3</span></span><br><span class="line">bleach                             <span class="number">1.5</span><span class="number">.0</span></span><br><span class="line">bokeh                              <span class="number">0.12</span><span class="number">.16</span></span><br><span class="line">boto                               <span class="number">2.48</span><span class="number">.0</span></span><br><span class="line">Bottleneck                         <span class="number">1.2</span><span class="number">.1</span></span><br><span class="line">certifi                            <span class="number">2019.11</span><span class="number">.28</span></span><br><span class="line">cffi                               <span class="number">1.11</span><span class="number">.5</span></span><br><span class="line">chardet                            <span class="number">3.0</span><span class="number">.4</span></span><br><span class="line"><span class="built_in">click</span>                              <span class="number">6.7</span></span><br><span class="line">cloudpickle                        <span class="number">0.5</span><span class="number">.3</span></span><br><span class="line">clyent                             <span class="number">1.2</span><span class="number">.2</span></span><br><span class="line">colorama                           <span class="number">0.3</span><span class="number">.9</span></span><br><span class="line">comtypes                           <span class="number">1.1</span><span class="number">.4</span></span><br><span class="line">conda                              <span class="number">4.8</span><span class="number">.3</span></span><br><span class="line">conda-build                        <span class="number">3.10</span><span class="number">.5</span></span><br><span class="line">conda-package-handling             <span class="number">1.6</span><span class="number">.0</span></span><br><span class="line">conda-verify                       <span class="number">2.0</span><span class="number">.0</span></span><br><span class="line">contextlib2                        <span class="number">0.5</span><span class="number">.5</span></span><br><span class="line">cryptography                       <span class="number">2.8</span></span><br><span class="line">cycler                             <span class="number">0.10</span><span class="number">.0</span></span><br><span class="line">Cython                             <span class="number">0.28</span><span class="number">.2</span></span><br><span class="line">cytoolz                            <span class="number">0.9</span><span class="number">.0</span><span class="number">.1</span></span><br><span class="line">dask                               <span class="number">0.17</span><span class="number">.5</span></span><br><span class="line">datashape                          <span class="number">0.5</span><span class="number">.4</span></span><br><span class="line">decorator                          <span class="number">4.3</span><span class="number">.0</span></span><br><span class="line">distributed                        <span class="number">1.21</span><span class="number">.8</span></span><br><span class="line">docutils                           <span class="number">0.14</span></span><br><span class="line">entrypoints                        <span class="number">0.2</span><span class="number">.3</span></span><br><span class="line">et-xmlfile                         <span class="number">1.0</span><span class="number">.1</span></span><br><span class="line">fastcache                          <span class="number">1.0</span><span class="number">.2</span></span><br><span class="line">ffmpeg                             <span class="number">1.4</span></span><br><span class="line">filelock                           <span class="number">3.0</span><span class="number">.4</span></span><br><span class="line">Flask                              <span class="number">1.0</span><span class="number">.2</span></span><br><span class="line">Flask-Cors                         <span class="number">3.0</span><span class="number">.4</span></span><br><span class="line">gast                               <span class="number">0.2</span><span class="number">.2</span></span><br><span class="line">gevent                             <span class="number">1.3</span><span class="number">.0</span></span><br><span class="line">glob2                              <span class="number">0.6</span></span><br><span class="line">greenlet                           <span class="number">0.4</span><span class="number">.13</span></span><br><span class="line">grpcio                             <span class="number">1.27</span><span class="number">.2</span></span><br><span class="line">h5py                               <span class="number">2.8</span><span class="number">.0</span></span><br><span class="line">heapdict                           <span class="number">1.0</span><span class="number">.0</span></span><br><span class="line">html5lib                           <span class="number">0.9999999</span></span><br><span class="line">idna                               <span class="number">2.6</span></span><br><span class="line">imageio                            <span class="number">2.3</span><span class="number">.0</span></span><br><span class="line">imagesize                          <span class="number">1.0</span><span class="number">.0</span></span><br><span class="line">ipykernel                          <span class="number">4.8</span><span class="number">.2</span></span><br><span class="line">ipython                            <span class="number">6.4</span><span class="number">.0</span></span><br><span class="line">ipython-genutils                   <span class="number">0.2</span><span class="number">.0</span></span><br><span class="line">ipywidgets                         <span class="number">7.2</span><span class="number">.1</span></span><br><span class="line">isort                              <span class="number">4.3</span><span class="number">.4</span></span><br><span class="line">itsdangerous                       <span class="number">0.24</span></span><br><span class="line">jdcal                              <span class="number">1.4</span></span><br><span class="line">jedi                               <span class="number">0.12</span><span class="number">.0</span></span><br><span class="line">Jinja2                             <span class="number">2.10</span></span><br><span class="line">jsonschema                         <span class="number">2.6</span><span class="number">.0</span></span><br><span class="line">jupyter                            <span class="number">1.0</span><span class="number">.0</span></span><br><span class="line">jupyter-client                     <span class="number">5.2</span><span class="number">.3</span></span><br><span class="line">jupyter-console                    <span class="number">5.2</span><span class="number">.0</span></span><br><span class="line">jupyter-core                       <span class="number">4.4</span><span class="number">.0</span></span><br><span class="line">jupyterlab                         <span class="number">0.32</span><span class="number">.1</span></span><br><span class="line">jupyterlab-launcher                <span class="number">0.10</span><span class="number">.5</span></span><br><span class="line">Keras                              <span class="number">2.2</span><span class="number">.4</span></span><br><span class="line">Keras-Applications                 <span class="number">1.0</span><span class="number">.8</span></span><br><span class="line">Keras-Preprocessing                <span class="number">1.1</span><span class="number">.0</span></span><br><span class="line">kiwisolver                         <span class="number">1.0</span><span class="number">.1</span></span><br><span class="line">labelImg                           <span class="number">1.8</span><span class="number">.3</span></span><br><span class="line">lazy-object-proxy                  <span class="number">1.3</span><span class="number">.1</span></span><br><span class="line">llvmlite                           <span class="number">0.23</span><span class="number">.1</span></span><br><span class="line">locket                             <span class="number">0.2</span><span class="number">.0</span></span><br><span class="line">lxml                               <span class="number">4.2</span><span class="number">.1</span></span><br><span class="line">Markdown                           <span class="number">3.1</span><span class="number">.1</span></span><br><span class="line">MarkupSafe                         <span class="number">1.0</span></span><br><span class="line">matplotlib                         <span class="number">2.2</span><span class="number">.2</span></span><br><span class="line">mccabe                             <span class="number">0.6</span><span class="number">.1</span></span><br><span class="line">menuinst                           <span class="number">1.4</span><span class="number">.14</span></span><br><span class="line">mistune                            <span class="number">0.8</span><span class="number">.3</span></span><br><span class="line">mkl-fft                            <span class="number">1.0</span><span class="number">.0</span></span><br><span class="line">mkl-<span class="built_in">random</span>                         <span class="number">1.0</span><span class="number">.1</span></span><br><span class="line">more-itertools                     <span class="number">4.1</span><span class="number">.0</span></span><br><span class="line">mpmath                             <span class="number">1.0</span><span class="number">.0</span></span><br><span class="line">msgpack-python                     <span class="number">0.5</span><span class="number">.6</span></span><br><span class="line">multipledispatch                   <span class="number">0.5</span><span class="number">.0</span></span><br><span class="line">navigator-updater                  <span class="number">0.2</span><span class="number">.1</span></span><br><span class="line">nbconvert                          <span class="number">5.3</span><span class="number">.1</span></span><br><span class="line">nbformat                           <span class="number">4.4</span><span class="number">.0</span></span><br><span class="line">networkx                           <span class="number">2.1</span></span><br><span class="line">nltk                               <span class="number">3.3</span></span><br><span class="line">nose                               <span class="number">1.3</span><span class="number">.7</span></span><br><span class="line">notebook                           <span class="number">5.5</span><span class="number">.0</span></span><br><span class="line">numba                              <span class="number">0.38</span><span class="number">.0</span></span><br><span class="line">numexpr                            <span class="number">2.6</span><span class="number">.5</span></span><br><span class="line">numpy                              <span class="number">1.18</span><span class="number">.2</span></span><br><span class="line">numpydoc                           <span class="number">0.8</span><span class="number">.0</span></span><br><span class="line">odo                                <span class="number">0.5</span><span class="number">.1</span></span><br><span class="line">olefile                            <span class="number">0.45</span><span class="number">.1</span></span><br><span class="line">opencv-contrib-python              <span class="number">4.2</span><span class="number">.0</span><span class="number">.32</span></span><br><span class="line">openpyxl                           <span class="number">2.5</span><span class="number">.3</span></span><br><span class="line">packaging                          <span class="number">17.1</span></span><br><span class="line">pandas                             <span class="number">0.23</span><span class="number">.0</span></span><br><span class="line">pandocfilters                      <span class="number">1.4</span><span class="number">.2</span></span><br><span class="line">parso                              <span class="number">0.2</span><span class="number">.0</span></span><br><span class="line">partd                              <span class="number">0.3</span><span class="number">.8</span></span><br><span class="line">path.py                            <span class="number">11.0</span><span class="number">.1</span></span><br><span class="line">pathlib2                           <span class="number">2.3</span><span class="number">.2</span></span><br><span class="line">patsy                              <span class="number">0.5</span><span class="number">.0</span></span><br><span class="line">pep8                               <span class="number">1.7</span><span class="number">.1</span></span><br><span class="line">pickleshare                        <span class="number">0.7</span><span class="number">.4</span></span><br><span class="line">Pillow                             <span class="number">5.1</span><span class="number">.0</span></span><br><span class="line">pip                                <span class="number">20.0</span><span class="number">.2</span></span><br><span class="line">pkginfo                            <span class="number">1.4</span><span class="number">.2</span></span><br><span class="line">pluggy                             <span class="number">0.6</span><span class="number">.0</span></span><br><span class="line">ply                                <span class="number">3.11</span></span><br><span class="line">prompt-toolkit                     <span class="number">1.0</span><span class="number">.15</span></span><br><span class="line">protobuf                           <span class="number">3.11</span><span class="number">.4</span></span><br><span class="line">psutil                             <span class="number">5.4</span><span class="number">.5</span></span><br><span class="line">py                                 <span class="number">1.5</span><span class="number">.3</span></span><br><span class="line">pycodestyle                        <span class="number">2.4</span><span class="number">.0</span></span><br><span class="line">pycosat                            <span class="number">0.6</span><span class="number">.3</span></span><br><span class="line">pycparser                          <span class="number">2.18</span></span><br><span class="line">pycrypto                           <span class="number">2.6</span><span class="number">.1</span></span><br><span class="line">pycurl                             <span class="number">7.43</span><span class="number">.0</span><span class="number">.5</span></span><br><span class="line">pyflakes                           <span class="number">1.6</span><span class="number">.0</span></span><br><span class="line">Pygments                           <span class="number">2.2</span><span class="number">.0</span></span><br><span class="line">pylint                             <span class="number">1.8</span><span class="number">.4</span></span><br><span class="line">pyodbc                             <span class="number">4.0</span><span class="number">.23</span></span><br><span class="line">pyOpenSSL                          <span class="number">18.0</span><span class="number">.0</span></span><br><span class="line">pyparsing                          <span class="number">2.2</span><span class="number">.0</span></span><br><span class="line">PyQt5                              <span class="number">5.14</span><span class="number">.1</span></span><br><span class="line">PyQt5-sip                          <span class="number">12.7</span><span class="number">.1</span></span><br><span class="line">PySocks                            <span class="number">1.6</span><span class="number">.8</span></span><br><span class="line">pytest                             <span class="number">3.5</span><span class="number">.1</span></span><br><span class="line">pytest-arraydiff                   <span class="number">0.2</span></span><br><span class="line">pytest-astropy                     <span class="number">0.3</span><span class="number">.0</span></span><br><span class="line">pytest-doctestplus                 <span class="number">0.1</span><span class="number">.3</span></span><br><span class="line">pytest-openfiles                   <span class="number">0.3</span><span class="number">.0</span></span><br><span class="line">pytest-remotedata                  <span class="number">0.2</span><span class="number">.1</span></span><br><span class="line">python-dateutil                    <span class="number">2.7</span><span class="number">.3</span></span><br><span class="line">pytz                               <span class="number">2018.4</span></span><br><span class="line">PyWavelets                         <span class="number">0.5</span><span class="number">.2</span></span><br><span class="line">pywin32                            <span class="number">223</span></span><br><span class="line">pywinpty                           <span class="number">0.5</span><span class="number">.1</span></span><br><span class="line">PyYAML                             <span class="number">3.12</span></span><br><span class="line">pyzmq                              <span class="number">17.0</span><span class="number">.0</span></span><br><span class="line">QtAwesome                          <span class="number">0.4</span><span class="number">.4</span></span><br><span class="line">qtconsole                          <span class="number">4.3</span><span class="number">.1</span></span><br><span class="line">QtPy                               <span class="number">1.4</span><span class="number">.1</span></span><br><span class="line">requests                           <span class="number">2.18</span><span class="number">.4</span></span><br><span class="line">rope                               <span class="number">0.10</span><span class="number">.7</span></span><br><span class="line">ruamel-yaml                        <span class="number">0.15</span><span class="number">.35</span></span><br><span class="line">scikit-<span class="built_in">image</span>                       <span class="number">0.13</span><span class="number">.1</span></span><br><span class="line">scikit-learn                       <span class="number">0.19</span><span class="number">.1</span></span><br><span class="line">scipy                              <span class="number">1.4</span><span class="number">.1</span></span><br><span class="line">seaborn                            <span class="number">0.8</span><span class="number">.1</span></span><br><span class="line">Send2Trash                         <span class="number">1.5</span><span class="number">.0</span></span><br><span class="line">setuptools                         <span class="number">39.1</span><span class="number">.0</span></span><br><span class="line">simplegeneric                      <span class="number">0.8</span><span class="number">.1</span></span><br><span class="line">singledispatch                     <span class="number">3.4</span><span class="number">.0</span><span class="number">.3</span></span><br><span class="line">six                                <span class="number">1.11</span><span class="number">.0</span></span><br><span class="line">snowballstemmer                    <span class="number">1.2</span><span class="number">.1</span></span><br><span class="line">sortedcollections                  <span class="number">0.6</span><span class="number">.1</span></span><br><span class="line">sortedcontainers                   <span class="number">1.5</span><span class="number">.10</span></span><br><span class="line">Sphinx                             <span class="number">1.7</span><span class="number">.4</span></span><br><span class="line">sphinxcontrib-websupport           <span class="number">1.0</span><span class="number">.1</span></span><br><span class="line">spyder                             <span class="number">3.2</span><span class="number">.8</span></span><br><span class="line">SQLAlchemy                         <span class="number">1.2</span><span class="number">.7</span></span><br><span class="line">statsmodels                        <span class="number">0.9</span><span class="number">.0</span></span><br><span class="line">sympy                              <span class="number">1.1</span><span class="number">.1</span></span><br><span class="line">tables                             <span class="number">3.4</span><span class="number">.3</span></span><br><span class="line">TBB                                <span class="number">0.1</span></span><br><span class="line">tblib                              <span class="number">1.3</span><span class="number">.2</span></span><br><span class="line">tensorboard                        <span class="number">1.12</span><span class="number">.2</span></span><br><span class="line">tensorflow                         <span class="number">1.12</span><span class="number">.0</span></span><br><span class="line">tensorflow-base                    <span class="number">0.0</span><span class="number">.0</span>.post2</span><br><span class="line">tensorflow-gpu					   <span class="number">2.1</span><span class="number">.0</span>	</span><br><span class="line">termcolor                          <span class="number">1.1</span><span class="number">.0</span></span><br><span class="line">terminado                          <span class="number">0.8</span><span class="number">.1</span></span><br><span class="line">testpath                           <span class="number">0.3</span><span class="number">.1</span></span><br><span class="line">toolz                              <span class="number">0.9</span><span class="number">.0</span></span><br><span class="line">tornado                            <span class="number">5.0</span><span class="number">.2</span></span><br><span class="line">tqdm                               <span class="number">4.43</span><span class="number">.0</span></span><br><span class="line">traitlets                          <span class="number">4.3</span><span class="number">.2</span></span><br><span class="line">typing                             <span class="number">3.6</span><span class="number">.4</span></span><br><span class="line">unicodecsv                         <span class="number">0.14</span><span class="number">.1</span></span><br><span class="line">urllib3                            <span class="number">1.22</span></span><br><span class="line">wcwidth                            <span class="number">0.1</span><span class="number">.7</span></span><br><span class="line">webencodings                       <span class="number">0.5</span><span class="number">.1</span></span><br><span class="line">Werkzeug                           <span class="number">0.14</span><span class="number">.1</span></span><br><span class="line">wheel                              <span class="number">0.31</span><span class="number">.1</span></span><br><span class="line">widgetsnbextension                 <span class="number">3.2</span><span class="number">.1</span></span><br><span class="line">win-inet-pton                      <span class="number">1.0</span><span class="number">.1</span></span><br><span class="line">win-unicode-console                <span class="number">0.5</span></span><br><span class="line">wincertstore                       <span class="number">0.2</span></span><br><span class="line">wrapt                              <span class="number">1.10</span><span class="number">.11</span></span><br><span class="line">xlrd                               <span class="number">1.1</span><span class="number">.0</span></span><br><span class="line">XlsxWriter                         <span class="number">1.0</span><span class="number">.4</span></span><br><span class="line">xlwings                            <span class="number">0.11</span><span class="number">.8</span></span><br><span class="line">xlwt                               <span class="number">1.3</span><span class="number">.0</span></span><br><span class="line">zict                               <span class="number">0.1</span><span class="number">.3</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>python</category>
        <category>机器视觉</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>机器视觉</tag>
      </tags>
  </entry>
  <entry>
    <title>pytorch 安装过程出现： No module named &#39;tools.nnwrap&#39;——已解决</title>
    <url>/pytorch%20%E5%AE%89%E8%A3%85%E8%BF%87%E7%A8%8B%E5%87%BA%E7%8E%B0%EF%BC%9A%20No%20module%20named%20&#39;tools.nnwrap&#39;%E2%80%94%E2%80%94%E5%B7%B2%E8%A7%A3%E5%86%B3.html</url>
    <content><![CDATA[<blockquote>
<p>环境：win10、py3.6</p>
</blockquote>
<p>可以先参考下面这个博文：<br><a href="https://blog.csdn.net/qq_45504119/article/details/104905471" target="_blank" rel="noopener">安装 torch 详细解决方法</a></p>
<p>这篇文章是我之前写的，后来重装系统，忘了没安装 torch，所以报错，里面文件下载和安装说的很详细。</p>
<a id="more"></a>
<h2 id="事件发生："><a href="#事件发生：" class="headerlink" title="事件发生："></a>事件发生：</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip install torch</span><br><span class="line"></span><br><span class="line">报错：</span><br><span class="line">ModuleNotFoundError: No module named <span class="string">'tools.nnwrap'</span></span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/20200409110528138.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="准备文件："><a href="#准备文件：" class="headerlink" title="准备文件："></a>准备文件：</h2><p>我需要下载两个文件： <code>torch-1.4</code> 和 <code>torchvision-0.4</code></p>
<p><code>torch</code> 我选择 <code>torch-1.4.0+cpu-cp36-cp36m-win_amd64.whl</code></p>
<p><code>torchvision</code> 我选择： <code>torchvision-0.4.2+cpu-cp36-cp36m-win_amd64.whl</code></p>
<p><strong>下载方法参考上面的链接</strong></p>
<h2 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h2><p>直接：<code>pip install -i</code> 安装文件，具体方法参考上文链接就可以。</p>
]]></content>
      <categories>
        <category>python</category>
        <category>error&amp;库</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>error&amp;库</tag>
      </tags>
  </entry>
  <entry>
    <title>人头录音原理及解释</title>
    <url>/%E4%BA%BA%E5%A4%B4%E5%BD%95%E9%9F%B3%E5%8E%9F%E7%90%86%E5%8F%8A%E8%A7%A3%E9%87%8A.html</url>
    <content><![CDATA[<p>简介：</p>
<p>本文简单介绍了环绕声基础知识，还介绍了各种双声道虚拟环绕声（多声道）的技术。最近突然对虚拟环绕声感兴趣，整理了一下相关知识。</p>
<ol>
<li>何为环绕声<br>普通的立体声只能分清左右两个方向的声音，而环绕声还能让人声音的前后左右各个方位，更有空间感仿佛置身于现场。常见的环绕声主要有 5.1 声道与 7.1 声道两种，要重现环绕声也相应的需要 6 个或者 8 个音箱。<a id="more"></a>
电影中最常见的环绕声格式是杜比数字和 DTS，两者是竞争对手关系，电影 DVD 中一般包含有其中一种或者两种音轨都有。此外，这两种格式也有多个不同的版本，这里就不作详细介绍。</li>
</ol>
<p>除了这两种格式之外，部分蓝光光盘也提供 LPCM 格式的音轨，这是一种未经压缩的音频格式，体积最大。压缩后的音频解码成 PCM 格式才能播放，所以这种格式无需解码。理论上 LPCM 格式无压缩音质好，无需解码，是最理想的格式，但由于光盘容量是有限的，音频体积大会挤占视频的空间。可以计算 96kHz 采样率，24 位采样精度，7.1 声道的 LPCM 音轨每秒数据量是</p>
<blockquote>
<p>96k * (24 / 8) * 8 = 2.3MB</p>
</blockquote>
<p>那么一部 90 分钟的电影仅音频就占用了约 12.4 GB 空间，而单面蓝光光盘才 25GB。折中办法是无损压缩，类似于 zip 文件解压后可以 100% 还原成压缩前的文件，杜比和 DTS 都推出了相应的音频格式，分别叫杜比 TrueHD 和 DTS-HD Master Audio。这两种格式除了需要解码之外，和 LPCM 音质没有区别。</p>
<p>说到无损压缩我们常见的音乐中还有 APE 和 FLAC。APE 不支持多声道，FLAC 可以支持，理论上也可以用于电影光盘，但是没有商业化产品支持，所以没有得到应用。FLAC 是免费、开源的音频格式，但目前还没有电影公司采用，没有播放器、解码器以及音响设备支持。网上已有字幕组使用 FLAC 制作多声道的电影文件，目前只能在电脑上软件解码。</p>
<p>回放环绕声的方法：</p>
<p>多声道音箱。需要多个音箱，而且摆位要正确，但效果最好。<br>多单元耳机。多个扬声器单元放在一个耳机上，产品很少。<br>虚拟环绕声。经过算法处理成立体声，用普通耳机回放，下面将详细介绍。<br>2. 虚拟环绕声<br>这里只讨论把多声道音频经过算法处理变成立体声的虚拟环绕声，还有一类是把立体声音频经过算法处理使其具有空间感（很多音效宣传具有此功能）的技术，个人觉得后者无意义只能算是一种音效。</p>
<p><img src="https://img-blog.csdnimg.cn/2020051421502336.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="HRTF 示意图，来源于维基百科"></p>
<p>虚拟环绕声都是基于 HRTF（Head Related Transfer Functions）头部相关传输函数来实现的，只是各家的算法以及测量数据有差异，效果也就各不相同。关于 HRTF 引用数码多上的简单介绍：人耳在接收到音源发出的声音时，人的耳廓、耳道、头盖骨、肩部等对声波的折射、绕射和衍射以及鼓膜接收到的信息会被大脑所接受，大脑通过经验来对声音的方位进行判断。根据这一原理，通过信号处理的数学方法，我们构建了 HRTF（Head Related Transfer Functions）头部相关传输函数，根据多组的滤波器来虚拟实现人耳接收到的“位置信息”。关于 HRTF 的详细原理，数码多上同样有一篇文章 HRTF音频3D定位技术综述。有了这个基础知识，我们就可以分析各种各样的虚拟环绕声相关技术。</p>
<p>2.1 人头录音（Dummy head recording）<br>一般录制环绕声音频需要使用多个麦克风，例如 5.1 声道至少需要 5 个麦克风，而一般音乐是双声道两个麦克风。人头录音也是使用两个麦克风录音，但是模拟了人头听音的效果，相当于把两个麦克风放在人的耳朵里面。因为就算是多声道的音箱，人最终都是靠两个耳朵来听，所以在最理想的情况下人头录音是可以达到真实环绕声效果的。但是现实都是不完美的，首先人头录音要求回放时必须使用耳机（录音时麦克风也是放在耳朵里），保证声音没有串扰；其次每个人身体有差异，大脑对声音的判断也不同，录音不可能按照每个人去完美适配。这就造成了人头录音，包括下面提到的虚拟环绕声技术，效果都不如多声道音箱理想。</p>
<p>2.2 游戏 3D 音效<br>很多游戏也有 3D 音效，计算游戏场景中多个音源（脚步声、远处动物等等）与环境相互作用的效果（反射、阻碍等等）得出游戏中玩家所在位置的全方位声音，这个声音可以认为是环绕声的，然后这个声音经过 HRTF 处理得到立体声输出，当然也可以直接编码成杜比或 DTS 输出到外部多声道音箱。创新的 EAX 以及以前的 Aureal 3D 音效就是属于这一类。</p>
<p>2.3 虚拟环绕声回放<br>很多厂家有类似的技术，例如 Dolby Headphone、DTS Surround Sensation、索尼 Virtualphones Technology 等等，都是把多声道的各种格式音频（杜比/DTS/LPCM等）解码并经过自家的基于 HRTF 的处理技术转换成立体声，然后用户可以使用耳机回放。下面简单介绍一下两种常见场景：</p>
<p>视频播放器集成 HRTF 插件。就是视频播放器解码完多声道音频后，再经过 HRTF 处理成立体声输出。例如 PotPlayer 里面有一个音频输出选项叫“虚拟环绕（HRTF）”，PowerDVD 也带有 Dolby Headphone 插件。<br>外部解码器。杜比/DTS/LPCM 等多声道音轨通过光纤或 HDMI 输出到带有虚拟环绕声处理功能的解码器播放，然后输出到耳机。例如搭载有 Dolby Headphone 的游戏耳机，索尼的 MDR-DS 系列搭载有 Virtualphones Technology 技术的耳机。<br>3. 总结<br>总的来说，靠谱的虚拟环绕声技术都是通过把原始多声道音频经过 HRTF 处理得到的，比直接 downmix 到双声道空间感要强，但感觉还是不太自然，效果最好的还是多声道音箱。如果想体验 Dolby Headphone 的效果，这篇文章里面提供有在线试听 5.1 channel audio through ordinary headphones using MPC-HC。</p>
<p>转载请注明出处：<a href="http://www.cnblogs.com/imouto/archive/2013/03/13/virtual-surround-sound-explained.html" target="_blank" rel="noopener">http://www.cnblogs.com/imouto/archive/2013/03/13/virtual-surround-sound-explained.html</a></p>
<p>本文外部镜像：<a href="http://oteku.blogspot.com/2013/03/virtual-surround-sound-explained.html" target="_blank" rel="noopener">http://oteku.blogspot.com/2013/03/virtual-surround-sound-explained.html</a></p>
<p>文章出处：<a href="https://www.cnblogs.com/imouto/archive/2013/03/13/virtual-surround-sound-explained.html" target="_blank" rel="noopener">https://www.cnblogs.com/imouto/archive/2013/03/13/virtual-surround-sound-explained.html</a></p>
]]></content>
      <categories>
        <category>硬件</category>
      </categories>
      <tags>
        <tag>硬件</tag>
      </tags>
  </entry>
  <entry>
    <title>使用MATLAB调用摄像头并拍照—详细代码</title>
    <url>/%E4%BD%BF%E7%94%A8MATLAB%E8%B0%83%E7%94%A8%E6%91%84%E5%83%8F%E5%A4%B4%E5%B9%B6%E6%8B%8D%E7%85%A7%E2%80%94%E8%AF%A6%E7%BB%86%E4%BB%A3%E7%A0%81.html</url>
    <content><![CDATA[<blockquote>
<p>大家也可以加我的交流群，所有资料我会在群里分享出来哦：977947271<br>2020/5/30：</p>
</blockquote>
<p>今天给大家介绍一下我第一次使用matlab进行摄像头拍照并进行图像处理的过程</p>
<p>下面是个简单的GUI：</p>
<p><img src="https://img-blog.csdnimg.cn/20200219115644543.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<a id="more"></a>
<p>虽然不使用GUI也可以实现这种功能，不过我建议初学者最好使用GUI来控制程序，之后有时间我会发布不使用GUI来实现这种功能的博文。</p>
<p>GUI界面的建立这里就不多说了。</p>
<p>这个GUI是由一个坐标轴和四个按钮组成，按钮分别是“打开摄像头”，“拍照并保存”，“关闭摄像头”，“图像处理”，对应代码中的pushbutton1/2/3/4。</p>
<p>目的是先打开摄像头，再拍摄照片到电脑中，最后调用图片去进行处理。</p>
<p>下面介绍代码：<br>这里是 pushbutton1 的callback</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">varargout&#123;<span class="number">1</span>&#125; = handles.output;</span><br><span class="line"><span class="keyword">global</span> vid</span><br><span class="line">%定义一个全局变量，<span class="keyword">global</span>的用法可以参照我的另一篇博文</span><br><span class="line">vid = videoinput(<span class="string">'winvideo'</span>,<span class="number">1</span>,<span class="string">'YUY2_640x480'</span>);</span><br><span class="line">%winvideo函数可参照另一篇文章中imaqhwinfo的用法</span><br><span class="line">set(vid,<span class="string">'FramesPerTrigger'</span>,<span class="number">1</span>);</span><br><span class="line">%用特定的帧数去显示视频</span><br><span class="line">set(vid,<span class="string">'TriggerRepeat'</span>,Inf);</span><br><span class="line">vidRes = get(vid,<span class="string">'VideoResolution'</span>);</span><br><span class="line">%二维数组，获取视频长宽</span><br><span class="line">nBands = get(ojb,<span class="string">'NumberOfBands'</span>);</span><br><span class="line">%获得图像的颜色层数</span><br><span class="line">axes(handles.axes1);</span><br><span class="line">%让视频显示在指定的axes1坐标中</span><br><span class="line"><span class="keyword">global</span> hImage</span><br><span class="line">%定义全局变量hImage</span><br><span class="line">hImage = image(zeros(vidRes(<span class="number">2</span>),vidRes(<span class="number">1</span>),nBands));</span><br><span class="line">%获得图像的句柄</span><br><span class="line">preview（vid,hImage）;</span><br></pre></td></tr></table></figure>
<p>点开“打开摄像头后”在 axes1 中就可看到拍摄的画面</p>
<p>接下来介绍图片的保存：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">global</span> vid;</span><br><span class="line">frame = getsnapshot(vid);</span><br><span class="line">%摄像头每一帧的画面</span><br><span class="line">frame = ycbcr2rgb(frame);</span><br><span class="line">%将捕获的图像转化为RGB格式的图像</span><br><span class="line">[filename,pathname] = uiputfile(&#123;<span class="string">'*.bmp'</span>,<span class="string">'BMP files'</span>:<span class="string">'*.jpg'</span>,<span class="string">'JPG files'</span>&#125;<span class="string">'格式'</span>);</span><br><span class="line">%照片名称与储存路径</span><br><span class="line"><span class="keyword">if</span> isequal(filename,<span class="number">0</span>) || isequal(pathname,<span class="number">0</span>)</span><br><span class="line">%文件名与路径是否被占用</span><br><span class="line">	<span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">	fpath = fullfile(pathname,filename);</span><br><span class="line">end</span><br><span class="line">imwrite(frame,fpath);</span><br></pre></td></tr></table></figure>
<p>其实这种操作的逻辑对于matlab 的GUI来说，都可以比较简便的解决</p>
<p>关闭摄像头：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">%很简单，在callback中写入一个函数即可</span><br><span class="line">close（findobj(<span class="string">'gca'</span>,<span class="string">'figure_csdn'</span>)）;</span><br><span class="line">%findobj(<span class="string">'PropertyName'</span>,<span class="string">'PropertyValue'</span>,...)</span><br><span class="line">返回figure的句柄</span><br></pre></td></tr></table></figure>
<p>对于想要对图像进行处理的话：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">%就需要在callback中写入读取上图保存的图片的代码</span><br><span class="line">x = imread(<span class="string">'name.jpg'</span>);</span><br><span class="line">imshow(x);</span><br><span class="line">%在进行相应的处理程序</span><br></pre></td></tr></table></figure>
<p>因为 gui 的代码冗长且很多地方无用，就无法将代码全部贴出来，但是对于有些基础的是可以看懂的，所有代码都放在相应的cb中进行。</p>
<p>之后会发出更复杂的定时拍照的程序 gui，希望有技术大佬可以帮助指点错误与不足。</p>
<p>如果有需要这篇文章中源码和 gui 的可以私信我。</p>
<p>欢迎大家指正不足。</p>
]]></content>
      <categories>
        <category>MATLAB</category>
      </categories>
      <tags>
        <tag>MATLAB</tag>
      </tags>
  </entry>
  <entry>
    <title>关于yolo配合硬件的小结——个人笔记</title>
    <url>/%E5%85%B3%E4%BA%8Eyolo%E9%85%8D%E5%90%88%E7%A1%AC%E4%BB%B6%E7%9A%84%E5%B0%8F%E7%BB%93%E2%80%94%E2%80%94%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0.html</url>
    <content><![CDATA[<p>这个纯属个人笔记了——完全是怕忘<br>很久没有写博客，也不太知道想写什么，最近玩的东西比较多：esp8266做wifi杀手、配合esp32搭建了个简易的网络摄像头，改yolo玩的一阵子，入手几个红外模块，现在正在玩 USART HMI。</p>
<p>今天用yolo和红外编码打开空调的时候，因为yolo是不停的循环调用摄像头识别人数的</p>
<a id="more"></a>
<blockquote>
<p>说到这里感觉最近还是有很多可以写的东西的，不过学校快开学了，我过阵子抽时间把最近学到的都写一下吧。</p>
</blockquote>
<p>所以它就第一次识别人数后进入红外编码打开空调，然后第二次识别满足人数要求时，又调用红外编码模块进行打开空调的操作，搞得空调一直响…所以我想当它第一次满足条件A，继续循环再满足条件A时暂时不进入A中，直到满足条件B后，如果出现满足条件A的情况才能进入A。所以我想起来之前写的关于global语句的使用。</p>
<p>贴代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">逻辑关系很简单，但是移植的时候出了点小毛病</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">xunhuan = <span class="number">2</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dakai</span><span class="params">()</span>:</span></span><br><span class="line">        <span class="keyword">global</span> xunhuan</span><br><span class="line">        <span class="keyword">while</span> xunhuan ==<span class="number">1</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            print(xunhuan)</span><br><span class="line">            print(<span class="string">'123456'</span>)</span><br><span class="line">            xunhuan = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">guanbi</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> xunhuan</span><br><span class="line">    <span class="keyword">while</span> xunhuan == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        print(xunhuan)</span><br><span class="line">        print(<span class="string">'abcdef'</span>)</span><br><span class="line">        xunhuan = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> xunhuan ==<span class="number">1</span>:</span><br><span class="line">        xunhuan =<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> xunhuan ==<span class="number">0</span>:</span><br><span class="line">      xunhuan = <span class="number">0</span></span><br><span class="line">    a=input(<span class="string">'输入人数：'</span>)</span><br><span class="line">    a=int(a)</span><br><span class="line">    <span class="keyword">if</span> a&gt;=<span class="number">3</span>:</span><br><span class="line">        dakai()</span><br><span class="line">    time.sleep(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> a&lt;=<span class="number">2</span>:</span><br><span class="line">        guanbi()</span><br><span class="line">    time.sleep(<span class="number">5</span>)</span><br></pre></td></tr></table></figure>
<p>移植到yolo时移植出现global语句的错误，最后把xunhuan的定义加在了yolo.py的class外面才成功<br><img src="https://img-blog.csdnimg.cn/20200503114812548.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>最近玩yolo还是蛮多的，结合硬件玩了好多东西，最近学校课复习完之后再慢慢分享出来吧。</p>
]]></content>
      <categories>
        <category>python</category>
        <category>机器视觉</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>机器视觉</tag>
      </tags>
  </entry>
  <entry>
    <title>如何使用MATLAB调用摄像头—代码详解</title>
    <url>/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8MATLAB%E8%B0%83%E7%94%A8%E6%91%84%E5%83%8F%E5%A4%B4%E2%80%94%E4%BB%A3%E7%A0%81%E8%AF%A6%E8%A7%A3.html</url>
    <content><![CDATA[<blockquote>
<p>大家也可以加我的交流群，所有资料我会在群里分享出来哦：977947271</p>
<p>2020/5/30：</p>
</blockquote>
<p>最近在做关于图像识别的项目。</p>
<p>接触了MATLAB的许多操作，在这里做下关于调用笔记本摄像头的笔记。</p>
<a id="more"></a>
<p>首先需要了解imaqhwinfo函数，在命令行输入imaqhwinfo就可以看到自己笔记本相关适配器和MATLAB版本的信息.但并不能看到摄像头的信息。</p>
<!--more-->
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;imaqhwinfo</span><br><span class="line">ans =  </span><br><span class="line">   包含以下字段的struct:</span><br><span class="line"> </span><br><span class="line">       InstalledAdaptors:  &#123;<span class="string">'winvideo'</span>&#125;</span><br><span class="line">           MATLABVersion:  <span class="string">'9.4 ( R2018a ) '</span></span><br><span class="line">             ToolboxName: <span class="string">'Image Acquisition Toolbox'</span></span><br><span class="line">          ToolboxVersion: <span class="string">'5.4 (R2018a)'</span>`</span><br></pre></td></tr></table></figure>
<p>想要了解摄像头的信息就需要在imaqhwinfo中添加相关函数</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;imaqhwinfo(<span class="string">'winvideo'</span>)</span><br></pre></td></tr></table></figure>
<p>下面是适配器相关信息</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">ans = </span><br><span class="line">  包含以下字段的struct:</span><br><span class="line">  </span><br><span class="line">      AdaptorDllName: <span class="string">'C:\MATLAB\mwwinvideoimaq.dll'</span></span><br><span class="line">   AdaptorDllVersion: <span class="string">'5.4 (R2018)'</span></span><br><span class="line">         AdaptorName: <span class="string">'winvideo'</span></span><br><span class="line">           DeviceIDs: &#123;[<span class="number">1</span>]&#125;</span><br><span class="line">          DeviceInfo: [<span class="number">1</span>×<span class="number">1</span> struct]</span><br></pre></td></tr></table></figure>
<p>imaqhwinfo()返回的是一个结构体，其中 DeviceID 和 DeviceInfo比较重要。DeviceID 储存着电脑上所有可用摄像头的ID，每个ID对应着电脑可用的一个摄像头；DeviceInfo 里面储存着摄像头的信息，就是我们平时所说的视频格式。</p>
<p>下面以我的电脑为例：</p>
<p>使用 DeviceInfo.DeviceID 可以看到摄像头的 ID 为 1</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;I = imaqhwinfo(<span class="string">'winvideo'</span>);</span><br><span class="line">&gt;&gt;I.DeviceInfo.DeviceID</span><br><span class="line"> ans =</span><br><span class="line"> 	<span class="number">1</span></span><br></pre></td></tr></table></figure>
<p>使用 DeviceInfo.SupportedFormats 函数可得到我的摄像头支持的格式是<br>{‘YUY2_160x120’}    {‘YUY2_320x240’}    {‘YUY2_640x480’}这三种。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">&gt;&gt;I = imaqhwinfo(<span class="string">'winvideo'</span>);</span><br><span class="line">&gt;&gt;I.DeviceInfo.SupportedFormats</span><br><span class="line">ans =</span><br><span class="line">     <span class="number">1</span>×<span class="number">3</span>cell 数组</span><br><span class="line">     &#123;<span class="string">'YUY2_160x120'</span>&#125;    &#123;<span class="string">'YUY2_320x240'</span>&#125;    &#123;<span class="string">'YUY2_640x480'</span>&#125;</span><br></pre></td></tr></table></figure>
<p>调用摄像头注意这个函数 videoinput（adaptorname，deviceID，format）</p>
<p>如果我使用ID为 ‘1’ 的摄像头，格式选择为{‘YUY2_640x480’}，</p>
<p>那么代码为</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">videoinput(<span class="string">'winvideo'</span>,<span class="number">1</span>,<span class="string">'YUY2_640x480'</span>)</span><br></pre></td></tr></table></figure>
<p>下面上简单的代码：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">vid = videoinput(<span class="string">'winvideo'</span>,<span class="number">1</span>,<span class="string">'YUY2_640x480'</span>);   %选择摄像头和格式</span><br><span class="line">preview (vid);    			%显示vid函数中摄像头拍摄的画面</span><br><span class="line">frame = getsnapshot(vid);   			%获取每一帧的图片</span><br><span class="line">figure;imshow(frame);   		%在figure中显示出摄像头拍摄的画面</span><br><span class="line">	%如果想保存图片可以使用下面的函数</span><br><span class="line">	%但这种函数保存打开摄像头那一瞬间的图片</span><br><span class="line">	%有时间我将介绍如何使用gui去实现随时拍照的代码，</span><br><span class="line">imwrite(frame,<span class="string">'A.png'</span>);</span><br></pre></td></tr></table></figure>
<p>下面是微微复杂点的代码，一般在实战中会用到，单纯是想玩的话，上面的代码已经够了。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">obj = videoinput(<span class="string">'winvideo'</span>,<span class="number">1</span>,<span class="string">'YUY2_640×480'</span>)；</span><br><span class="line">%winvideo<span class="string">'由函数imaqhwinfo查出</span></span><br><span class="line"><span class="string">set(vid,'</span>FramesPerTrigge<span class="string">r',1);</span></span><br><span class="line"><span class="string">%FramesPerTrigger用特定的帧数去捕获选定的视频 </span></span><br><span class="line"><span class="string">set(vid, '</span>TriggerRepeat<span class="string">', Inf);</span></span><br><span class="line"><span class="string">%不断地触发TriggerRepeat，以上代码一般不需要改动</span></span><br><span class="line"><span class="string">set(vid,'</span>ReturnedColorSpace<span class="string">','</span>rg<span class="string">b');</span></span><br><span class="line"><span class="string">%设置返回的视频颜色，‘rgb’是正常颜色，需要返回其他色彩可以在做改动</span></span><br><span class="line"><span class="string">vidRes=get(obj,'</span>VideoResolution<span class="string">');         </span></span><br><span class="line"><span class="string">%获得视频的长与宽，是二维数组</span></span><br><span class="line"><span class="string">nBands=get(obj,'</span>NumberOfBands<span class="string">');           </span></span><br><span class="line"><span class="string">%获得图像的颜色层数</span></span><br><span class="line"><span class="string">hImage=image(zeros(vidRes(2),vidRes(1),nBands));</span></span><br><span class="line"><span class="string">%获得图像的句柄</span></span><br><span class="line"><span class="string">preview(obj,hImage);</span></span><br><span class="line"><span class="string">%以上是我对这些代码的理解，具体情况在这里就没法细说了</span></span><br></pre></td></tr></table></figure>
<p>这里就把简单的介绍完了。</p>
<p>建议有需要的朋友使用GUI去实现对视频、图片的播放、保存、并做相应处理的操作。</p>
<p>有时间我会把我的项目再深入介绍一下如何对这些进行操作，如果有感兴趣的朋友也可以联系我。</p>
]]></content>
      <categories>
        <category>MATLAB</category>
      </categories>
      <tags>
        <tag>MATLAB</tag>
      </tags>
  </entry>
  <entry>
    <title>如何创建可直接修改后缀来改变格式的文档</title>
    <url>/%E5%A6%82%E4%BD%95%E5%88%9B%E5%BB%BA%E5%8F%AF%E7%9B%B4%E6%8E%A5%E4%BF%AE%E6%94%B9%E5%90%8E%E7%BC%80%E6%9D%A5%E6%94%B9%E5%8F%98%E6%A0%BC%E5%BC%8F%E7%9A%84%E6%96%87%E6%A1%A3.html</url>
    <content><![CDATA[<p>程序员应该都知道，我们新建一个文本文档后</p>
<p>可以直接改变文本的后缀来创建相应的文件</p>
<p>最熟悉不过的就是 python 了，直接新建一个文本，‘txt’ 后缀改为 ‘py’</p>
<p>再用IDLE打开再省事不过了</p>
<p>但我今天重装系统后发现新建的文本不显示后缀，我也没法改：</p>
<a id="more"></a>
<p><img src="https://img-blog.csdnimg.cn/20200224174108439.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>**在这里记录一下如何操作：</strong><br>1、打开‘电脑’—&gt;’查看’—&gt;‘选项’**<br><img src="https://img-blog.csdnimg.cn/20200224174842735.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt=""><br><strong>2、‘查看’—&gt;取消选择’隐藏已知文件类型的拓展名’</strong><br><img src="https://img-blog.csdnimg.cn/20200224175153420.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>然后就可以正常操作了<br><img src="https://img-blog.csdnimg.cn/20200224175553276.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2020022417560399.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>请无视其他无关文件和字幕….<br>请无视其他无关文件和字幕…<br>请无视其他无关文件和字幕…<br>(重要的无视说三遍！！！)</p>
]]></content>
      <categories>
        <category>win10</category>
      </categories>
      <tags>
        <tag>win10</tag>
      </tags>
  </entry>
  <entry>
    <title>安装Mathtype后无法使用——已解决</title>
    <url>/%E5%AE%89%E8%A3%85Mathtype%E5%90%8E%E6%97%A0%E6%B3%95%E4%BD%BF%E7%94%A8%E2%80%94%E2%80%94%E5%B7%B2%E8%A7%A3%E5%86%B3.html</url>
    <content><![CDATA[<h2 id="事件背景："><a href="#事件背景：" class="headerlink" title="事件背景："></a>事件背景：</h2><blockquote>
<p>word 中安装 mathtype 后无法正常使用，总是提示文件未找到等报错？？？</p>
</blockquote>
<p>比如我遇到的一下情况：</p>
<p><img src="https://img-blog.csdnimg.cn/20200406194329852.png" alt="在这里插入图片描述"></p>
<a id="more"></a>
<p><img src="https://img-blog.csdnimg.cn/20200406194341587.png" alt="在这里插入图片描述"></p>
<h2 id="解决方法："><a href="#解决方法：" class="headerlink" title="解决方法："></a>解决方法：</h2><p>很简单，添加一下受信任的路径，移动一下运行 mathtype 的文件就可以了</p>
<p><strong>1、添加受信任路径</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">点击 “文件”——&gt;“选项”</span><br></pre></td></tr></table></figure>


<p><img src="https://img-blog.csdnimg.cn/2020040619485030.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/2020040619503350.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">“信任中心” 中选择 “信任中心设置”</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/20200406195203668.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">将</span><br><span class="line">office:的<span class="string">"STARTUP"</span>文件路径</span><br><span class="line">和</span><br><span class="line">MathType:的<span class="string">"MathPage"</span>文件路径</span><br><span class="line">添加进去</span><br><span class="line"></span><br><span class="line">这里我的文件路径分别是：(<span class="string">"每个人的路径可能都不一样，多找找就行了"</span>)</span><br><span class="line">C:\Program Files (x86)\Microsoft Office\root\Office16\STARTUP</span><br><span class="line">C:\Program Files (x86)\MathType\MathPage</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/2020040619552335.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>2、添加运行所需文件</strong></p>
<p><strong>（1）</strong><code>MathType Commands 6 For Word 2010.dotm</code>  文件</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">我的文件路径是：</span><br><span class="line">C:\Program Files (x86)\MathType\Office Support\<span class="number">64</span></span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/20200406200937473.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">将它移动到：</span><br><span class="line">C:\Program Files (x86)\Microsoft Office\root\Office16\STARTUP 文件夹里</span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/20200406201345423.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>（2）</strong><code>MathPage.wll</code> 文件</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">我的文件路径是：</span><br><span class="line">C:\Program Files (x86)\MathType\MathPage\<span class="number">64</span></span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/20200406201955430.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">将它移动到：</span><br><span class="line">C:\Program Files (x86)\Microsoft Office\root\Office16 文件夹里</span><br><span class="line"><span class="string">"注意哦：MathPage.wll 和上文中 STARTUP文件夹 是 并放在一起的 "</span></span><br></pre></td></tr></table></figure>

<p><img src="https://img-blog.csdnimg.cn/20200406202543454.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>然后重启 word</p>
<p>MathType 就可以正常使用了</p>
<p><img src="https://img-blog.csdnimg.cn/20200406203406349.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>win10</category>
      </categories>
      <tags>
        <tag>win10</tag>
      </tags>
  </entry>
  <entry>
    <title>怎么下载网页在线视频</title>
    <url>/%E6%80%8E%E4%B9%88%E4%B8%8B%E8%BD%BD%E7%BD%91%E9%A1%B5%E5%9C%A8%E7%BA%BF%E8%A7%86%E9%A2%91.html</url>
    <content><![CDATA[<p>在线看视频多少会有些卡顿，所以就可以将视频先下载下来之后看</p>
<p>但对我而言，大部分视频都是在线甚至很小众的</p>
<p>单独拿B站等大型网站来说，我们可以使用“硕鼠”等</p>
<p>复制需要下载的视频的链接，复制在这里就可以准备下载<br><img src="https://img-blog.csdnimg.cn/20200223233143492.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>但今天说的没有那么简单</p>
<p>硕鼠这种软件毕竟可下载的网站数量有限</p>
<p>像我今天遇到了无法用硕鼠直接下载的情况</p>
<p>下面给大家详细介绍三种方法：</p>
<p><strong>1、**</strong>拿谷歌浏览器来说，如果想下载视频，先要打开视频，打开开发者工具**<br><img src="https://img-blog.csdnimg.cn/20200223233748416.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>选择”Network“—&gt;”all“<br><img src="https://img-blog.csdnimg.cn/20200223233938512.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">最好按F5刷新一下界面，不然可以会导致加载的视频不完整：</p>
<p>在界面中找到 Time 框中的时间随着真实秒数在变化的文件，一般为所有现实的文件中时间最长，size 最大的文件，则这个文件就是我们想要的文件<br><img src="https://img-blog.csdnimg.cn/20200223234755761.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>右键该文件——选择”Open in new tab“,再右键另存为就可以了<br><img src="https://img-blog.csdnimg.cn/20200224100123975.jpeg?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>这是第一种比较简单的方法。</p>
<p><strong>2、**</strong>打开视频，右键点击画面空白处 选择”查看网页源代码“，再Ctrl+F 打开查找窗口。**</p>
<p>因为我一直在学习韩语，所以这里以某韩语教学视频为例<br><img src="https://img-blog.csdnimg.cn/20200223235957978.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>输入”url”,复制这些url后面的连接去迅雷直接搜索网站下载就ok了。<br><img src="https://img-blog.csdnimg.cn/20200224000136299.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>3、**</strong>这个方法就比较小众了，因为很多视频不会出现这种情况**</p>
<p>有的视频的开发者工具打开后发现全部都是ts后缀的文件</p>
<p>列表显示的都是分割过的文件，保存下来也只是1段1段的<br><img src="https://img-blog.csdnimg.cn/20200224000803175.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>所以这时候就需要找到这些 ts 后缀的文件的缓存地址了</p>
<p>打开新的标签页输入“chrome://version/”</p>
<p>就可以知道这些 mp2t 文件被保存的位置<br><img src="https://img-blog.csdnimg.cn/20200224001554297.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>现在我为了接下来述说简单点，我把刚刚</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">C:\Users\<span class="number">27511</span>\AppData\Local\Google\Chrome\Application\chrome.exe</span><br></pre></td></tr></table></figure>
<p>这个路径下的 mp2t 文件全部移到新的文件夹，名字就叫 CSDN<br>我再建立一个新的文件夹，名字叫 CSDN2，两个文件夹都放在名为1的文件夹下面</p>
<p>那么现在按win+R 输入 cmd 打开窗口输入：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">copy /b  D:\<span class="number">1</span>\CSDN D:\<span class="number">1</span>\CSDN2\<span class="keyword">new</span>.mp4</span><br><span class="line">%copy /b  C:\f\  D:\f\<span class="keyword">new</span>.ts</span><br><span class="line">%copy /b不能动</span><br><span class="line">%C：\f\ 是缓存的mp2y文件的位置</span><br><span class="line">%D：\f\是将mp2y合并后储存的位置</span><br><span class="line">%<span class="keyword">new</span>是文件名，ts是文件后缀</span><br></pre></td></tr></table></figure>
<p>给大家看一下CSDN文件夹<br><img src="https://img-blog.csdnimg.cn/20200224004637895.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>现在在cmd中输入：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">copy /b  D:\<span class="number">1</span>\CSDN D:\<span class="number">1</span>\CSDN2\<span class="keyword">new</span>.mp4</span><br><span class="line">%我这里保存为MP4格式，可以根据需要随意更改后缀</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/202002240048274.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200224004856636.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>而我的CSDN2文件夹中就有了MP4格式的视频文件了</p>
<p><img src="https://img-blog.csdnimg.cn/20200224005006426.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这样就可以正常观看了。</p>
<p>这几种方法均是我最近下载视频文件的终于到的可以解决问题的方法，基本所有的视频均可以解决。</p>
<p>如有其他问题，可以联系我</p>
]]></content>
      <categories>
        <category>win10</category>
      </categories>
      <tags>
        <tag>win10</tag>
      </tags>
  </entry>
  <entry>
    <title>教女友学会keras-yolov3目标检测详解——适合新手</title>
    <url>/%E6%95%99%E5%A5%B3%E5%8F%8B%E5%AD%A6%E4%BC%9Akeras-yolov3%E7%9B%AE%E6%A0%87%E6%A3%80%E6%B5%8B%E8%AF%A6%E8%A7%A3%E2%80%94%E2%80%94%E9%80%82%E5%90%88%E6%96%B0%E6%89%8B.html</url>
    <content><![CDATA[<blockquote>
<p>现在网上能找到的博客我现在看起来很明白，虽然讲的很详细，但是对于几天前的我真的看不明白，因为新手会遇到各种各样毫无征兆的问题，所以我决定写一篇面向新手的如何去使用 yolo 和如何去做自己的数据集来训练属于自己的模型。因为我也是新手，所以不说原理，只谈操作方法。</p>
</blockquote>
<blockquote>
<p>2020/5/30：<br>近日每天都有十几个很明显的小号加群，而且有的大号进群竟然打广告和卖不良物品，经我和群友讨论后，加群需要1元钱，但是进群后我会将钱退还给大家，只是为了过滤一些不好的人。</p>
</blockquote>
<blockquote>
<p>因为东西很杂，我会把小东西分出去写，并且在本文中附上链接。</p>
</blockquote>
<a id="more"></a>


<h2 id="一、准备工作"><a href="#一、准备工作" class="headerlink" title="一、准备工作"></a>一、准备工作</h2><h2 id="1、事件前言："><a href="#1、事件前言：" class="headerlink" title="1、事件前言："></a>1、事件前言：</h2><p>简单介绍下情况，本人本科二年级，机器学习小白，操作系统:windows10</p>
<p>前阵子用 matlab 做图像识别项目时发现了 yolov3 算法，觉得很有意思，但是无奈当时还没有基于matlab 的版本（听说现在有了），所以就用 python 运行，我的电脑里有 python_3.7、anaconda_3.6、pycharm。</p>
<p>有心人应该可以发现我大概几天前的博客都是在凌晨一点发的，当时几乎每天都弄到凌晨三点多去配置环境（新手运行报错的原因几乎都是版本的兼容性问题）。</p>
<p>不过经过三天左右的时间，我解决了无穷多的报错之后，终于把 yolo 在 anaconda 和 pycharm 中成功运行，而且在昨晚 10：30分 成功训练出了自己标注的数据集的模型。</p>
<p>所以在接下来的几天，我会站在新手的层面上解释我使用 yolo 的过程。</p>
<h2 id="2、需要的文件："><a href="#2、需要的文件：" class="headerlink" title="2、需要的文件："></a>2、需要的文件：</h2><p><strong>1、yolov3源代码：</strong><a href="https://github.com/qqwweee/keras-yolo3" target="_blank" rel="noopener">github_keras-yolo3</a></p>
<p><strong>2、权重文件：</strong><a href="https://pjreddie.com/media/files/yolov3.weights" target="_blank" rel="noopener">官网_yolov3.weights</a> （点击直接下载）或者 我的百度网盘文件 链接：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">https:<span class="comment">//pan.baidu.com/s/1YD5dtSrEkcBO0PRHO7eLlw </span></span><br><span class="line">提取码：<span class="number">1u</span>ub</span><br></pre></td></tr></table></figure>

<p><strong>3、python 或 anaconda 或 pycharm</strong><br>注意：版本需要在3.7以下，3.7版本不支持 tensflow 的库</p>
<h2 id="3、python的环境配置："><a href="#3、python的环境配置：" class="headerlink" title="3、python的环境配置："></a>3、python的环境配置：</h2><blockquote>
<p>很多的库之间都会存在兼容性问题，如果你运行中出现的报错不常见，或者一个错误接着一个错误，那么八成是配置的库存在兼容性问题，把库的版本换了就行</p>
</blockquote>
<p>下面介绍一下重要的需要配置的库的版本：<br>|库名称|版本  |<br>|–|–|<br>|tensorflow-gpu|2.1.0|<br>|keras  | 2.2.4 |<br>| tensorflow (可有可无) |1.12.0  |<br>|Pillow |5.1.0  |<br>|matplotlib|2.2.2|<br>|ffmpeg|1.4|<br>|opencv|opencv-contrib-python|</p>
<!--more-->
<p>建议使用镜像源下载，下载的方法可以参照我的这篇博文：</p>
<p><a href="https://blog.csdn.net/qq_45504119/article/details/104905471" target="_blank" rel="noopener">anaconda 配置 yolov3 环境</a>（该文章中的版本也可以，但是最好换成我上面表格中写的）</p>
<p><strong>大家也可以看下我的 python 的各个库的配置：</strong><a href="https://blog.csdn.net/qq_45504119/article/details/105039951" target="_blank" rel="noopener">python绝对兼容的库配置——机器学习</a><br>（建议大家保留一份，万一哪天不小心改了一个库的版本，很可能就会导致一系列的问题，这里的版本不存在兼容性问题）<br>.<br>.</p>
<h2 id="二、正式开始yolo之旅"><a href="#二、正式开始yolo之旅" class="headerlink" title="二、正式开始yolo之旅"></a>二、正式开始yolo之旅</h2><h2 id="1、用官方权重识别图像"><a href="#1、用官方权重识别图像" class="headerlink" title="1、用官方权重识别图像"></a>1、用官方权重识别图像</h2><p>接下来先教大家去用官方的权重文件 <code>yolov3.weights</code> 去识别图像</p>
<p>先用 pycharm 或 spyder 打开 keras-yolo3 文件夹，用 pycharm 或 spyder 是为了看文件夹更方便，直接在 anaconda 里运行也是可以的</p>
<p>这里用 pycharm 先演示一下：</p>
<p><img src="https://img-blog.csdnimg.cn/20200322220715900.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>打开文件后是这样的。</p>
<p><strong>1、我们将下载的 yolov3.weights 文件放在 keras-yolo3-master 文件夹下：</strong></p>
<p><img src="https://img-blog.csdnimg.cn/20200322221122948.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>2、把 yolov3.weights 文件转换成 keras 适用的 h5 文件</strong></p>
<p>首先点击左下方的 Terminal (和IDLE一个功能，就是命令行) </p>
<p>输入 <code>python convert.py yolov3.cfg yolov3.weights model_data/yolo.h5</code></p>
<p><img src="https://img-blog.csdnimg.cn/20200322221429827.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20200322221927751.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>等待一会。。。直到命令行显示 <code>Saved Keras model to model_data/yolo.h5</code></p>
<p>就可以看到文件夹的 model_data 中多了个 yolo.h5 文件</p>
<p><img src="https://img-blog.csdnimg.cn/20200322222041524.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>3、在文件夹下添加一个启动 yolo 函数的代码</strong></p>
<p>在文件夹下新建一个py文件，我取名为 <code>yolostart.py</code> ，代码如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">from yolo3.model import yolo_body</span><br><span class="line">from keras.layers import Input</span><br><span class="line">from yolo import YOLO</span><br><span class="line">from PIL import Image</span><br><span class="line"></span><br><span class="line">yolo = YOLO()</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> True:</span><br><span class="line">    img = input(<span class="string">'Input imagename:'</span>)</span><br><span class="line">    try:</span><br><span class="line">        image = Image.open(img)</span><br><span class="line">    except:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">'Open Error!'</span>)</span><br><span class="line">        <span class="built_in">continue</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        rel_image = yolo.detect_image(image)</span><br><span class="line">        rel_image.show()</span><br><span class="line">yolo.close_session()</span><br></pre></td></tr></table></figure>
<p><img src="https://img-blog.csdnimg.cn/20200322223024230.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>4、在文件夹下新建名为 img 的文件夹，里面放想要进行识别的图片</strong></p>
<p><img src="https://img-blog.csdnimg.cn/20200322223335842.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>5、运行 yolostart.py</strong></p>
<p>运行 <strong>yolostart.py</strong> 文件</p>
<p>提示：<code>Input imagename:</code></p>
<p><img src="https://img-blog.csdnimg.cn/20200322224256302.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>现在输入想要识别的图片的文件路径，这里我输入 <strong>img/q.jpg</strong>(识别 img 文件夹下名为 q 的 jpg 格式的图片)</p>
<p><img src="https://img-blog.csdnimg.cn/20200322224711804.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20200322225005871.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>成功识别出图上人物</p>
<p>现在运行人数较多的图片试一下：</p>
<p><img src="https://img-blog.csdnimg.cn/20200322225150925.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="2、训练自己的数据集模型"><a href="#2、训练自己的数据集模型" class="headerlink" title="2、训练自己的数据集模型"></a>2、训练自己的数据集模型</h2><blockquote>
<p>time：3/22<br>这篇先发，我学校的作业还没写，<br>我先把作业写了，再回来补下面的东西<br>。。。<br>见谅</p>
</blockquote>
<p><strong>Time：2020/3/23/22:19<br>我回来啦：</strong></p>
<p>介于训练自己的数据集模型比这篇文章的两倍还要长，我就将它化为一篇文章来写了，很详细，均是我刚刚亲自一步步操作的，有任何问题均可以提出</p>
<p><strong>文章链接：</strong><a href="https://blog.csdn.net/qq_45504119/article/details/105052478" target="_blank" rel="noopener">keras-yolov3目标检测训练自己的模型详解</a></p>
<h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><p>文章中有任何问题都可以直接评论，我一般都在</p>
<p>趁着我刚刚解决好多的报错，脑子里还有记忆的时候赶快问，我怕我时间久了没法回答你们一些很生僻的报错了。。。</p>
]]></content>
      <categories>
        <category>python</category>
        <category>机器视觉</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>机器视觉</tag>
      </tags>
  </entry>
  <entry>
    <title>教女友学会python+yolov3调用笔记本摄像头——实时进行识别</title>
    <url>/%E6%95%99%E5%A5%B3%E5%8F%8B%E5%AD%A6%E4%BC%9Apython+yolov3%E8%B0%83%E7%94%A8%E7%AC%94%E8%AE%B0%E6%9C%AC%E6%91%84%E5%83%8F%E5%A4%B4%E2%80%94%E2%80%94%E5%AE%9E%E6%97%B6%E8%BF%9B%E8%A1%8C%E8%AF%86%E5%88%AB.html</url>
    <content><![CDATA[<blockquote>
<p>我终于回来啦，快一个月没有正式写博客了<br>最近忙着把老师交给我的项目完成，又从老师经费里白嫖了好多好玩的硬件，网课都没咋听，今天介绍完这个小点，马上就要准备看模电了<br>其实我做项目时完全从0开始，所接触的东西也是零零散散的，我想表达的东西用面向新手的方式写出来，之后开始介绍软硬件结合的东西。<br>也可以加我的交流群，所有资料我会在群里分享出来哦：977947271<br>2020/5/30：<br>近日每天都有十几个很明显的小号加群，而且有的大号进群竟然打广告和卖不良物品，经我和群友讨论后，加群需要1元钱，但是进群后我会将钱退还给大家，只是为了过滤一些不好的人。</p>
</blockquote>
<blockquote>
<p>环境：win10、py3.6、yolov3</p>
</blockquote>
<a id="more"></a>
<h2 id="1、准备工作"><a href="#1、准备工作" class="headerlink" title="1、准备工作"></a>1、准备工作</h2><p><strong>1、yolo3源代码：</strong><a href="https://github.com/qqwweee/keras-yolo3" target="_blank" rel="noopener">github_keras-yolo3</a></p>
<p><strong>2、权重文件：</strong>：<a href="https://pjreddie.com/media/files/yolov3.weights" target="_blank" rel="noopener">官网_yolov3_weights</a>（点击直接下载）或者 我的百度网盘文件 链接：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">https://pan.baidu.com/s/<span class="number">1</span>YD5dtSrEkcBO0PRHO7eLlw </span><br><span class="line">提取码：<span class="number">1</span>uub</span><br></pre></td></tr></table></figure>


<p>我也有自己训练的只识别 person 的权重文件，有需要的话可以评论邮箱地址<br>如果你是新手中的新手，可以先参考下我的这两篇文章：<br>1、<a href="https://blog.csdn.net/qq_45504119/article/details/105033492" target="_blank" rel="noopener">keras-yolov3目标检测详解——适合新手</a>（教你运行成功yolo）<br>2、<a href="https://blog.csdn.net/qq_45504119/article/details/105052478" target="_blank" rel="noopener">win10+yolov3+python训练自己的模型</a>（教你训练自己的模型去识别）</p>
<h2 id="2、添加yolo模型"><a href="#2、添加yolo模型" class="headerlink" title="2、添加yolo模型"></a>2、添加yolo模型</h2><p>先将 yolov3.weights 权重放在下载的yolo文件中</p>
<p><img src="https://img-blog.csdnimg.cn/20200504155521890.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>我这里用 pycharm 打开 yolo 源代码，<br>在命令行输入：<code>python convert.py yolov3.cfg yolov3.weights model_data/yolo.h5</code></p>
<p><img src="https://img-blog.csdnimg.cn/20200504155725333.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>运行命令直到出现：<code>Saved Keras model to model_data/yolo.h5</code> </p>
<p><img src="https://img-blog.csdnimg.cn/20200504160013801.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>且 model_data 中多了个 yolo.h5 文件就代表准备工作完成了</p>
<p><img src="https://img-blog.csdnimg.cn/20200504160219163.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="3、改代码并运行"><a href="#3、改代码并运行" class="headerlink" title="3、改代码并运行"></a>3、改代码并运行</h2><p>打开 yolo.py 大概在170多行的位置找到：<code>vid = cv2.VideoCapture(video_path)</code></p>
<p><img src="https://img-blog.csdnimg.cn/20200504160359383.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>将其改为：<code>vid = cv2.VideoCapture(0)</code></p>
<p>这里我们使用opencv库中的VideoCapture()函数创建摄像头对象，参数0是表示调用第一个摄像头，一般就是笔记本的内置摄像头。</p>
<p><img src="https://img-blog.csdnimg.cn/20200504160624971.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>然后打开 yolo_video.py 并运行<br>下面是我刚刚运行并演示出的效果，手机拿的有些近，所以没有识别出手机</p>
<p><img src="https://img-blog.csdnimg.cn/20200504161144308.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>不过细心的朋友看下代码就知道，其实这种方法实际上是读取摄像头某一帧的画面，对此画面进行图片式的识别。但是我们很多项目其实并不要求保存视频，或者处理的很流畅，我们需求就是单纯识别的话这种方法完全满足项目的需要了。<br>.</p>
<h2 id="4、用自己训练的模型来识别"><a href="#4、用自己训练的模型来识别" class="headerlink" title="4、用自己训练的模型来识别"></a>4、用自己训练的模型来识别</h2><p>上图有些瑕疵，只识别出了 person，但我拿开手机的话，我背后的很多物品，官方的权重都能识别，包括手机壳上的小狗。</p>
<p>但是很多情况下我们只想让他识别出一种或几种物品怎么办呢？</p>
<p>比如我之前训练出的只能识别出人的的权重，下面就介绍一下方法。</p>
<p>可以看我这篇文章：<a href="https://blog.csdn.net/qq_45504119/article/details/105052478" target="_blank" rel="noopener">win10+yolov3+python训练自己的模型——适合新手</a> 去自己训练出模型。</p>
<p>也可以直接用我训练的模型：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">链接：https://pan.baidu.com/s/<span class="number">1</span>NSR2XC-SmId9O1E0QvNGcg </span><br><span class="line">提取码：cs99</span><br><span class="line">&gt;&gt;&gt;网盘下载的慢的话可以评论下邮箱，QQ传文件还是蛮快的&lt;&lt;&lt;</span><br></pre></td></tr></table></figure>
<p>将我的模型下载好后放在 model_data 文件夹中，改名为：yolo.h5 </p>
<p><img src="https://img-blog.csdnimg.cn/20200504162339142.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>像上文一样运行 yolo_video.py 文件就可以了。</p>
<p><img src="https://img-blog.csdnimg.cn/20200504163355373.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>我也只是个学生，做项目的时候刚好看到 yolo 了，就玩了一阵子，这些只是很简单的东西，之后我会慢慢的把我做的比较深入的东西写出来(说实话…一般没人看)，所以呢，今天2020/5/4，我准备创建一个开源项目的交流群。<br>我本身很菜，但是玩过一些开源的项目，本身电气专业，也喜欢自己用单片机做东西，现在自己发过论文、国际发明专利、国内发明专利。马上准备考研了，也希望能遇到一些大佬，给些指点，也可以大家一起讨论问题，解决问题。</p>
<p>群号：977947271<br><img src="https://img-blog.csdnimg.cn/20200504165237970.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>python</category>
        <category>机器视觉</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>机器视觉</tag>
      </tags>
  </entry>
  <entry>
    <title>教女朋友一周学会 python 爬虫_1</title>
    <url>/%E6%95%99%E5%A5%B3%E6%9C%8B%E5%8F%8B%E4%B8%80%E5%91%A8%E5%AD%A6%E4%BC%9A%20python%20%E7%88%AC%E8%99%AB_1.html</url>
    <content><![CDATA[<p>今天开始我将简单介绍一下网络爬虫，并开始带大家学习如何写爬虫</p>
<p><strong>一、爬虫介绍</strong></p>
<p> <strong>1、什么是爬虫？</strong></p>
<p>你可以把互联网想想成一个巨大的蜘蛛网，而爬虫就是一个小蜘蛛在网的各个节点中穿梭。   就像探测机器一样，基本操作就是模拟人去浏览各个网站，浏览数据，查看信息。</p>
<a id="more"></a>
<p> <strong>2、爬虫可以做什么？</strong></p>
<p><strong>（1）抢火车票：</strong></p>
<p>这应该是爬虫行业中使用量最大，很多抢票软件每秒对12306扫数千数万次。</p>
<p><strong>（2）刷浏览量：</strong></p>
<p>爬虫重灾区应该是微博无疑了，爬虫代码指向微博的某一个接口，可以获取用户的微博列表，微博动态，等等信息。</p>
<p>有的人用爬虫指挥机器人，来打开某人的微博进行点赞、评论或留言。也就是微博上所谓的僵尸粉（去年某坤微博转发过亿次还记得吗）。</p>
<p>还有很多更“好玩”的用处，这里就不废话了</p>
<p><strong>二、正式开始学习</strong></p>
<p>想写爬虫，首先要了解 URL：</p>
<p>统一资源定位符（Universal Resource Locator），简单说就是表示资源的地址（我们说某个网站的网址就是 URL）。</p>
<p><strong>1、urllib.request.urlopen（）函数</strong></p>
<blockquote>
<p><strong>urllib 是一个软件包，收集了几个用于处理URL的模块 ：</strong><br>.<br><strong>urllib.request ： 用于打开和阅读URL</strong><br>.<br><strong>urllib.error ： 包含由引发的异常 urllib.request</strong><br>.<br><strong>urllib.parse ： 用于解析URL</strong><br>.<br><strong>urllib.robotparser ： 用于解析robots.txt文件</strong></p>
</blockquote>
<p><strong>urllib.request—用于打开URL的可扩展库</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">urllib.request.urlopen（url，data = <span class="literal">None</span>，[ timeout，] *，cafile = <span class="literal">None</span>，capath = <span class="literal">None</span>，cadefault = <span class="literal">False</span>，context = <span class="literal">None</span> ）</span><br><span class="line"><span class="comment">##打开url，字符串或 Request 对象</span></span><br></pre></td></tr></table></figure>
<p>data：访问URL时传输的数据</p>
<p>timeout：参数以秒为单位，检测是否超时</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Time：2020/03/11 1:07</span></span><br><span class="line"><span class="comment"># environment:IDLE</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>response=urllib.request.urlopen(<span class="string">"http://www.baidu.com"</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>type(response)</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">http</span>.<span class="title">client</span>.<span class="title">HTTPResponse</span>'&gt;</span></span><br><span class="line"><span class="class"># 返回 <span class="title">HTTPResponse</span> 类型数据</span></span><br></pre></td></tr></table></figure>
<hr>
<p><strong>2、实例检测某网站的编码</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> chardet</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>url = input(<span class="string">'input address：'</span>)</span><br><span class="line"><span class="comment"># 输入网址</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>response = urllib.request.urlopen(url)</span><br><span class="line"><span class="comment"># urllib.request.urlopen信息传给response</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>infor = response.read()</span><br><span class="line"><span class="comment"># 返回获取到的页面内容</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>encode = chardet.detect(infor)[<span class="string">'encoding'</span>]</span><br><span class="line">&gt;&gt;&gt;print(encode)</span><br><span class="line">input address：http://www.baidu.com</span><br><span class="line">utf<span class="number">-8</span></span><br></pre></td></tr></table></figure>
<hr>
<p><strong>3、检测网站状态</strong></p>
<p>“200”则说明网站正常</p>
<p>“404”就说明不正常</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> urllib.request</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>response=urllib.request.urlopen(<span class="string">"http://www.baidu.com"</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>code=response.getcode()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>print(code)</span><br><span class="line"><span class="number">200</span></span><br></pre></td></tr></table></figure>

<hr>
<hr>
<hr>
<p>今天晚上一直看 LOL 直播，现在有点撑不住了，都凌晨一点半了</p>
<p>早起还要上网课</p>
<p>上完网课再更</p>
]]></content>
      <categories>
        <category>python</category>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>教女朋友学会用ESP8266实现wifi杀手——有固件</title>
    <url>/%E6%95%99%E5%A5%B3%E6%9C%8B%E5%8F%8B%E5%AD%A6%E4%BC%9A%E7%94%A8ESP8266%E5%AE%9E%E7%8E%B0wifi%E6%9D%80%E6%89%8B%E2%80%94%E2%80%94%E6%9C%89%E5%9B%BA%E4%BB%B6.html</url>
    <content><![CDATA[<blockquote>
<p>固件来自大神：FengMo<br>固件下载地址：<a href="https://download.csdn.net/download/qq_45504119/12407789" target="_blank" rel="noopener">https://download.csdn.net/download/qq_45504119/12407789</a><br>也可以加我的交流群，我会在群里分享出来哦：977947271<br>2020/5/30：<br>近日每天都有十几个很明显的小号加群，而且有的大号进群竟然打广告和卖不良物品，经我和群友讨论后，加群需要正确填写我的CSDN账号昵称，只是为了过滤一些不好的人。</p>
</blockquote>
<a id="more"></a>
<h1 id="事件前言"><a href="#事件前言" class="headerlink" title="事件前言"></a>事件前言</h1><p>前阵子我自己翻 tb 的时候发现一个esp8266模块还挺好玩的，于是20多块入手了一个esp8266模块<br><img src="https://img-blog.csdnimg.cn/20200511084858957.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这里给大家提个醒，esp8266本身可以用于智能家电和WiFi杀手，但是仅限于二代，三代不能用作WiFi杀手，所以大家买的时候要问下客服哦。</p>
<p><strong>友情提醒</strong>：后来我在 “拼朵朵” 上面看到有卖不到十元的esp8266，大家有兴趣的可以买着玩，不过不知道性能行不行，新手可以试试。</p>
<h2 id="如何下载固件"><a href="#如何下载固件" class="headerlink" title="如何下载固件"></a>如何下载固件</h2><p>大家把 esp8266 模块连接电脑之后，解压我给的 esp8266 固件文件</p>
<p><strong>1、安装驱动</strong><br>打开驱动文件<br><img src="https://img-blog.csdnimg.cn/20200511091038960.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>运行 <code>CH341SER.EXE</code>，同时确保 esp8266 模块已经连接电脑<br><img src="https://img-blog.csdnimg.cn/20200511091122964.png" alt="在这里插入图片描述"></p>
<p>点击安装<br><img src="https://img-blog.csdnimg.cn/20200511091341503.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200511091422210.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>如果弹出驱动安装失败，肯定是电脑和esp8266没有正确连接，就请打开 控制面板中的设备管理器，看看有没有端口显示</p>
<p><img src="https://img-blog.csdnimg.cn/20200511091538265.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>2、导入固件</strong><br>运行 <code>ESP8266Flasher.exe</code>，<br><img src="https://img-blog.csdnimg.cn/20200511091741296.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>选择设备管理器中查到的端口号，我这里是 COM3<br><img src="https://img-blog.csdnimg.cn/20200511091946617.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>选择 <code>Config</code> 并导入固件 <code>Wi-PWN.ino.CH.bin</code> 的地址</p>
<p>我这里是：<code>C:\Users\27511\Desktop\ESP8266\固件\Wi-PWN.ino.CH.bin</code><br><img src="https://img-blog.csdnimg.cn/20200511092113641.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>点击 <code>Advanced</code> ，其中 <code>Baudrate</code> 可在 esp8266 的背面找到具体数值，我这里是 9600<br><img src="https://img-blog.csdnimg.cn/20200511092456457.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>3、烧录</strong><br>好了之后，现在回到工具的operation这个页面也就是第一个页面，点击 <code>Flash</code><br><img src="https://img-blog.csdnimg.cn/2020051109281540.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>稍微等一等，直到光条拉满，就说明固件下载好了<br><img src="https://img-blog.csdnimg.cn/20200511100310789.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="手机连接wifi进行XX操作"><a href="#手机连接wifi进行XX操作" class="headerlink" title="手机连接wifi进行XX操作"></a>手机连接wifi进行XX操作</h2><p>手机应该可以搜到一个新的wifi,而且没有密码的，连接此网络，并浏览器登录地址：192.168.4.1<br><img src="https://img-blog.csdnimg.cn/20200511123134386.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200511123202986.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>点击接受，会自动给一个新的wifi登录密码，一般是：<code>rootaccess</code></p>
<p><img src="https://img-blog.csdnimg.cn/20200511123316340.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>点击继续之后会让我们重新连接<br><img src="https://img-blog.csdnimg.cn/20200511123438258.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>回到手机连接重新输入密码连接此网络，再登录 <code>192.168.4.1</code>，就可以进行钓鱼操作了</p>
<p><img src="https://img-blog.csdnimg.cn/20200511123531529.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200511123544901.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<blockquote>
<p>在这里提醒大家，此博文操作完全是技术分享，钓鱼操作请大家使用自己家的 wifi 或手机热点为对象，请勿因一己私利或单纯觉得好玩对别人造成麻烦。<br>.<br>下一个博文我会给大家分享如何用python暴力破解wifi密码，也只是纯技术分享，请大家勿用于非法操作<br>.<br>有兴趣的朋友可以进我的交流群，或者评论邮箱</p>
</blockquote>
]]></content>
      <categories>
        <category>硬件</category>
      </categories>
      <tags>
        <tag>硬件</tag>
        <tag>ESP8266</tag>
      </tags>
  </entry>
  <entry>
    <title>教女朋友学会用win10+yolov3+python训练自己的模型</title>
    <url>/%E6%95%99%E5%A5%B3%E6%9C%8B%E5%8F%8B%E5%AD%A6%E4%BC%9A%E7%94%A8win10+yolov3+python%E8%AE%AD%E7%BB%83%E8%87%AA%E5%B7%B1%E7%9A%84%E6%A8%A1%E5%9E%8B.html</url>
    <content><![CDATA[<blockquote>
<p>times：2020/3/23<br>操作系统：win10<br>环境：python 3.6<br>因为我之前把所有内容写在一篇文章里非常的乱，所以本文主线是训练自己的 yolo.h5 去识别图像中的人，所有小细节的操作，我都在文中添加了链接，新手的话需要注意看一下。<br>// 有任何的问题都可以直接评论，还有资料的话直接留言邮箱，说明问题//<br>//也可以评论下加下微信询问//<br>大家一起加油学习yolo，之后我会再出一篇详细介绍yolo代码的文章<br>新创建的小小交流群：977947271 想要资料的也可以在群里要哦<br>2020/5/30：</p>
</blockquote>
<p>如果你是 yolo 小白，或者环境配置等一直报错，请先参阅上一篇博文：<a href="https://blog.csdn.net/qq_45504119/article/details/105033492" target="_blank" rel="noopener">keras-yolov3目标检测详解——适合新手</a> (环境配置、用官方权重识别自己的图片)</p>
<a id="more"></a>
<h2 id="本文目的："><a href="#本文目的：" class="headerlink" title="本文目的："></a>本文目的：</h2><p>前面有篇文章说的是利用官方的权重直接识别自己的图片，我也展示了识别的效果。</p>
<p>今天我介绍一下如何创建自己的数据集去训练属于自己的 <code>model</code></p>
<h2 id="前提准备："><a href="#前提准备：" class="headerlink" title="前提准备："></a>前提准备：</h2><p><strong>1、配置好环境的 python、anaconda 或 pycharm</strong></p>
<p><strong>2、labelimg 软件：下载方法：</strong> <a href="https://blog.csdn.net/qq_45504119/article/details/105038483" target="_blank" rel="noopener">labelimg的下载与使用</a></p>
<p><strong>3、准备一些图片，创建训练需要的 VOC 文件</strong></p>
<p><strong>（1）</strong> 官方的VOC2007下载链接：<a href="http://host.robots.ox.ac.uk/pascal/VOC/voc2007/VOCtrainval_06-Nov-2007.tar" target="_blank" rel="noopener">voc2007下载链接</a>，可以从这里找需要的图片，或者一些有基础的朋友可以写爬虫去爬一些图片</p>
<p><strong>（2）</strong> voc2007百度网盘下载链接：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">链接：https:<span class="comment">//pan.baidu.com/s/18wqRTZDSz5NQEtvq0u0a1g </span></span><br><span class="line">提取码：hexy</span><br></pre></td></tr></table></figure>
<p><strong>（3）</strong> 可以自己准备图片，不过最好准备多一点<br>.<br>.</p>
<h2 id="正式训练步骤："><a href="#正式训练步骤：" class="headerlink" title="正式训练步骤："></a>正式训练步骤：</h2><p><strong>一、准备自己的voc2007数据集</strong></p>
<p>先用 pycharm 或 spyder 打开 keras-yolo3 文件夹，用 pycharm 或 spyder 是为了看文件夹更方便，直接在 anaconda 里运行也是可以的</p>
<p><strong>1、打开文件夹</strong></p>
<p>先按照这篇文章的步骤操作：<a href="https://blog.csdn.net/qq_45504119/article/details/105033492" target="_blank" rel="noopener">keras-yolov3目标检测详解——适合新手</a></p>
<p>完成后打开的文件夹应该是这样的：</p>
<p><img src="https://img-blog.csdnimg.cn/20200323190223242.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>2、新建voc2007数据集（存放自己的图片及标注信息）</strong></p>
<p>新建的文件夹：如下</p>
<p><img src="https://img-blog.csdnimg.cn/20200323194549165.png" alt="在这里插入图片描述"></p>
<p><code>ImageSets</code> 文件夹下还有个名为  <code>Main</code>  的小文件夹</p>
<p><img src="https://img-blog.csdnimg.cn/20200323201423401.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">VOCdevkit&#123;</span><br><span class="line">			VOC2007&#123;	Annotations</span><br><span class="line">						ImageSets&#123;main&#125;</span><br><span class="line">						JPEGImages	&#125;				</span><br><span class="line">										&#125;</span><br><span class="line">虽然表达的很丑，但是上面有图，应该还是可以看明白的</span><br><span class="line">注意：文件夹的名称必须和上面展示的一样，这是 yolo 默认的</span><br><span class="line">	  不然还需要改代码才行</span><br></pre></td></tr></table></figure>

<p><strong>3、用labelimg软件对自己的图片进行信息标注</strong></p>
<p>—-<strong>labelimg 的使用方法：</strong><a href="https://blog.csdn.net/qq_45504119/article/details/105038483" target="_blank" rel="noopener">labelimg 下载和标注 xlm 文件</a></p>
<blockquote>
<p>想要训练自己的模型就要学会 labelimg 的使用，实在不想学的…就评论一下邮箱，我直接把我标注好的 VOC2007 文件夹打包发给你们吧</p>
</blockquote>
<p>（1）需要训练的图片放在 <code>JPEGImages</code> 里面：</p>
<p><img src="https://img-blog.csdnimg.cn/20200323195853955.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20200323200108855.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>（2）labelimg 标注的 xlm 文件放在 <code>Annotations</code> 里面：</p>
<p><img src="https://img-blog.csdnimg.cn/20200323200132768.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20200323200159422.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>4、在 VOC2007  里新建一个 py 文件</strong></p>
<p><strong>我这里取名 voc.py</strong></p>
<p><img src="https://img-blog.csdnimg.cn/20200323201211208.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>voc.py 的代码：</strong></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line">trainval_percent = <span class="number">0.2</span> <span class="comment">#测试集占0.2</span></span><br><span class="line">train_percent = <span class="number">0.8</span>    <span class="comment">#训练集占0.8</span></span><br><span class="line">xmlfilepath = <span class="string">'Annotations'</span></span><br><span class="line">txtsavepath = <span class="string">'ImageSets\Main'</span></span><br><span class="line">total_xml = os.listdir(xmlfilepath)</span><br><span class="line"></span><br><span class="line">num = len(total_xml)</span><br><span class="line">list = range(num)</span><br><span class="line">tv = int(num * trainval_percent)</span><br><span class="line">tr = int(tv * train_percent)</span><br><span class="line">trainval = random.sample(list, tv)</span><br><span class="line">train = random.sample(trainval, tr)</span><br><span class="line"></span><br><span class="line">ftrainval = open(<span class="string">'ImageSets/Main/trainval.txt'</span>, <span class="string">'w'</span>)</span><br><span class="line">ftest = open(<span class="string">'ImageSets/Main/test.txt'</span>, <span class="string">'w'</span>)</span><br><span class="line">ftrain = open(<span class="string">'ImageSets/Main/train.txt'</span>, <span class="string">'w'</span>)</span><br><span class="line">fval = open(<span class="string">'ImageSets/Main/val.txt'</span>, <span class="string">'w'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> list:</span><br><span class="line">    name = total_xml[i][:<span class="number">-4</span>] + <span class="string">'\n'</span></span><br><span class="line">    <span class="keyword">if</span> i <span class="keyword">in</span> trainval:</span><br><span class="line">        ftrainval.write(name)</span><br><span class="line">        <span class="keyword">if</span> i <span class="keyword">in</span> train:</span><br><span class="line">            ftest.write(name)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            fval.write(name)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        ftrain.write(name)</span><br><span class="line"></span><br><span class="line">ftrainval.close()</span><br><span class="line">ftrain.close()</span><br><span class="line">fval.close()</span><br><span class="line">ftest.close()</span><br><span class="line">直接复制以上代码即可</span><br></pre></td></tr></table></figure>
<p><strong>然后运行 voc.py 文件</strong></p>
<p><strong>运行成功的话 mian 文件夹里会多了四个 txt 文件</strong></p>
<p><img src="https://img-blog.csdnimg.cn/2020032320220362.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>完成以上所有步骤，VOC 的处理就完成了</strong></p>
<p>.</p>
<p><strong>二、进行训练前的最后准备</strong></p>
<p><strong>1、修改 <code>voc_annotation.py</code> 文件并运行</strong></p>
<p>更改这里的  classes 的数量，你voc2007里标注了哪几种，你就留哪几种就行</p>
<p><img src="https://img-blog.csdnimg.cn/20200323203028861.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>比如我的 voc 中只标注了 “person”，那我只留下“person”，然后再运行一下就行</p>
<p><img src="https://img-blog.csdnimg.cn/20200323203328943.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>运行完成后会多出这几个 txt 文件</p>
<p><img src="https://img-blog.csdnimg.cn/20200323213806877.png" alt="在这里插入图片描述"></p>
<p><strong>2、修改 model_data</strong></p>
<p>将 coco_classes.txt 和 voc_classes.txt 中也只留下VOC2007 中所标注的那个类型</p>
<p><img src="https://img-blog.csdnimg.cn/20200323203712506.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>比如我标注的只有 “person”</p>
<p>那我只留下“person”</p>
<p><img src="https://img-blog.csdnimg.cn/20200323203936905.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20200323203955552.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>3、修改 yolo3.cfg</strong></p>
<p>大概在 610、696 和 783 行的位置，把 classes 的数值都改为 1</p>
<p><img src="https://img-blog.csdnimg.cn/20200323205031301.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/202003232052127.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20200323205103807.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>4、添加官方权重</strong></p>
<p>按照上篇博文步骤进行的朋友应该下载好了 <code>yolov3.weights</code> 文件并转为了 <code>yolo.h5</code> 文件</p>
<p>附上上篇博文的链接（里面有下载链接和转化方法）：<a href="https://blog.csdn.net/qq_45504119/article/details/105033492" target="_blank" rel="noopener">keras-yolov3目标检测详解——适合新手</a></p>
<p>将 <code>yolo.h5</code> 改名为 <code>yolo_weights.h5</code></p>
<p><img src="https://img-blog.csdnimg.cn/20200323213125140.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20200323213046688.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>5、新建 logs 文件夹存放训练的 权重文件</strong></p>
<p><img src="https://img-blog.csdnimg.cn/2020032321335393.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>6、开始训练</strong></p>
<p>在 <code>keras-yolo3-master</code> 文件夹下新建 一个名为 <code>trainyolo.py</code>  的文件</p>
<p>为什么不用 源文件中的train.py呢？？（因为我运行的时候一直出现库的报错…建议按照我的方法来）</p>
<p><code>trainyolo.py</code> 的代码(直接复制即可)：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line"><span class="keyword">import</span> keras.backend <span class="keyword">as</span> K</span><br><span class="line"><span class="keyword">from</span> keras.layers <span class="keyword">import</span> Input, Lambda</span><br><span class="line"><span class="keyword">from</span> keras.models <span class="keyword">import</span> Model</span><br><span class="line"><span class="keyword">from</span> keras.optimizers <span class="keyword">import</span> Adam</span><br><span class="line"><span class="keyword">from</span> keras.callbacks <span class="keyword">import</span> TensorBoard, ModelCheckpoint, ReduceLROnPlateau, EarlyStopping</span><br><span class="line"><span class="keyword">from</span> yolo3.model <span class="keyword">import</span> yolo_body</span><br><span class="line"><span class="keyword">from</span> yolo3.model <span class="keyword">import</span> yolo_loss</span><br><span class="line"><span class="keyword">from</span> keras.backend.tensorflow_backend <span class="keyword">import</span> set_session</span><br><span class="line"><span class="keyword">from</span> yolo3.utils <span class="keyword">import</span> get_random_data</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_classes</span><span class="params">(classes_path)</span>:</span></span><br><span class="line">    <span class="string">'''loads the classes'''</span></span><br><span class="line">    <span class="keyword">with</span> open(classes_path) <span class="keyword">as</span> f:</span><br><span class="line">        class_names = f.readlines()</span><br><span class="line">    class_names = [c.strip() <span class="keyword">for</span> c <span class="keyword">in</span> class_names]</span><br><span class="line">    <span class="keyword">return</span> class_names</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_anchors</span><span class="params">(anchors_path)</span>:</span></span><br><span class="line">    <span class="string">'''loads the anchors from a file'''</span></span><br><span class="line">    <span class="keyword">with</span> open(anchors_path) <span class="keyword">as</span> f:</span><br><span class="line">        anchors = f.readline()</span><br><span class="line">    anchors = [float(x) <span class="keyword">for</span> x <span class="keyword">in</span> anchors.split(<span class="string">','</span>)]</span><br><span class="line">    <span class="keyword">return</span> np.array(anchors).reshape(<span class="number">-1</span>, <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">data_generator</span><span class="params">(annotation_lines, batch_size, input_shape, anchors, num_classes)</span>:</span></span><br><span class="line">    <span class="string">'''data generator for fit_generator'''</span></span><br><span class="line">    n = len(annotation_lines)</span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        image_data = []</span><br><span class="line">        box_data = []</span><br><span class="line">        <span class="keyword">for</span> b <span class="keyword">in</span> range(batch_size):</span><br><span class="line">            <span class="keyword">if</span> i==<span class="number">0</span>:</span><br><span class="line">                np.random.shuffle(annotation_lines)</span><br><span class="line">            image, box = get_random_data(annotation_lines[i], input_shape, random=<span class="literal">True</span>)</span><br><span class="line">            image_data.append(image)</span><br><span class="line">            box_data.append(box)</span><br><span class="line">            i = (i+<span class="number">1</span>) % n</span><br><span class="line">        image_data = np.array(image_data)</span><br><span class="line">        box_data = np.array(box_data)</span><br><span class="line">        y_true = preprocess_true_boxes(box_data, input_shape, anchors, num_classes)</span><br><span class="line">        <span class="keyword">yield</span> [image_data, *y_true], np.zeros(batch_size)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">preprocess_true_boxes</span><span class="params">(true_boxes, input_shape, anchors, num_classes)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">assert</span> (true_boxes[..., <span class="number">4</span>]&lt;num_classes).all(), <span class="string">'class id must be less than num_classes'</span></span><br><span class="line">    </span><br><span class="line">    num_layers = len(anchors)//<span class="number">3</span> </span><br><span class="line">    anchor_mask = [[<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>], [<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>], [<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>]] <span class="keyword">if</span> num_layers==<span class="number">3</span> <span class="keyword">else</span> [[<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>], [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]]</span><br><span class="line"></span><br><span class="line">    true_boxes = np.array(true_boxes, dtype=<span class="string">'float32'</span>)</span><br><span class="line">    input_shape = np.array(input_shape, dtype=<span class="string">'int32'</span>) <span class="comment"># 416,416</span></span><br><span class="line">    boxes_xy = (true_boxes[..., <span class="number">0</span>:<span class="number">2</span>] + true_boxes[..., <span class="number">2</span>:<span class="number">4</span>]) // <span class="number">2</span></span><br><span class="line">    boxes_wh = true_boxes[..., <span class="number">2</span>:<span class="number">4</span>] - true_boxes[..., <span class="number">0</span>:<span class="number">2</span>]</span><br><span class="line">    true_boxes[..., <span class="number">0</span>:<span class="number">2</span>] = boxes_xy/input_shape[:]</span><br><span class="line">    true_boxes[..., <span class="number">2</span>:<span class="number">4</span>] = boxes_wh/input_shape[:]</span><br><span class="line"></span><br><span class="line">    m = true_boxes.shape[<span class="number">0</span>]</span><br><span class="line">    grid_shapes = [input_shape//&#123;<span class="number">0</span>:<span class="number">32</span>, <span class="number">1</span>:<span class="number">16</span>, <span class="number">2</span>:<span class="number">8</span>&#125;[l] <span class="keyword">for</span> l <span class="keyword">in</span> range(num_layers)]</span><br><span class="line">    y_true = [np.zeros((m,grid_shapes[l][<span class="number">0</span>],grid_shapes[l][<span class="number">1</span>],len(anchor_mask[l]),<span class="number">5</span>+num_classes),</span><br><span class="line">        dtype=<span class="string">'float32'</span>) <span class="keyword">for</span> l <span class="keyword">in</span> range(num_layers)]</span><br><span class="line">    anchors = np.expand_dims(anchors, <span class="number">0</span>)</span><br><span class="line">    anchor_maxes = anchors / <span class="number">2.</span></span><br><span class="line">    anchor_mins = -anchor_maxes</span><br><span class="line">    valid_mask = boxes_wh[..., <span class="number">0</span>]&gt;<span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> b <span class="keyword">in</span> range(m):</span><br><span class="line">        wh = boxes_wh[b, valid_mask[b]]</span><br><span class="line">        <span class="keyword">if</span> len(wh)==<span class="number">0</span>: <span class="keyword">continue</span></span><br><span class="line">        wh = np.expand_dims(wh, <span class="number">-2</span>)</span><br><span class="line">        box_maxes = wh / <span class="number">2.</span></span><br><span class="line">        box_mins = -box_maxes</span><br><span class="line"></span><br><span class="line">        intersect_mins = np.maximum(box_mins, anchor_mins)</span><br><span class="line">        intersect_maxes = np.minimum(box_maxes, anchor_maxes)</span><br><span class="line">        intersect_wh = np.maximum(intersect_maxes - intersect_mins, <span class="number">0.</span>)</span><br><span class="line">        intersect_area = intersect_wh[..., <span class="number">0</span>] * intersect_wh[..., <span class="number">1</span>]</span><br><span class="line">        box_area = wh[..., <span class="number">0</span>] * wh[..., <span class="number">1</span>]</span><br><span class="line">        anchor_area = anchors[..., <span class="number">0</span>] * anchors[..., <span class="number">1</span>]</span><br><span class="line">        iou = intersect_area / (box_area + anchor_area - intersect_area)</span><br><span class="line">        best_anchor = np.argmax(iou, axis=<span class="number">-1</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> t, n <span class="keyword">in</span> enumerate(best_anchor):</span><br><span class="line">            <span class="keyword">for</span> l <span class="keyword">in</span> range(num_layers):</span><br><span class="line">                <span class="keyword">if</span> n <span class="keyword">in</span> anchor_mask[l]:</span><br><span class="line">                    i = np.floor(true_boxes[b,t,<span class="number">0</span>]*grid_shapes[l][<span class="number">1</span>]).astype(<span class="string">'int32'</span>)</span><br><span class="line">                    j = np.floor(true_boxes[b,t,<span class="number">1</span>]*grid_shapes[l][<span class="number">0</span>]).astype(<span class="string">'int32'</span>)</span><br><span class="line">                    k = anchor_mask[l].index(n)</span><br><span class="line">                    c = true_boxes[b,t, <span class="number">4</span>].astype(<span class="string">'int32'</span>)</span><br><span class="line">                    y_true[l][b, j, i, k, <span class="number">0</span>:<span class="number">4</span>] = true_boxes[b,t, <span class="number">0</span>:<span class="number">4</span>]</span><br><span class="line">                    y_true[l][b, j, i, k, <span class="number">4</span>] = <span class="number">1</span></span><br><span class="line">                    y_true[l][b, j, i, k, <span class="number">5</span>+c] = <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> y_true</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">config = tf.ConfigProto()</span><br><span class="line">config.gpu_options.allocator_type = <span class="string">'BFC'</span></span><br><span class="line">config.gpu_options.per_process_gpu_memory_fraction = <span class="number">0.7</span></span><br><span class="line">config.gpu_options.allow_growth = <span class="literal">True</span></span><br><span class="line">set_session(tf.Session(config=config)) </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    annotation_path = <span class="string">'2007_train.txt'</span></span><br><span class="line">    classes_path = <span class="string">'model_data/voc_classes.txt'</span>    </span><br><span class="line">    anchors_path = <span class="string">'model_data/yolo_anchors.txt'</span></span><br><span class="line">    weights_path = <span class="string">'model_data/yolo_weights.h5'</span></span><br><span class="line">    class_names = get_classes(classes_path)</span><br><span class="line">    anchors = get_anchors(anchors_path)</span><br><span class="line">    num_classes = len(class_names)</span><br><span class="line">    num_anchors = len(anchors)</span><br><span class="line">    log_dir = <span class="string">'logs/'</span></span><br><span class="line">    input_shape = (<span class="number">416</span>,<span class="number">416</span>)</span><br><span class="line"></span><br><span class="line">    K.clear_session()</span><br><span class="line"></span><br><span class="line">    image_input = Input(shape=(<span class="literal">None</span>, <span class="literal">None</span>, <span class="number">3</span>))</span><br><span class="line">    h, w = input_shape</span><br><span class="line"></span><br><span class="line">    print(<span class="string">'Create YOLOv3 model with &#123;&#125; anchors and &#123;&#125; classes.'</span>.format(num_anchors, num_classes))</span><br><span class="line">    model_body = yolo_body(image_input, num_anchors//<span class="number">3</span>, num_classes)</span><br><span class="line">    </span><br><span class="line">    print(<span class="string">'Load weights &#123;&#125;.'</span>.format(weights_path))</span><br><span class="line">    model_body.load_weights(weights_path, by_name=<span class="literal">True</span>, skip_mismatch=<span class="literal">True</span>)</span><br><span class="line">    </span><br><span class="line">    y_true = [Input(shape=(h//&#123;<span class="number">0</span>:<span class="number">32</span>, <span class="number">1</span>:<span class="number">16</span>, <span class="number">2</span>:<span class="number">8</span>&#125;[l], w//&#123;<span class="number">0</span>:<span class="number">32</span>, <span class="number">1</span>:<span class="number">16</span>, <span class="number">2</span>:<span class="number">8</span>&#125;[l], \</span><br><span class="line">        num_anchors//<span class="number">3</span>, num_classes+<span class="number">5</span>)) <span class="keyword">for</span> l <span class="keyword">in</span> range(<span class="number">3</span>)]</span><br><span class="line"></span><br><span class="line">    loss_input = [*model_body.output, *y_true]</span><br><span class="line">    model_loss = Lambda(yolo_loss, output_shape=(<span class="number">1</span>,), name=<span class="string">'yolo_loss'</span>,</span><br><span class="line">        arguments=&#123;<span class="string">'anchors'</span>: anchors, <span class="string">'num_classes'</span>: num_classes, <span class="string">'ignore_thresh'</span>: <span class="number">0.5</span>&#125;)(loss_input)</span><br><span class="line"></span><br><span class="line">    model = Model([model_body.input, *y_true], model_loss)</span><br><span class="line"></span><br><span class="line">    freeze_layers = <span class="number">249</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(freeze_layers): model_body.layers[i].trainable = <span class="literal">False</span></span><br><span class="line">    print(<span class="string">'Freeze the first &#123;&#125; layers of total &#123;&#125; layers.'</span>.format(freeze_layers, len(model_body.layers)))</span><br><span class="line"></span><br><span class="line">    logging = TensorBoard(log_dir=log_dir)</span><br><span class="line">    checkpoint = ModelCheckpoint(log_dir + <span class="string">'ep&#123;epoch:03d&#125;-loss&#123;loss:.3f&#125;-val_loss&#123;val_loss:.3f&#125;.h5'</span>,</span><br><span class="line">        monitor=<span class="string">'val_loss'</span>, save_weights_only=<span class="literal">True</span>, save_best_only=<span class="literal">False</span>, period=<span class="number">2</span>)</span><br><span class="line">    reduce_lr = ReduceLROnPlateau(monitor=<span class="string">'val_loss'</span>, factor=<span class="number">0.5</span>, patience=<span class="number">2</span>, verbose=<span class="number">1</span>)</span><br><span class="line">    early_stopping = EarlyStopping(monitor=<span class="string">'val_loss'</span>, min_delta=<span class="number">0</span>, patience=<span class="number">6</span>, verbose=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    val_split = <span class="number">0.2</span></span><br><span class="line">    <span class="keyword">with</span> open(annotation_path) <span class="keyword">as</span> f:</span><br><span class="line">        lines = f.readlines()</span><br><span class="line">    np.random.seed(<span class="number">10101</span>)</span><br><span class="line">    np.random.shuffle(lines)</span><br><span class="line">    np.random.seed(<span class="literal">None</span>)</span><br><span class="line">    num_val = int(len(lines)*val_split)</span><br><span class="line">    num_train = len(lines) - num_val</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> <span class="literal">True</span>:</span><br><span class="line">        model.compile(optimizer=Adam(lr=<span class="number">1e-3</span>), loss=&#123;</span><br><span class="line">            <span class="string">'yolo_loss'</span>: <span class="keyword">lambda</span> y_true, y_pred: y_pred&#125;)</span><br><span class="line"></span><br><span class="line">        batch_size = <span class="number">1</span></span><br><span class="line">        print(<span class="string">'Train on &#123;&#125; samples, val on &#123;&#125; samples, with batch size &#123;&#125;.'</span>.format(num_train, num_val, batch_size))</span><br><span class="line">        model.fit_generator(data_generator(lines[:num_train], batch_size, input_shape, anchors, num_classes),</span><br><span class="line">                steps_per_epoch=max(<span class="number">1</span>, num_train//batch_size),</span><br><span class="line">                validation_data=data_generator(lines[num_train:], batch_size, input_shape, anchors, num_classes),</span><br><span class="line">                validation_steps=max(<span class="number">1</span>, num_val//batch_size),</span><br><span class="line">                epochs=<span class="number">50</span>,</span><br><span class="line">                initial_epoch=<span class="number">0</span>,</span><br><span class="line">                callbacks=[logging, checkpoint])</span><br><span class="line">        model.save_weights(log_dir + <span class="string">'trained_weights_stage_1.h5'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(freeze_layers): model_body.layers[i].trainable = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="literal">True</span>:</span><br><span class="line">        model.compile(optimizer=Adam(lr=<span class="number">1e-4</span>), loss=&#123;</span><br><span class="line">            <span class="string">'yolo_loss'</span>: <span class="keyword">lambda</span> y_true, y_pred: y_pred&#125;)</span><br><span class="line"></span><br><span class="line">        batch_size = <span class="number">1</span></span><br><span class="line">        print(<span class="string">'Train on &#123;&#125; samples, val on &#123;&#125; samples, with batch size &#123;&#125;.'</span>.format(num_train, num_val, batch_size))</span><br><span class="line">        model.fit_generator(data_generator(lines[:num_train], batch_size, input_shape, anchors, num_classes),</span><br><span class="line">                steps_per_epoch=max(<span class="number">1</span>, num_train//batch_size),</span><br><span class="line">                validation_data=data_generator(lines[num_train:], batch_size, input_shape, anchors, num_classes),</span><br><span class="line">                validation_steps=max(<span class="number">1</span>, num_val//batch_size),</span><br><span class="line">                epochs=<span class="number">100</span>,</span><br><span class="line">                initial_epoch=<span class="number">50</span>,</span><br><span class="line">                callbacks=[logging, checkpoint])</span><br><span class="line">        model.save_weights(log_dir + <span class="string">'last1.h5'</span>)</span><br></pre></td></tr></table></figure>
<p>然后运行<code>trainyolo.py</code> 的代码</p>
<p><img src="https://img-blog.csdnimg.cn/2020032321563349.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><strong>成功开始训练，训练时间比较长，需要耐心等待</strong></p>
<p>.<br>.</p>
<h2 id="训练完成："><a href="#训练完成：" class="headerlink" title="训练完成："></a>训练完成：</h2><p>因为我的电脑配置比较差，所以训练了很长很长时间，这是我前几天训练的结果</p>
<p><img src="https://img-blog.csdnimg.cn/20200323220016562.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>训练好的权重都放在 logs 文件夹下的 000 文件夹里：</p>
<p><img src="https://img-blog.csdnimg.cn/20200323220244528.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>按理说训练会经过两个阶段，且自动从一堆 loss 中选则出 loss最低的文件(应该是 earlystop函数的作用)：</p>
<p>应该就是下面的框选的这两个 h5文件，都可以使用</p>
<p><img src="https://img-blog.csdnimg.cn/20200323220350578.png" alt="在这里插入图片描述"></p>
<p>使用的方法就和前面那篇博文操作一样了（用这个h5权重模型去识别自己图片），下面给大家展示一下我训练的模型的结果吧</p>
<p><img src="https://img-blog.csdnimg.cn/20200323221119292.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20200323221200911.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>对比使用官方的权重文件来说，我的模型可以仅仅识别出图片中的人体，而且识别效果还不赖，感觉还不错吧  哈哈哈</p>
<h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><p>以上过程皆为刚刚我亲自操作，全程没有任何问题</p>
<p>如果有朋友对这篇文章的任何内容感到不明白的请及时评论提出问题，我怕时间一久我也会忘，想要资料的直接评论你们的联系方式就行，我有时间会回复的。</p>
<p>这个暂时告一段落，接下来我会在 matlab 中找一些算法去实现同样的功能，有兴趣的朋友可以评论一下一起探讨。</p>
]]></content>
      <categories>
        <category>python</category>
        <category>机器视觉</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>机器视觉</tag>
      </tags>
  </entry>
  <entry>
    <title>新手如何使用anaconda（python）—简单介绍</title>
    <url>/%E6%96%B0%E6%89%8B%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8anaconda%EF%BC%88python%EF%BC%89%E2%80%94%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D.html</url>
    <content><![CDATA[<p>我之前用 python 的 IDLE 去写代码，但是在深度学习的部分，代码频频报错，因为 python 的很多库都没有，而自己去下载的话速度极其的慢。</p>
<p>所以下载 anaconda 了， anaconda 里已经下载了很多库（虽然依然没有我想要的库），但相比单单一个 python 软件便好用许多。</p>
<p>这里介绍一下新手如何快速使用 anaconda（我也是刚接触 python，好在比C简单多了，和 matlab 又很像）：</p>
<a id="more"></a>
<p>我们在：</p>
<p>清华镜像下载   anaconda（下载过程看我另一篇博文）：<br><a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/</a></p>
<p>安装好了之后</p>
<p><img src="https://img-blog.csdnimg.cn/20200217161343829.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>开始界面应该有这些东西，不过我们需要的一般只有 Jupyter Notebook 和  Anaconda Prompt。</p>
<p>Jupyter Notebook 可以当作 python 来用，只是界面不同。 Anaconda Prompt 就是和windows 的 cmd 差不多。</p>
<p><img src="https://img-blog.csdnimg.cn/20200217162002355.png" alt="在这里插入图片描述"></p>
<p>在prompt里输入python，则就会显示python的版本，我这里是3.6.5。</p>
<p>并进入python的编程环境：</p>
<p><img src="https://img-blog.csdnimg.cn/20200217163039966.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>不过最好不要在这里写代码吧，因为…上图就是教训呀！（新手不懂。。。）</p>
<p>回归正题：<br>代码一般都在Jupyter Notebook里写<br>这里打开Jupyter Notebook</p>
<p><img src="https://img-blog.csdnimg.cn/2020021716330039.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200217163404727.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>电脑会自动打开网页 jupyter , anaconda中的python就是个web程序。在这里就可以开始python之旅了。上图现实的打开文件路径，可以打开里面储存的文件。</p>
<p><img src="https://img-blog.csdnimg.cn/20200217164043772.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>点击new按钮就可以创建新的text file 和folder.</p>
<p>打开text:</p>
<p><img src="https://img-blog.csdnimg.cn/2020021716452081.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述">就可以编辑文字和代码。</p>
<p>点击 python 3 就可以正常的进行代码的编写了，下面随手写了个新手代码，按住shift+Enter就可以运行代码了。</p>
<p><img src="https://img-blog.csdnimg.cn/20200217165201133.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>我也是个新手，因为 MATLAB 项目的需要所以转战 python。</p>
<p>接下来我会继续更新 MATLAB 项目的部分，也会开始python爬虫的编写。</p>
<p>欢迎各位指正错误。</p>
]]></content>
      <categories>
        <category>python</category>
        <category>入门</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>anaconda</tag>
      </tags>
  </entry>
  <entry>
    <title>运行SSD-TensorFlow报错：tensorflow.python.framework.errors_impl.NotFoundError：</title>
    <url>/%E8%BF%90%E8%A1%8CSSD-TensorFlow%E6%8A%A5%E9%94%99%EF%BC%9Atensorflow.python.framework.errors_impl.NotFoundError%EF%BC%9A.html</url>
    <content><![CDATA[<p>玩了很久的 yolo，今天下载了 SSD-TensorFlow 的代码，不过在运行的时候出现了一点问题</p>
<p>官方的介绍是运行：<code>jupyter notebook notebooks/ssd_notebook.ipynb</code></p>
<p>但是在 <code>jupyter notebook</code> 中运行多有不便，我就将代码复制在了下面文件夹里，与 <code>ssd_notebook.ipynb</code> 放在了一块，可是出现报错：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">tensorflow.python.framework.errors_impl.NotFoundError: FindFirstFile failed <span class="keyword">for</span></span><br><span class="line">…/checkpoints:ϵͳ\udcd5Ҳ\udcbb\udcb5\udcbdָ\udcb6\udca8\udcb5\udcc4·\udcbe\udcb6\udca1\udca3 </span><br><span class="line">; No such process</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p><img src="https://img-blog.csdnimg.cn/20200506152235306.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>可以看到：在 <code>demo_test.py</code> 的大概15、42、73行的位置，路径全都写错了</p>
<p><img src="https://img-blog.csdnimg.cn/20200506153032938.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20200506153046666.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p><img src="https://img-blog.csdnimg.cn/20200506153053557.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>以43行为例将：<code>ckpt_filename = &#39;.../checkpoints/ssd_300_vgg.ckpt&#39;</code> 改为：<code>ckpt_filename = &#39;./checkpoints/ssd_300_vgg.ckpt&#39;</code></p>
<p><img src="https://img-blog.csdnimg.cn/20200506153309230.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>而且有一点要注意，我这里路径写的是相对路径，也就是从我 <code>demo_test.py</code> 所在的位置到 <code>checkpoints</code> 文件所在的相对位置，所以很明显路径需要添加东西，或者我直接将  <code>demo_test.py</code> 文件放在主文件夹下面即可：</p>
<p><img src="https://img-blog.csdnimg.cn/20200506153618543.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<h2 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h2><p><strong>1、将路径前面的点删除至只留下一个</strong></p>
<p><strong>2、注意相对路径，否则会报同样的错误</strong></p>
<hr>
<blockquote>
<p>题外话：<br>我也只是个学生，做项目的时候刚好看到 yolo 了，就玩了一阵子，现在准备玩 ssd ，这些只是很简单的东西，之后我会慢慢的把我做的比较深入的东西写出来(说实话…一般没人看)，我准备创建一个开源项目的交流群。<br>我本身很菜，但是玩过一些开源的项目，本身电气专业，也喜欢自己用单片机做东西，现在自己发过论文、国际发明专利、国内发明专利。马上准备考研了，也希望能遇到一些大佬，给些指点，也可以大家一起讨论问题，解决问题。<br>群号：977947271</p>
</blockquote>
<p><img src="https://img-blog.csdnimg.cn/20200506154001109.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>python</category>
        <category>机器视觉</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>机器视觉</tag>
      </tags>
  </entry>
  <entry>
    <title>运行sh文件报错：python3 command not found——已解决</title>
    <url>/%E8%BF%90%E8%A1%8Csh%E6%96%87%E4%BB%B6%E6%8A%A5%E9%94%99%EF%BC%9Apython3%EF%BC%9A%20command%20not%20found%E2%80%94%E2%80%94%E5%B7%B2%E8%A7%A3%E5%86%B3.html</url>
    <content><![CDATA[<p>我使用windows下的 anaconda 运行 sh 文件时报错：<code>python3: command not found</code></p>
<p>可是我就是在 anaconda 配置的 python3.6 环境下运行的 sh 文件啊</p>
<p>网上没有找的任何有效的解决方法</p>
<p>后来我打开 sh 文件看了下代码：<br>（把 sh 后缀改成 txt 后缀就可以打开文件）</p>
<a id="more"></a>
<p><img src="https://img-blog.csdnimg.cn/20200316145609226.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>发现框住的那一行代码不就是我们平时运行 py 文件的命令嘛</p>
<p>所以我把它改成：<code>python -u train.py \</code></p>
<p><img src="https://img-blog.csdnimg.cn/20200316145810476.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQ1NTA0MTE5,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p>
<p>结果就可以正常运行了。</p>
<p>我已经解决了问题，如果有对这种操作有任何问题的可以评论</p>
]]></content>
      <categories>
        <category>python</category>
        <category>error&amp;库</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>error&amp;库</tag>
      </tags>
  </entry>
  <entry>
    <title>鱼C论坛小甲鱼Python课后题</title>
    <url>/%E9%B1%BCC%E8%AE%BA%E5%9D%9B%E5%B0%8F%E7%94%B2%E9%B1%BCPython%E8%AF%BE%E5%90%8E%E9%A2%98.html</url>
    <content><![CDATA[<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">本人是从小甲鱼的python视频一步步过来的</span><br><span class="line">所以刚看到小甲鱼的课后题库就转载过来和大家分享</span><br><span class="line">如有侵权，请联系删除</span><br></pre></td></tr></table></figure>


<p>之前python时就是学习的小甲鱼的课程</p>
<p>现在看了那么多的教学视频，感觉还是小甲鱼的视频有点意思</p>
<p>正定不失风趣，正经不失一丝**（看过小甲鱼视频的应该都懂，哈哈哈哈）</p>
<p>刚刚在百度文库中看了小甲鱼的Python课后题总结，毕竟小甲鱼专门搞得课后题，正确率就比其他的整合的题目要准确很多：</p>
<p>小甲鱼Python课后题百度文库：<br><a href="https://wenku.baidu.com/view/84d437faf021dd36a32d7375a417866fb94ac067.html" target="_blank" rel="noopener">https://wenku.baidu.com/view/84d437faf021dd36a32d7375a417866fb94ac067.html</a></p>
]]></content>
      <categories>
        <category>python</category>
        <category>入门</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
</search>
